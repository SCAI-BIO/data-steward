{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/DataUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/DataUpload.vue","mtime":1632903542504},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB2dWUyRHJvcHpvbmUgZnJvbSAidnVlMi1kcm9wem9uZSI7CmltcG9ydCAidnVlMi1kcm9wem9uZS9kaXN0L3Z1ZTJEcm9wem9uZS5taW4uY3NzIjsKaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSAidXVpZCI7CmltcG9ydCBNIGZyb20gIm1hdGVyaWFsaXplLWNzcyI7CmltcG9ydCAkIGZyb20gImpxdWVyeSI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgdnVlRHJvcHpvbmU6IHZ1ZTJEcm9wem9uZSwKICB9LAogIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiB7CiAgICAgIGRyb3B6b25lT3B0aW9uczogewogICAgICAgIHVybDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9DTElOSUNBTFVSTCArICIvcG9zdC9iYXNpYy11cGxvYWQiLAogICAgICAgIHRodW1ibmFpbFdpZHRoOiAxNTAsCiAgICAgICAgYWRkUmVtb3ZlTGlua3M6IHRydWUsCiAgICAgICAgbWF4RmlsZXM6IDEsCiAgICAgIH0sCiAgICAgIG5vdEZvdW5kOiBbXSwKICAgICAgYWxsQXR0cmlidXRlczoge30sCiAgICAgIGFsbFNvdXJjZXM6IHt9LAogICAgICBzb3VyY2VMaXN0OiBbXSwKICAgICAgaWQ6IHV1aWR2NCgpLAogICAgICB1cGRhdGVVcmw6IHByb2Nlc3MuZW52LlZVRV9BUFBfQ0xJTklDQUxVUkwgKyAiL2dldC9jYWNoZSIsCiAgICAgIGludGVydmFsOiAyMDAwLAogICAgICBwcm9ncmVzczogMCwKICAgICAgb3B0aW9uczogewogICAgICAgIGNvbG9yOiAiIzU3OWZkYyIsCiAgICAgICAgImVtcHR5LWNvbG9yIjogIiMzMjRjN2UiLAogICAgICAgIHNpemU6IDMwMCwKICAgICAgICB0aGlja25lc3M6IDUsCiAgICAgICAgImVtcHR5LXRoaWNrbmVzcyI6IDMsCiAgICAgICAgImxpbmUtbW9kZSI6ICJvdXQgNSIsCiAgICAgICAgYW5pbWF0aW9uOiAicnMgNzAwIDEwMDAiLAogICAgICAgICJmb250LXNpemUiOiAiMS41cmVtIiwKICAgICAgICAiZm9udC1jb2xvciI6ICJ3aGl0ZSIsCiAgICAgIH0sCiAgICB9OwogIH0sCiAgYXN5bmMgY3JlYXRlZCgpIHsKICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSBhd2FpdCBheGlvcy5nZXQoCiAgICAgIHByb2Nlc3MuZW52LlZVRV9BUFBfQ0xJTklDQUxVUkwgKyAiL2dldC9hdHRyaWJ1dGVzL2FsbCIKICAgICk7CiAgICBjb25zdCBzb3VyY2VzX2FsbCA9IGF3YWl0IGF4aW9zLmdldCgKICAgICAgcHJvY2Vzcy5lbnYuVlVFX0FQUF9DTElOSUNBTFVSTCArICIvZ2V0L3NvdXJjZXMvYWxsIgogICAgKTsKICAgIHZhciBzb3VyY2VPYmogPSB7fTsKICAgIHZhciBzb3VyY2VMaXN0ID0gW107CiAgICBzb3VyY2VzX2FsbFsiZGF0YSJdWyJzb3VyY2VzIl0uZm9yRWFjaCgoZWxlbSkgPT4gewogICAgICBzb3VyY2VPYmpbZWxlbV0gPSBudWxsOwogICAgICBzb3VyY2VMaXN0LnB1c2goZWxlbSk7CiAgICB9KTsKICAgIHRoaXMuYWxsU291cmNlcyA9IHNvdXJjZU9iajsKICAgIHRoaXMuc291cmNlTGlzdCA9IHNvdXJjZUxpc3Q7CiAgICB2YXIgYXR0ck9iaiA9IHt9OwogICAgYXR0cmlidXRlc1siZGF0YSJdWyJhdHRyaWJ1dGVzIl0uZm9yRWFjaCgoYXR0cikgPT4gewogICAgICBhdHRyT2JqW2F0dHIubmFtZV0gPSBudWxsOwogICAgfSk7CiAgICB0aGlzLmFsbEF0dHJpYnV0ZXMgPSBhdHRyT2JqOwogIH0sCgogIG1vdW50ZWQoKXsKICAgIHZhciBlbGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3NlbGVjdCcpOwogICAgTS5Gb3JtU2VsZWN0LmluaXQoZWxlbXMpOwogIH0sCiAgdXBkYXRlZCgpIHsKICAgIHZhciBlbGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5hdXRvY29tcGxldGUiKTsKCiAgICBNLkF1dG9jb21wbGV0ZS5pbml0KGVsZW1zLCB7IGRhdGE6IHRoaXMuYWxsQXR0cmlidXRlcyB9KTsKICAgIHZhciBlbGVtc19zb3VyY2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIuYXV0b2NvbXBsZXRlX3NvdXJjZSIpOwoKICAgIE0uQXV0b2NvbXBsZXRlLmluaXQoZWxlbXNfc291cmNlLCB7CiAgICAgIGRhdGE6IHRoaXMuYWxsU291cmNlcywKICAgICAgb25BdXRvY29tcGxldGU6IGZ1bmN0aW9uICh2YWwpIHsKICAgICAgICB2YXIgZW1wdHlGaWVsZHMgPSBbXTsKICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIuYXV0b2NvbXBsZXRlX3NvdXJjZSIpLmZvckVhY2goKGVsZW0pID0+IHsKICAgICAgICAgIGlmIChlbGVtLnZhbHVlID09IG51bGwgfHwgZWxlbS52YWx1ZSA9PSAiIikgewogICAgICAgICAgICBlbXB0eUZpZWxkcy5wdXNoKGVsZW0pOwogICAgICAgICAgfQogICAgICAgIH0pOwoKICAgICAgICBlbXB0eUZpZWxkcy5mb3JFYWNoKChlbGVtKSA9PiB7CiAgICAgICAgICBlbGVtLnZhbHVlID0gdmFsOwogICAgICAgIH0pOwogICAgICAgIE0udXBkYXRlVGV4dEZpZWxkcygpOwogICAgICB9LAogICAgfSk7CiAgfSwKCiAgbWV0aG9kczogewoKCiAgICByZWZyZXNoQXR0cmlidXRlczogYXN5bmMgZnVuY3Rpb24oKXsKICAgICAgICAgIGNvbnN0IGF0dHJpYnV0ZXMgPSBhd2FpdCBheGlvcy5nZXQoCiAgICAgIHByb2Nlc3MuZW52LlZVRV9BUFBfQ0xJTklDQUxVUkwgKyAiL2dldC9hdHRyaWJ1dGVzL2FsbCIKICAgICk7CiAgICBjb25zdCBzb3VyY2VzX2FsbCA9IGF3YWl0IGF4aW9zLmdldCgKICAgICAgcHJvY2Vzcy5lbnYuVlVFX0FQUF9DTElOSUNBTFVSTCArICIvZ2V0L3NvdXJjZXMvYWxsIgogICAgKTsKICAgIHZhciBzb3VyY2VPYmogPSB7fTsKICAgIHNvdXJjZXNfYWxsWyJkYXRhIl1bInNvdXJjZXMiXS5mb3JFYWNoKChlbGVtKSA9PiB7CiAgICAgIHNvdXJjZU9ialtlbGVtXSA9IG51bGw7CiAgICB9KTsKICAgIHRoaXMuYWxsU291cmNlcyA9IHNvdXJjZU9iajsKCiAgICB2YXIgYXR0ck9iaiA9IHt9OwogICAgYXR0cmlidXRlc1siZGF0YSJdWyJhdHRyaWJ1dGVzIl0uZm9yRWFjaCgoYXR0cikgPT4gewogICAgICBhdHRyT2JqW2F0dHIubmFtZV0gPSBudWxsOwogICAgfSk7CiAgICB0aGlzLmFsbEF0dHJpYnV0ZXMgPSBhdHRyT2JqOwogICAgTS50b2FzdCh7aHRtbDogIlJlZnJlc2hlZCB2YXJpYWJsZSBhdXRvY29tcGxldGUuLi4ifSk7CgogICAgfSwKICAgIGFkZE1hcHBpbmc6IGFzeW5jIGZ1bmN0aW9uIChhdHRyKSB7CiAgICAgIHZhciB0YXJnZXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChhdHRyICsgIl9tYXBwaW5nX2ZpZWxkIikudmFsdWU7CiAgICAgIGlmICh0YXJnZXQgPT0gbnVsbCB8fCB0YXJnZXQgPT0gIiIpIHsKICAgICAgICBNLnRvYXN0KHsgaHRtbDogIlBsZWFzZSBjaGVjayB5b3VyIGlucHV0ISIgfSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgc291cmNlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYXR0ciArICJfc291cmNlX2ZpZWxkIikudmFsdWU7CgogICAgICBjb25zdCBtYXBwaW5nUmVzcG9uc2UgPSBhd2FpdCBheGlvcyh7CiAgICAgICAgbWV0aG9kOiAicG9zdCIsCiAgICAgICAgdXJsOiBwcm9jZXNzLmVudi5WVUVfQVBQX0NMSU5JQ0FMVVJMICsgIi9wb3N0L2Jhc2ljLW1hcHBpbmciLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIHNvdXJjZTogc291cmNlLAogICAgICAgICAgc291cmNlX2F0dHJpYnV0ZTogYXR0ciwKICAgICAgICAgIHRhcmdldDogdGFyZ2V0LAogICAgICAgIH0sCiAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlLAogICAgICB9KTsKICAgICAgaWYgKG1hcHBpbmdSZXNwb25zZS5kYXRhWyJtZXNzYWdlIl0gPT0gIm9rIikgewogICAgICAgIHRoaXMubm90Rm91bmQgPSB0aGlzLm5vdEZvdW5kLmZpbHRlcigoaXRlbSkgPT4gaXRlbSAhPSBhdHRyKTsKICAgICAgICBNLnRvYXN0KHsgaHRtbDogIllvdSBzdWNjZXNzZnVsbHkgbWFwcGVkOiAiICsgYXR0ciB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChhdHRyICsgIl9mZWVkYmFjayIpLmlubmVyVGV4dCA9CiAgICAgICAgICBtYXBwaW5nUmVzcG9uc2UuZGF0YVsibWVzc2FnZSJdOwogICAgICB9CiAgICAgIHJldHVybjsKICAgIH0sCiAgICBhZGRlZEZpbGU6IGZ1bmN0aW9uICgpIHsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZlZWRiYWNrIikuaW5uZXJUZXh0ID0KICAgICAgICAiWW91ciBkYXRhIGlzIGdldHRpbmcgcHJvY2Vzc2VkIjsKICAgIH0sCiAgICBzZXRQcm9ncmVzczogZnVuY3Rpb24gKHByb2cpIHsKICAgICAgdGhpcy5wcm9ncmVzcyA9IHByb2c7CiAgICAgIHJldHVybjsKICAgIH0sCgogICAgY2hlY2tfc3RhdHVzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgJC5hamF4KHsKICAgICAgICB0eXBlOiAiR0VUIiwKICAgICAgICB1cmw6IHNlbGYudXBkYXRlVXJsLAogICAgICAgIGRhdGE6IHsgX2lkOiBzZWxmLmlkIH0sCiAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgaWYgKGUubWVzc2FnZSAhPSBudWxsICYmIGVbIm1lc3NhZ2UiXVsic3RhdHVzIl0gPT0gImRvbmUiKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCJEb25lIik7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIGlmKGUucmVzcG9uc2VKU09OWydtZXNzYWdlJ10gPT0gbnVsbCl7CiAgICAgICAgICAgIHNldFRpbWVvdXQoc2VsZi5jaGVja19zdGF0dXMsIHNlbGYuaW50ZXJ2YWwpOwogICAgICAgICAgfQogICAgICAgICAgdmFyIG5vdEZvdW5kTGlzdCA9IGUucmVzcG9uc2VKU09OWyJtZXNzYWdlIl1bIm5vdF9mb3VuZCJdOwoKICAgICAgICAgIGlmIChlLnJlc3BvbnNlSlNPTlsibWVzc2FnZSJdWyJzdGF0dXMiXSA9PSAiZG9uZSIpIHsKICAgICAgICAgICAgc2VsZi5wcm9ncmVzcyA9IDEwMDsKICAgICAgICAgICAgLy8kKCIjbG9hZGVyIikuYWRkQ2xhc3MoImhpZGUiKTsKICAgICAgICAgICAgJCgiI3RvdGFsQ291bnQiKS5oaWRlKCk7CgogICAgICAgICAgICBzZWxmLm5vdEZvdW5kID0gbm90Rm91bmRMaXN0OwogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZmVlZGJhY2siKS5pbm5lclRleHQgPQogICAgICAgICAgICAgIGUucmVzcG9uc2VKU09OWyJtZXNzYWdlIl1bIm1lc3NhZ2UiXTsKCiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJwb3N0X3Byb2Nlc3NfZmVlZGJhY2siKS5pbm5lclRleHQgPQogICAgICAgICAgICAgIGUucmVzcG9uc2VKU09OWyJtZXNzYWdlIl1bIm1lc3NhZ2UiXTsKICAgICAgICAgICAgLy9kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG90YWxPTFMnKS5pbm5lclRleHQgPSAiSW1wb3J0ZWQgZnJvbSBPTFM6ICIgICsgZS5yZXNwb25zZUpTT05bJ21lc3NhZ2UnXVsnb2xzX2NvdW50J107CiAgICAgICAgICAgICQoIiNsb2FkZXIiKS5oaWRlKCk7CiAgICAgICAgICAgIHJldHVybjsKCiAgICAgICAgICAgIC8qKgogICAgICAgICAgICAgKgogICAgICAgICAgICAgKiBBZGQgbm90IGZvdW5kIGZlZWQgYmFjawogICAgICAgICAgICAgKi8KICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHNlbGYubm90Rm91bmQgPSBub3RGb3VuZExpc3Q7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0b3RhbENvdW50IikuaW5uZXJUZXh0ID0KICAgICAgICAgICAgICAiUHJvY2Vzc2luZyAiICsKICAgICAgICAgICAgICBlLnJlc3BvbnNlSlNPTlsibWVzc2FnZSJdWyJ0b3RhbCJdICsKICAgICAgICAgICAgICAiIGxpbmVzIG9mIGRhdGEuLi4iOwogICAgICAgICAgICBzZWxmLnByb2dyZXNzID0gZS5yZXNwb25zZUpTT05bIm1lc3NhZ2UiXVsiZG9uZSJdOwogICAgICAgICAgICBzZXRUaW1lb3V0KHNlbGYuY2hlY2tfc3RhdHVzLCBzZWxmLmludGVydmFsKTsKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICB9KTsKICAgIH0sCiAgICB2c3VjY2VzczogZnVuY3Rpb24gKGZpbGUsIHJlc3BvbnNlKSB7CiAgICAgIHZhciB0ZXh0ID0gIlN1Y2Nlc3NmdWxseSB1cGxvYWRlZCBmaWxlICIgKyBmaWxlLm5hbWU7CiAgICAgIE0udG9hc3QoeyBodG1sOiB0ZXh0IH0pOwoKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZlZWRiYWNrIikuaW5uZXJUZXh0ID0gcmVzcG9uc2VbIm1lc3NhZ2UiXTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImRyb3B6b25lIikuY2xhc3NMaXN0LmFkZCgiaGlkZSIpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibG9hZGVyIikuY2xhc3NMaXN0LnJlbW92ZSgiaGlkZSIpOwoKICAgICAgLy92YXIgc2VsZiA9IHRoaXM7CgogICAgICB0aGlzLmNoZWNrX3N0YXR1cygpOwogICAgfSwKICAgIHZlcnJvcjogZnVuY3Rpb24gKGZpbGUpIHsKICAgICAgdmFyIHRleHQgPSAiRXJyb3Igd2hpbGUgdXBsb2FkaW5nICIgKyBmaWxlLm5hbWU7CiAgICAgIE0udG9hc3QoeyBodG1sOiB0ZXh0IH0pOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibG9hZGVyIikuY2xhc3NMaXN0LmFkZCgiaGlkZSIpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZmVlZGJhY2siKS5pbm5lclRleHQgPQogICAgICAgICJTb21ldGhpbmcgd2VudCB3cm9uZy4uLiBQbGVhc2UgdHJ5IGFnYWluIGxhdGVyIjsKICAgIH0sCgogICAgc2VuZGluZ0V2ZW50KGZpbGUsIHhociwgZm9ybURhdGEpIHsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJfaWQiLCB0aGlzLmlkKTsKICAgICAgZm9ybURhdGEuYXBwZW5kKCJfc291cmNlIiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NvdXJjZVNlbGVjdCcpLnZhbHVlKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["DataUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"DataUpload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>Data Upload</h1>\n    <div class=\"container center-align\">\n      <div class=\"row\">\n        \n        <div class=\"input-field col s6\">\n        <p>Please select a source for your data!</p>\n      <select class=\"browser-default\" id=\"sourceSelect\">\n        <option v-for=\"src in sourceList\" :key=\"src\" :value=\"src\">{{src}}</option>\n      </select>\n      </div>\n      </div>\n      <vue-dropzone\n        ref=\"myVueDropzone\"\n        id=\"dropzone\"\n        :options=\"dropzoneOptions\"\n        @vdropzone-success=\"vsuccess\"\n        @vdropzone-error=\"verror\"\n        @vdropzone-file-added=\"addedFile\"\n        @vdropzone-sending=\"sendingEvent\"\n      ></vue-dropzone>\n      <vue-ellipse-progress\n        id=\"loader\"\n        class=\"hide\"\n        :progress=\"progress\"\n        v-bind=\"options\"\n      >\n        <!--\n        <span slot=\"legend-value\" style=\"color : black\" id=\"totalCount\"></span>-->\n        <p slot=\"legend-caption\" id=\"feedback\"></p>\n      </vue-ellipse-progress>\n\n      <p id=\"totalCount\"></p>\n      \n      <p id=\"post_process_feedback\"></p>\n      <p id=\"totalOLS\"></p>\n      <div\n        id=\"not_found\"\n        v-if=\"notFound.length > 0\"\n        class=\"container\"\n        style=\"margin-bottom: 80px\"\n      >\n        <h5>Variables not automatically mapped (total: {{ this.notFound.length }}):</h5>\n       \n            <ul v-for=\"attr in notFound\" :key=\"attr\">\n              <li>{{ attr }}</li>\n\n             \n            </ul>\n\n        <a href=\"/data-steward/mapper\">Go to mapping assistant</a>\n     \n        <!--\n        <div class=\"row mt-3\">\n          <div class=\"col s1\">\n        <button class=\"btn blue-grey lighten-1\" @click=\"refreshAttributes()\">refresh targets</button>\n          </div>\n          <div class=\"col s11\"></div>\n        </div>-->\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport vue2Dropzone from \"vue2-dropzone\";\nimport \"vue2-dropzone/dist/vue2Dropzone.min.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport M from \"materialize-css\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    vueDropzone: vue2Dropzone,\n  },\n  data: function () {\n    return {\n      dropzoneOptions: {\n        url: process.env.VUE_APP_CLINICALURL + \"/post/basic-upload\",\n        thumbnailWidth: 150,\n        addRemoveLinks: true,\n        maxFiles: 1,\n      },\n      notFound: [],\n      allAttributes: {},\n      allSources: {},\n      sourceList: [],\n      id: uuidv4(),\n      updateUrl: process.env.VUE_APP_CLINICALURL + \"/get/cache\",\n      interval: 2000,\n      progress: 0,\n      options: {\n        color: \"#579fdc\",\n        \"empty-color\": \"#324c7e\",\n        size: 300,\n        thickness: 5,\n        \"empty-thickness\": 3,\n        \"line-mode\": \"out 5\",\n        animation: \"rs 700 1000\",\n        \"font-size\": \"1.5rem\",\n        \"font-color\": \"white\",\n      },\n    };\n  },\n  async created() {\n    const attributes = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attributes/all\"\n    );\n    const sources_all = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/sources/all\"\n    );\n    var sourceObj = {};\n    var sourceList = [];\n    sources_all[\"data\"][\"sources\"].forEach((elem) => {\n      sourceObj[elem] = null;\n      sourceList.push(elem);\n    });\n    this.allSources = sourceObj;\n    this.sourceList = sourceList;\n    var attrObj = {};\n    attributes[\"data\"][\"attributes\"].forEach((attr) => {\n      attrObj[attr.name] = null;\n    });\n    this.allAttributes = attrObj;\n  },\n\n  mounted(){\n    var elems = document.querySelectorAll('select');\n    M.FormSelect.init(elems);\n  },\n  updated() {\n    var elems = document.querySelectorAll(\".autocomplete\");\n\n    M.Autocomplete.init(elems, { data: this.allAttributes });\n    var elems_source = document.querySelectorAll(\".autocomplete_source\");\n\n    M.Autocomplete.init(elems_source, {\n      data: this.allSources,\n      onAutocomplete: function (val) {\n        var emptyFields = [];\n        document.querySelectorAll(\".autocomplete_source\").forEach((elem) => {\n          if (elem.value == null || elem.value == \"\") {\n            emptyFields.push(elem);\n          }\n        });\n\n        emptyFields.forEach((elem) => {\n          elem.value = val;\n        });\n        M.updateTextFields();\n      },\n    });\n  },\n\n  methods: {\n\n\n    refreshAttributes: async function(){\n          const attributes = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attributes/all\"\n    );\n    const sources_all = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/sources/all\"\n    );\n    var sourceObj = {};\n    sources_all[\"data\"][\"sources\"].forEach((elem) => {\n      sourceObj[elem] = null;\n    });\n    this.allSources = sourceObj;\n\n    var attrObj = {};\n    attributes[\"data\"][\"attributes\"].forEach((attr) => {\n      attrObj[attr.name] = null;\n    });\n    this.allAttributes = attrObj;\n    M.toast({html: \"Refreshed variable autocomplete...\"});\n\n    },\n    addMapping: async function (attr) {\n      var target = document.getElementById(attr + \"_mapping_field\").value;\n      if (target == null || target == \"\") {\n        M.toast({ html: \"Please check your input!\" });\n        return;\n      }\n\n      var source = document.getElementById(attr + \"_source_field\").value;\n\n      const mappingResponse = await axios({\n        method: \"post\",\n        url: process.env.VUE_APP_CLINICALURL + \"/post/basic-mapping\",\n        data: {\n          source: source,\n          source_attribute: attr,\n          target: target,\n        },\n        withCredentials: true,\n      });\n      if (mappingResponse.data[\"message\"] == \"ok\") {\n        this.notFound = this.notFound.filter((item) => item != attr);\n        M.toast({ html: \"You successfully mapped: \" + attr });\n      } else {\n        document.getElementById(attr + \"_feedback\").innerText =\n          mappingResponse.data[\"message\"];\n      }\n      return;\n    },\n    addedFile: function () {\n      document.getElementById(\"feedback\").innerText =\n        \"Your data is getting processed\";\n    },\n    setProgress: function (prog) {\n      this.progress = prog;\n      return;\n    },\n\n    check_status: function () {\n      var self = this;\n      $.ajax({\n        type: \"GET\",\n        url: self.updateUrl,\n        data: { _id: self.id },\n        success: function (e) {\n          console.log(e);\n          if (e.message != null && e[\"message\"][\"status\"] == \"done\") {\n            console.log(\"Done\");\n          }\n        },\n        complete: function (e) {\n          if(e.responseJSON['message'] == null){\n            setTimeout(self.check_status, self.interval);\n          }\n          var notFoundList = e.responseJSON[\"message\"][\"not_found\"];\n\n          if (e.responseJSON[\"message\"][\"status\"] == \"done\") {\n            self.progress = 100;\n            //$(\"#loader\").addClass(\"hide\");\n            $(\"#totalCount\").hide();\n\n            self.notFound = notFoundList;\n            document.getElementById(\"feedback\").innerText =\n              e.responseJSON[\"message\"][\"message\"];\n\n            document.getElementById(\"post_process_feedback\").innerText =\n              e.responseJSON[\"message\"][\"message\"];\n            //document.getElementById('totalOLS').innerText = \"Imported from OLS: \"  + e.responseJSON['message']['ols_count'];\n            $(\"#loader\").hide();\n            return;\n\n            /**\n             *\n             * Add not found feed back\n             */\n          } else {\n            self.notFound = notFoundList;\n            document.getElementById(\"totalCount\").innerText =\n              \"Processing \" +\n              e.responseJSON[\"message\"][\"total\"] +\n              \" lines of data...\";\n            self.progress = e.responseJSON[\"message\"][\"done\"];\n            setTimeout(self.check_status, self.interval);\n          }\n        },\n      });\n    },\n    vsuccess: function (file, response) {\n      var text = \"Successfully uploaded file \" + file.name;\n      M.toast({ html: text });\n\n      document.getElementById(\"feedback\").innerText = response[\"message\"];\n      document.getElementById(\"dropzone\").classList.add(\"hide\");\n      document.getElementById(\"loader\").classList.remove(\"hide\");\n\n      //var self = this;\n\n      this.check_status();\n    },\n    verror: function (file) {\n      var text = \"Error while uploading \" + file.name;\n      M.toast({ html: text });\n      document.getElementById(\"loader\").classList.add(\"hide\");\n      document.getElementById(\"feedback\").innerText =\n        \"Something went wrong... Please try again later\";\n    },\n\n    sendingEvent(file, xhr, formData) {\n      formData.append(\"_id\", this.id);\n      formData.append(\"_source\", document.getElementById('sourceSelect').value);\n    },\n  },\n};\n</script>\n\n<style>\n.float_bottom_right {\n  position: absolute;\n  bottom: 30px;\n  right: 30px;\n}\n\n.tap-target {\n  color: #fff;\n}\n.tap-target a {\n  color: #fff;\n  text-decoration: underline;\n}\n</style>"]}]}