{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/src/components/DataModelGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/src/components/DataModelGraph.vue","mtime":1635322962953},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635508076994},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1635508076954},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/babel-loader/lib/index.js","mtime":1635508077568},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635508076994},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/index.js","mtime":1635508077737}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DataModelGraph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6RA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DataModelGraph.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <br />\n    <br />\n    <div id=\"loader\">\n      <div class=\"preloader-wrapper big active\">\n        <div class=\"spinner-layer spinner-blue-only\">\n          <div class=\"circle-clipper left\">\n            <div class=\"circle\"></div>\n          </div>\n          <div class=\"gap-patch\">\n            <div class=\"circle\"></div>\n          </div>\n          <div class=\"circle-clipper right\">\n            <div class=\"circle\"></div>\n          </div>\n        </div>\n      </div>\n      <div id=\"loader_text\">Initializing Network...</div>\n    </div>\n    <div id=\"network_div\" style=\"visibility: hidden\">\n      <!-- Modal Structure -->\n      <div id=\"modal1\" class=\"modal\">\n        <div class=\"modal-content\" id=\"modalContent\">\n          <h4 id=\"headerModal\"></h4>\n          <p id=\"textModal\"></p>\n        </div>\n        <div class=\"modal-footer\">\n          <a\n            href=\"#!\"\n            class=\"modal-close waves-effect waves-green btn-flat blue-grey lighten-1\"\n            >Close</a\n          >\n        </div>\n      </div>\n      <div id=\"modal2\" class=\"modal\">\n        <div class=\"modal-content\" id=\"modalContent2\">\n          <h4 id=\"headerModal2\"></h4>\n          <p id=\"textModal2\">\n            <network\n              ref=\"sub_network\"\n              :nodes=\"sub_nodes\"\n              :edges=\"sub_edges\"\n              :options=\"sub_options\"\n              :events=\"['doubleClick', 'oncontext', 'click']\"\n              @double-click=\"onNodeClick\"\n              @oncontext=\"onContextClickSub\"\n              @click=\"generalClick\"\n            ></network>\n          </p>\n        </div>\n        <div class=\"modal-footer\">\n          <a\n            href=\"#!\"\n            class=\"modal-close waves-effect waves-green btn-flat blue-grey lighten-1\"\n            >Close</a\n          >\n        </div>\n      </div>\n      <div id=\"modal_fulltext\" class=\"modal\">\n        <div class=\"modal-content\">\n          <h4>Fulltext Search</h4>\n          <p>\n            Search through all descriptions, tooltips and definitions of the\n            datmodel.\n          </p>\n          <div class=\"row\">\n            <form id=\"fulltext_form\">\n              <div class=\"input-field col s10\">\n                <input type=\"text\" required name=\"text\" id=\"fulltext_input\" />\n              </div>\n              <div class=\"col s2\">\n                <button class=\"waves-effect btn blue-grey lighten-1\">Go</button>\n              </div>\n            </form>\n          </div>\n          <div class=\"row\" id=\"fulltext_result\"></div>\n        </div>\n      </div>\n      <div>\n        <div class=\"row\" style=\"margin-bottom: 3px;\">\n          <div class=\"col s4\"></div>\n          <div class=\"col s4\">\n        <h2 style=\"margin-top: 0\" class=\"center-align\">Model Explorer <i class=\"small material-icons tooltipped\" data-position=\"bottom\" :data-tooltip=\"helpText\">help_outline</i></h2>\n        </div>\n        <div class=\"col s4 right\">\n          <button class=\"waves-effect waves-light btn blue-grey lighten-1\" id=\"hideNavBtn\" @click=\"hideNav()\">Hide Navigation</button>\n          <button class=\"waves-effect waves-light btn blue-grey lighten-1 hide\" id=\"showNavBtn\" @click=\"showNav()\">Show Navigation</button>\n        </div>\n        </div>\n       \n\n        <div class=\"row valign-wrapper\" id=\"top_nav_div\">\n          \n          <div class=\"col s2\">\n            <button\n              @click=\"disablePhysics\"\n              class=\"waves-effect waves-light btn blue-grey lighten-1 left\"\n            >\n              Disable Physics</button\n            ><br /><br />\n            <button\n              @click=\"enablePhysics\"\n              class=\"waves-effect waves-light btn blue-grey lighten-1 left\"\n            >\n              Enable Physics</button\n            ><br />\n            <br />\n            <button\n              @click=\"clusterAll\"\n              class=\"waves-effect waves-light btn blue-grey lighten-1 left\"\n            >\n              Close all Clusters</button\n            ><br />\n          \n          </div>\n\n          \n          <div class=\"col s4\">\n            <div class=\"row\">\n              <div class=\"input-field col s12\">\n                <i class=\"material-icons prefix\">textsms</i>\n                <input\n                  type=\"text\"\n                  id=\"autocomplete-input\"\n                  class=\"autocomplete\"\n                />\n                <label for=\"autocomplete-input\">Search for Nodes...</label>\n              </div>\n              <div class=\"col s12\">or</div>\n              <br />\n              <div class=\"col s12\">\n                <div\n                  @click=\"fulltextSearch\"\n                  class=\"btn blue-grey lighten-1\"\n                  id=\"fulltext_btn\"\n                >\n                  Fulltext Search\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n          <div class=\"col s6\">\n             LEGEND\n            <table class=\"striped\">\n              <thead>\n                <tr>\n                <th>Clusters and Nodes</th>\n                <th>Edges</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n\n                  <td><a\n              style=\"\n                background-color: #1d6e88;\n                color: white;\n                padding-left: 18px;\n                padding-right: 18px;\n                margin: 4px;\n                \n              \"\n              ></a\n            >\n            = data root groups; internal variables with available mappings\n                  </td>\n                  <td>\n\n                    <a  style=\"\n                background-color: black;\n                color: black;\n                padding-left: 18px;\n                padding-right: 18px;\n                margin: 4px;\n              \"></a> = part_of <br />\n        \n\n                  </td>\n                </tr>\n                <tr>\n\n                  <td><a\n              style=\"\n                background-color: #00bcbd;\n                color: black;\n                padding-left: 18px;\n                padding-right: 18px;\n                margin: 4px;\n              \"\n              ></a\n            >\n            = attributes by sources; external variables</td>\n            <td>\n\n                  <a\n              style=\"\n                background-color: blue;\n                color: white;\n                padding-right: 18px;\n                padding-left: 18px;\n                margin: 4px;\n              \"\n              ></a\n            >\n            = maps_to\n\n            </td>\n\n                </tr>\n                <tr>\n                  <td>\n                     <a\n              style=\"\n                background-color: #c2ad4b;\n                color: black;\n                padding-left: 18px;\n                padding-right: 18px;\n                margin: 4px;\n              \"\n              ></a\n            >\n            = sources\n\n                  </td>\n                  <td>\n                       <a\n              style=\"\n                background-color: gray;\n                color: black;\n                padding: 4px;\n                margin: 4px;\n              \"\n              >dashed</a\n            >\n            = variable_in\n                  </td>\n                </tr>\n                <tr><td>\n                  <a\n              style=\"\n                background-color: #c55e2d;\n                color: black;\n                padding-left: 18px;\n                padding-right: 18px;\n                margin: 4px;\n              \"\n              ></a\n            >\n            = root nodes\n                  </td></tr>\n            \n\n              </tbody>\n           \n          <br />\n         \n            \n            </table>\n          </div>\n        </div>\n      </div>\n      <network class=\"mynetwork\"\n        ref=\"network\"\n        :nodes=\"nodes\"\n        :edges=\"edges\"\n        :options=\"options\"\n        :events=\"['doubleClick', 'oncontext', 'click']\"\n        @double-click=\"onNodeClick\"\n        @oncontext=\"onContextClick\"\n        @click=\"generalClick\"\n      ></network>\n\n      <div class=\"menu\" id=\"rightClickMenu\">\n        <ul class=\"menu-options\" id=\"rightMenuList\">\n          <component v-if=\"menuView\" :is=\"menuView\"></component>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ax from \"axios\";\nconst axios = ax;\nimport M from \"materialize-css\";\n\nexport default {\n  name: \"graph\",\n  methods: {\n    hideNav: function(){\n      document.getElementById(\"top_nav_div\").style.display = \"none\"; \n      document.getElementById(\"hideNavBtn\").classList.add(\"hide\");\n      document.getElementById(\"showNavBtn\").classList.remove(\"hide\");\n\n    },\n    showNav: function(){\n      document.getElementById(\"top_nav_div\").style.display = \"flex\";\n      document.getElementById(\"showNavBtn\").classList.add(\"hide\");\n      document.getElementById(\"hideNavBtn\").classList.remove(\"hide\");\n    },\n\n    userKeyboard: function (e) {\n      if (e.keyCode == 70 && e.ctrlKey) {\n        alert(\"ctrl F\");\n      }\n    },\n    clusterAll: function () {\n      // CLUSTERING via TOPICS\n\n      var options_topics = [];\n      this.topics_all.forEach(function (topic) {\n        var options_topic = {\n          joinCondition: function (nodeOptions) {\n            //console.log(\"HALLOHALLO\");\n            return nodeOptions.cid == topic;\n          },\n          clusterNodeProperties: {\n            id: \"cidCluster_\" + topic,\n            borderWidth: 3,\n            shape: \"square\",\n\n            label: topic,\n          },\n        };\n        options_topics.push(options_topic);\n        // console.log(topic + \" clustering...\");\n        // this.$refs.network.cluster(options_topic);\n      });\n      for (var i = 0; i < options_topics.length; i++) {\n        this.$refs.network.cluster(options_topics[i]);\n      }\n\n      // CLUSTERING via SOURCES\n\n      var options_sources = [];\n      this.sources_all.forEach(function (source) {\n        var options_source = {\n          joinCondition: function (nodeOptions) {\n            //console.log(\"HALLOHALLO\");\n            return nodeOptions.cid == source;\n          },\n          clusterNodeProperties: {\n            id: \"cidCluster_\" + source,\n            borderWidth: 3,\n            shape: \"square\",\n            label: source,\n            color: {\n              background: \"#c2ad4b\",\n              border: \"#c2ad4b\"\n            },\n          },\n        };\n        options_sources.push(options_source);\n        // console.log(topic + \" clustering...\");\n        // this.$refs.network.cluster(options_topic);\n      });\n      for (var p = 0; p < options_sources.length; p++) {\n        this.$refs.network.cluster(options_sources[p]);\n      }\n    },\n    generalClick: function () {\n      const menu = document.getElementById(\"rightClickMenu\");\n      if (menu.style.display == \"block\") {\n        menu.style.display = \"none\";\n      }\n    },\n    onContextClickSub: function (params) {\n      document.getElementById(\"rightMenuList\").innerHTML = \"\";\n      if (params.nodes.length == 1) {\n        const e = params.event;\n        e.preventDefault();\n\n        const menu = document.getElementById(\"rightClickMenu\");\n        var pagex = e.pageX;\n        var pagey = e.pageY;\n        menu.style.left = `${pagex}px`;\n        menu.style.top = `${pagey}px`;\n        menu.style.display = \"block\";\n        document.getElementById(\"rightMenuList\").innerHTML = \"\";\n\n        if (this.$refs.network.isCluster(params.nodes[0])) {\n          console.error(\"cluster occured in sub graph...\");\n        } else {\n          [\"Inspect\", \"Show more in OLS\"].forEach((s) => {\n            var listelemNode = document.createElement(\"li\");\n            listelemNode.classList.add(\"menu-option\");\n            var btn = document.createElement(\"button\");\n            btn.classList.add(\"btn\");\n            btn.classList.add(\"waves-effect\");\n            btn.classList.add(\"blue-grey\", \"lighten-1\");\n            btn.style.height = \"auto\";\n            btn.style.width = \"auto\";\n            btn.style.margin = \"2px\";\n            var textNode = document.createTextNode(s);\n            if (s == \"Inspect\") {\n              btn.onclick = function () {\n                var getParams = {};\n                if (params.nodes[0].startsWith(\"attr_\")) {\n                  getParams[\"type\"] = \"attribute\";\n                  getParams[\"node\"] = params.nodes[0].replace(\"attr_\", \"\");\n                } else if (params.nodes[0].startsWith(\"sources_\")) {\n                  getParams[\"type\"] = \"source\";\n                  getParams[\"node\"] = params.nodes[0].replace(\"sources_\", \"\");\n                } else {\n                  getParams[\"type\"] = \"core\";\n                  getParams[\"node\"] = params.nodes[0];\n                }\n                const attributeInformation = axios.get(\n                  process.env.VUE_APP_CLINICALURL + \"/get/attribute\",\n                  { params: getParams }\n                );\n\n                attributeInformation.then((data) => {\n                  var elem = document.getElementById(\"modal1\");\n                  var instance = M.Modal.getInstance(elem);\n                  var modalHeader = document.getElementById(\"headerModal\");\n\n                  modalHeader.textContent =\n                    \"Variable Name: \" + getParams[\"node\"];\n                  var modalText = document.getElementById(\"textModal\");\n                  modalText.innerHTML = \"\";\n\n                  if (data[\"data\"][\"information\"] == \"none\") {\n                    modalText.appendChild(\n                      document.createTextNode(\n                        \"No information available in Clinical Backend...\"\n                      )\n                    );\n                    menu.style.display = \"none\";\n                    instance.open();\n                  } else {\n                    var data_as_json = JSON.parse(\n                      data[\"data\"][\"information\"]\n                    )[0][\"fields\"];\n\n                    var keys = Object.keys(data_as_json);\n\n                    var tbl = document.createElement(\"table\");\n                    tbl.style.width = \"100%\";\n                    tbl.setAttribute(\"border\", \"1\");\n                    var tbdy = document.createElement(\"tbody\");\n                    keys.forEach(function (value) {\n                      var row = document.createElement(\"tr\");\n                      var cell1 = document.createElement(\"td\");\n                      var cell2 = document.createElement(\"td\");\n                      cell1.appendChild(document.createTextNode(value));\n\n                      cell2.appendChild(\n                        document.createTextNode(data_as_json[value])\n                      );\n                      row.appendChild(cell1);\n                      row.appendChild(cell2);\n                      tbdy.appendChild(row);\n                    });\n\n                    tbl.appendChild(tbdy);\n\n                    modalText.appendChild(tbl);\n                    menu.style.display = \"none\";\n                    instance.open();\n                  }\n                });\n                //console.log(attributeInformation);\n              };\n            }\n            if (s == \"Show more in OLS\") {\n              btn.onclick = function () {\n                window.open(\n                  process.env.VUE_APP_OLSURL +\n                    \"search?q=\" +\n                    params.nodes[0].replace(\"attr_\", \"\"),\n                  \"popUpWindow\",\n                  \"height=800,width=1200,left=10,top=10,,scrollbars=yes,menubar=no\"\n                );\n                return false;\n              };\n            }\n\n            btn.appendChild(textNode);\n            listelemNode.appendChild(btn);\n            menu.firstChild.appendChild(listelemNode);\n          });\n        }\n      } else {\n        if (params.edges.length == 1) {\n          var btn = document.createElement(\"button\");\n          var edge = params.edges[0];\n          const e = params.event;\n          e.preventDefault();\n\n          const menu = document.getElementById(\"rightClickMenu\");\n          pagex = e.pageX;\n          pagey = e.pageY;\n          menu.style.left = `${pagex}px`;\n          menu.style.top = `${pagey}px`;\n          menu.style.display = \"block\";\n          document.getElementById(\"rightMenuList\").innerHTML = \"\";\n          const netw = this.$refs.network;\n          var listelemNode = document.createElement(\"li\");\n          listelemNode.classList.add(\"menu-option\");\n          btn = document.createElement(\"button\");\n          btn.classList.add(\"btn\");\n          btn.classList.add(\"waves-effect\");\n          btn.classList.add(\"blue-grey\", \"lighten-1\");\n          btn.style.height = \"auto\";\n          btn.style.width = \"auto\";\n          btn.style.margin = \"2px\";\n          var s = \"Inspect\";\n          var textNode = document.createTextNode(s + \" Edge\");\n          if (s == \"Inspect\") {\n            btn.onclick = async function () {\n              var getParams = {};\n              var connectedNodes = netw.getConnectedNodes(edge);\n              if (\n                connectedNodes[0].toLowerCase().includes(\"cluster\") ||\n                connectedNodes[1].toLowerCase().includes(\"cluster\")\n              ) {\n                M.toast({\n                  html: \"Please Open the cluster before inspecting edges!\",\n                });\n                return;\n              }\n              if (\n                connectedNodes[0].toLowerCase().includes(\"source\") ||\n                connectedNodes[1].toLowerCase().includes(\"source\")\n              ) {\n                M.toast({\n                  html:\n                    \"Mappings of type 'part_of' do not contain more information!\",\n                });\n                return;\n              }\n              getParams[\"attr_1\"] = connectedNodes[0].replace(\"attr_\", \"\");\n              getParams[\"attr_2\"] = connectedNodes[1].replace(\"attr_\", \"\");\n\n              //console.log(connectedNodes);\n\n              const attributeMappingInformation = await axios.get(\n                process.env.VUE_APP_CLINICALURL + \"/get/attribute-mapping\",\n                { params: getParams }\n              );\n              //console.log(attributeMappingInformation);\n              var data = attributeMappingInformation[\"data\"];\n              //console.log(data);\n\n              var elem = document.getElementById(\"modal1\");\n              var instance = M.Modal.getInstance(elem);\n              var modalHeader = document.getElementById(\"headerModal\");\n\n              modalHeader.textContent =\n                \"Variable Mapping: \" +\n                getParams[\"attr_1\"] +\n                \", \" +\n                getParams[\"attr_2\"];\n              var modalText = document.getElementById(\"textModal\");\n              modalText.innerHTML = \"\";\n              if (data[\"information\"] == \"none\") {\n                modalText.appendChild(\n                  document.createTextNode(\n                    \"No information available in Clinical Backend...\"\n                  )\n                );\n                menu.style.display = \"none\";\n                instance.open();\n              } else {\n                var data_as_json = JSON.parse(data[\"information\"])[0][\"fields\"];\n\n                var keys = Object.keys(data_as_json);\n\n                var tbl = document.createElement(\"table\");\n                tbl.style.width = \"100%\";\n                tbl.setAttribute(\"border\", \"1\");\n                var tbdy = document.createElement(\"tbody\");\n                keys.forEach(function (value) {\n                  var row = document.createElement(\"tr\");\n                  var cell1 = document.createElement(\"td\");\n                  var cell2 = document.createElement(\"td\");\n                  cell1.appendChild(document.createTextNode(value));\n\n                  cell2.appendChild(\n                    document.createTextNode(data_as_json[value])\n                  );\n                  row.appendChild(cell1);\n                  row.appendChild(cell2);\n                  tbdy.appendChild(row);\n                });\n\n                tbl.appendChild(tbdy);\n\n                modalText.appendChild(tbl);\n                menu.style.display = \"none\";\n                instance.open();\n              }\n            };\n            btn.appendChild(textNode);\n            listelemNode.appendChild(btn);\n            menu.firstChild.appendChild(listelemNode);\n          }\n        } else {\n          return;\n        }\n      }\n    },\n    onContextClick: function (params) {\n      document.getElementById(\"rightMenuList\").innerHTML = \"\";\n      var pagey;\n      var pagex;\n\n      if (params.nodes.length == 1) {\n        const e = params.event;\n        e.preventDefault();\n\n        const menu = document.getElementById(\"rightClickMenu\");\n        pagex = e.pageX;\n        pagey = e.pageY;\n        menu.style.left = `${pagex}px`;\n        menu.style.top = `${pagey}px`;\n        menu.style.display = \"block\";\n        document.getElementById(\"rightMenuList\").innerHTML = \"\";\n        const netw = this.$refs.network;\n\n        if (this.$refs.network.isCluster(params.nodes[0])) {\n          var listelem = document.createElement(\"li\");\n          listelem.classList.add(\"menu-option\");\n          var text = document.createTextNode(\"Open this Cluster\");\n          var btn = document.createElement(\"button\");\n          btn.classList.add(\"btn\");\n          btn.classList.add(\"waves-effect\");\n          btn.classList.add(\"blue-grey\", \"lighten-1\");\n          btn.style.height = \"auto\";\n          btn.style.width = \"auto\";\n          btn.style.margin = \"2px\";\n          btn.onclick = function () {\n            netw.openCluster(params.nodes[0]);\n            document.getElementById(\"rightClickMenu\").style.display = \"none\";\n          };\n          btn.appendChild(text);\n          listelem.appendChild(btn);\n\n          menu.firstChild.appendChild(listelem);\n        } else {\n          [\"Inspect\", \"Open sub graph\", \"Show more in OLS\"].forEach((s) => {\n            var listelemNode = document.createElement(\"li\");\n            listelemNode.classList.add(\"menu-option\");\n            var btn = document.createElement(\"button\");\n            btn.classList.add(\"btn\");\n            btn.classList.add(\"waves-effect\");\n            btn.classList.add(\"blue-grey\", \"lighten-1\");\n            btn.style.height = \"auto\";\n            btn.style.width = \"auto\";\n            btn.style.margin = \"2px\";\n            var textNode = document.createTextNode(s);\n            if (s == \"Inspect\") {\n              btn.onclick = function () {\n                var getParams = {};\n                if (params.nodes[0].startsWith(\"attr_\")) {\n                  getParams[\"type\"] = \"attribute\";\n                  getParams[\"node\"] = params.nodes[0].replace(\"attr_\", \"\");\n                } else if (params.nodes[0].startsWith(\"sources_\")) {\n                  getParams[\"type\"] = \"source\";\n                  getParams[\"node\"] = params.nodes[0].replace(\"sources_\", \"\");\n                } else {\n                  getParams[\"type\"] = \"core\";\n                  getParams[\"node\"] = params.nodes[0];\n                }\n                const attributeInformation = axios.get(\n                  process.env.VUE_APP_CLINICALURL + \"/get/attribute\",\n                  { params: getParams }\n                );\n\n                attributeInformation.then((data) => {\n                  var elem = document.getElementById(\"modal1\");\n                  var instance = M.Modal.getInstance(elem);\n                  var modalHeader = document.getElementById(\"headerModal\");\n\n                  modalHeader.textContent =\n                    \"Variable Name: \" + getParams[\"node\"];\n                  var modalText = document.getElementById(\"textModal\");\n                  modalText.innerHTML = \"\";\n\n                  if (data[\"data\"][\"information\"] == \"none\") {\n                    modalText.appendChild(\n                      document.createTextNode(\n                        \"No information available in Clinical Backend...\"\n                      )\n                    );\n                    menu.style.display = \"none\";\n                    instance.open();\n                  } else {\n                    var data_as_json = JSON.parse(\n                      data[\"data\"][\"information\"]\n                    )[0][\"fields\"];\n\n                    var keys = Object.keys(data_as_json);\n\n                    var tbl = document.createElement(\"table\");\n                    tbl.style.width = \"100%\";\n                    tbl.setAttribute(\"border\", \"1\");\n                    var tbdy = document.createElement(\"tbody\");\n                    keys.forEach(function (value) {\n                      var row = document.createElement(\"tr\");\n                      var cell1 = document.createElement(\"td\");\n                      var cell2 = document.createElement(\"td\");\n                      cell1.appendChild(document.createTextNode(value));\n\n                      cell2.appendChild(\n                        document.createTextNode(data_as_json[value])\n                      );\n                      row.appendChild(cell1);\n                      row.appendChild(cell2);\n                      tbdy.appendChild(row);\n                    });\n\n                    tbl.appendChild(tbdy);\n\n                    modalText.appendChild(tbl);\n                    menu.style.display = \"none\";\n                    instance.open();\n                  }\n                });\n                //console.log(attributeInformation);\n              };\n            }\n            if (s == \"Show more in OLS\") {\n              btn.onclick = function () {\n                window.open(\n                  process.env.VUE_APP_OLSURL +\n                    \"search?q=\" +\n                    params.nodes[0].replace(\"attr_\", \"\"),\n                  \"popUpWindow\",\n                  \"height=800,width=1200,left=10,top=10,,scrollbars=yes,menubar=no\"\n                );\n                return false;\n              };\n            }\n            if (s == \"Open sub graph\") {\n              //const subnetw = this.$refs.sub_network;\n              this.sub_nodes = [];\n              this.sub_edges = [];\n              var sub_n = this.sub_nodes;\n              var sub_e = this.sub_edges;\n              btn.onclick = function () {\n                var node = params.nodes[0];\n                var connectedNodes = netw.getConnectedNodes(node);\n                connectedNodes.push(node);\n                var connectedEdges = netw.getConnectedEdges(node);\n\n                var instance2 = M.Modal.getInstance(\n                  document.getElementById(\"modal2\")\n                );\n                instance2.open();\n\n                connectedNodes.forEach((node) => {\n                  var n = netw.getNode(node);\n                  if (n != null) {\n                    sub_n.push(n);\n                  }\n                });\n                connectedEdges.forEach((edge) => {\n                  var ed = netw.getEdge(edge);\n                  if (ed != null) {\n                    sub_e.push(ed);\n                  }\n                });\n\n                menu.style.display = \"none\";\n              };\n            }\n\n            btn.appendChild(textNode);\n            listelemNode.appendChild(btn);\n            menu.firstChild.appendChild(listelemNode);\n          });\n        }\n      } else {\n        if (params.edges.length == 1) {\n          var edge = params.edges[0];\n          const e = params.event;\n          e.preventDefault();\n\n          const menu = document.getElementById(\"rightClickMenu\");\n          pagex = e.pageX;\n          pagey = e.pageY;\n          menu.style.left = `${pagex}px`;\n          menu.style.top = `${pagey}px`;\n          menu.style.display = \"block\";\n          document.getElementById(\"rightMenuList\").innerHTML = \"\";\n          const netw = this.$refs.network;\n          var listelemNode = document.createElement(\"li\");\n          listelemNode.classList.add(\"menu-option\");\n          btn = document.createElement(\"button\");\n          btn.classList.add(\"btn\");\n          btn.classList.add(\"waves-effect\");\n          btn.classList.add(\"blue-grey\", \"lighten-1\");\n          btn.style.height = \"auto\";\n          btn.style.width = \"auto\";\n          btn.style.margin = \"2px\";\n          var s = \"Inspect\";\n          var textNode = document.createTextNode(s + \" Edge\");\n          if (s == \"Inspect\") {\n            btn.onclick = async function () {\n              var getParams = {};\n              var connectedNodes = netw.getConnectedNodes(edge);\n              if (\n                connectedNodes[0].toLowerCase().includes(\"cluster\") ||\n                connectedNodes[1].toLowerCase().includes(\"cluster\")\n              ) {\n                M.toast({\n                  html: \"Please Open the cluster before inspecting edges!\",\n                });\n                return;\n              }\n              if (\n                connectedNodes[0].toLowerCase().includes(\"source\") ||\n                connectedNodes[1].toLowerCase().includes(\"source\")\n              ) {\n                M.toast({\n                  html:\n                    \"Mappings of type 'part_of' do not contain more information!\",\n                });\n                return;\n              }\n              getParams[\"attr_1\"] = connectedNodes[0].replace(\"attr_\", \"\");\n              getParams[\"attr_2\"] = connectedNodes[1].replace(\"attr_\", \"\");\n\n              //console.log(connectedNodes);\n\n              const attributeMappingInformation = await axios.get(\n                process.env.VUE_APP_CLINICALURL + \"/get/attribute-mapping\",\n                { params: getParams }\n              );\n              //console.log(attributeMappingInformation);\n              var data = attributeMappingInformation[\"data\"];\n              //console.log(data);\n\n              var elem = document.getElementById(\"modal1\");\n              var instance = M.Modal.getInstance(elem);\n              var modalHeader = document.getElementById(\"headerModal\");\n\n              modalHeader.textContent =\n                \"Variable Mapping: \" +\n                getParams[\"attr_1\"] +\n                \", \" +\n                getParams[\"attr_2\"];\n              var modalText = document.getElementById(\"textModal\");\n              modalText.innerHTML = \"\";\n              if (data[\"information\"] == \"none\") {\n                modalText.appendChild(\n                  document.createTextNode(\n                    \"No information available in Clinical Backend...\"\n                  )\n                );\n                menu.style.display = \"none\";\n                instance.open();\n              } else {\n                var data_as_json = JSON.parse(data[\"information\"])[0][\"fields\"];\n\n                var keys = Object.keys(data_as_json);\n\n                var tbl = document.createElement(\"table\");\n                tbl.style.width = \"100%\";\n                tbl.setAttribute(\"border\", \"1\");\n                var tbdy = document.createElement(\"tbody\");\n                keys.forEach(function (value) {\n                  var row = document.createElement(\"tr\");\n                  var cell1 = document.createElement(\"td\");\n                  var cell2 = document.createElement(\"td\");\n                  cell1.appendChild(document.createTextNode(value));\n\n                  cell2.appendChild(\n                    document.createTextNode(data_as_json[value])\n                  );\n                  row.appendChild(cell1);\n                  row.appendChild(cell2);\n                  tbdy.appendChild(row);\n                });\n\n                tbl.appendChild(tbdy);\n\n                modalText.appendChild(tbl);\n                menu.style.display = \"none\";\n                instance.open();\n              }\n            };\n            btn.appendChild(textNode);\n            listelemNode.appendChild(btn);\n            menu.firstChild.appendChild(listelemNode);\n          }\n        } else {\n          return;\n        }\n      }\n    },\n    clusterOpenAll: function () {\n      for (var node in this.nodes) {\n        if (this.$refs.network.isCluster(node) == true) {\n          this.$refs.network.openCluster(node);\n        }\n      }\n    },\n    onNodeClick: function (params) {\n      console.log(\"Clicked double\");\n      //console.log(\"HALLOHALLO\");\n      if (params.nodes.length == 1) {\n        if (this.$refs.network.isCluster(params.nodes[0]) == true) {\n          this.$refs.network.openCluster(params.nodes[0]);\n        }\n      }\n    },\n    disablePhysics: function () {\n      var opts = this.$refs.network[\"options\"];\n      opts[\"physics\"][\"enabled\"] = false;\n      this.$refs.network.setOptions(opts);\n    },\n    enablePhysics: function () {\n      var opts = this.$refs.network[\"options\"];\n      opts[\"physics\"][\"enabled\"] = true;\n      this.$refs.network.setOptions(opts);\n    },\n    btnClick: function () {\n      var options_topic = {\n        joinCondition: function (nodeOptions) {\n          //console.log(\"HALLOHALLO\");\n          return nodeOptions.cid == this.topics_all[1];\n        },\n        clusterNodeProperties: {\n          id: \"cidCluster_\" + this.topics_all[1],\n          borderWidth: 3,\n          shape: \"circle\",\n          label: this.topics_all[1],\n        },\n      };\n      console.log(\"clustering...\");\n      this.$refs.network.cluster(options_topic);\n    },\n    fulltextSearch: function () {\n      document.getElementById(\"fulltext_result\").innerHTML = \"\";\n      var network = this.$refs.network;\n      var nodes = this.nodes;\n      function selectThisNode(nodeId) {\n        var findNodesReturn = network.findNode(nodeId);\n        if (network.isCluster(findNodesReturn[0])) {\n          network.openCluster(findNodesReturn[0]);\n          return selectThisNode(nodeId);\n        }\n        //console.log(nodeId);\n        network.focus(nodeId);\n        network.selectNodes([nodeId], [true]);\n        // console.log(nodes);\n        var sel = nodes.find((obj) => {\n          return obj[\"id\"] == nodeId;\n        });\n       \n        sel[\"color\"] = {\n          background: \"red\",\n        };\n        \n        network.editNode();\n        return;\n      }\n\n      var fulltext_modal = M.Modal.getInstance(\n        document.getElementById(\"modal_fulltext\")\n      );\n      fulltext_modal.open();\n      document.getElementById(\"fulltext_input\").value = \"\";\n      document.getElementById(\"fulltext_input\").focus();\n      document.getElementById(\"fulltext_form\").onsubmit = async function (e) {\n        e.preventDefault();\n\n        const fulltextResult = await axios({\n          url:\n            process.env.VUE_APP_CLINICALURL +\n            \"/get/fulltext\" +\n            \"?text=\" +\n            document.getElementById(\"fulltext_input\").value,\n        });\n        if (\n          fulltextResult.status == 200 &&\n          fulltextResult[\"data\"][\"result\"].length > 0\n        ) {\n          document.getElementById(\"fulltext_result\").innerHTML = \"\";\n          document\n            .getElementById(\"fulltext_result\")\n            .appendChild(document.createTextNode(\"Search Results: \"));\n          fulltextResult[\"data\"][\"result\"].forEach((result) => {\n            var btn = document.createElement(\"button\");\n            btn.onclick = function () {\n              fulltext_modal.close();\n              //console.log(result);\n              selectThisNode(\"attr_\" + result);\n            };\n            btn.classList.add(\"btn\", \"waves-effect\", \"blue-grey\", \"lighten-1\");\n            btn.innerHTML = result;\n            var row = document.createElement(\"div\");\n            row.classList.add(\"row\");\n            row.appendChild(btn);\n            document.getElementById(\"fulltext_result\").appendChild(row);\n          });\n        } else {\n          document.getElementById(\"fulltext_result\").innerHTML = \"\";\n          document\n            .getElementById(\"fulltext_result\")\n            .appendChild(document.createTextNode(\"No Attribute/s Found...\"));\n        }\n      };\n    },\n  },\n\n  mounted(){\n     document.getElementsByClassName(\"footer-fixed\")[0].style.position = \"relative\";\n  },\n  async created() {\n   \n\n    var elems_tooltip = document.querySelectorAll('.tooltipped');\n    M.Tooltip.init(elems_tooltip);\n    //document.getElementById('loader_text').innerHTML=\"Fetching Attributes...\";\n    const attributes = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attributes/all\"\n    );\n    //document.getElementById('loader_text').innerHTML=\"Fetching Sources...\";\n    const sources_all = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/sources/all\"\n    );\n    //document.getElementById('loader_text').innerHTML=\"Fetching Mappings...\";\n    const attr_mappings = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attribute-mappings/all\"\n    );\n\n    var elemsModal = document.querySelectorAll(\".modal\");\n    M.Modal.init(elemsModal);\n\n\n    for(const t in this.topics_dict){\n      if (!this.nodes.filter(e => e.id == this.topics_dict[t]).length > 0) {\n  \n        console.log(\"ADDED:\" + t);\n      \n      this.nodes.push(\n      {\n          id: this.topics_dict[t],\n          label: this.topics_dict[t],\n          color: {\n             background: \"#c55e2d\",\n             border: \"#c55e2d\"\n          },\n          fixed: true,\n\n          font: { color: \"white\" },\n        }\n    );\n    this.edges.push({ from: this.topics_dict[t], to: \"root\", color: \"black\" });\n      }\n  }\n\n\n    var topics = new Set();\n    //console.log(response);\n    var attr = attributes[\"data\"][\"attributes\"];\n    //document.getElementById('loader_text').innerHTML=\"Building graph...\";\n    for (var k = 0; k < attr.length; k++) {\n      //console.log(attr[k][\"topic\"]);\n      topics.add(attr[k][\"topic\"]);\n\n      this.nodes.push({\n        id: \"attr_\" + attr[k][\"name\"],\n        label: attr[k][\"tooltip\"],\n        cid: attr[k][\"topic\"],\n        color: {\n          background: \"#1d6e88\",\n          border: \"#1d6e88\"\n        },\n        font: {\n          color: \"white\"\n        }\n      });\n      for(const t in this.topics_dict){\n        if(t == attr[k][\"topic\"]){\n          this.edges.push({\n            from: \"attr_\" + attr[k][\"name\"],\n            to: this.topics_dict[t],\n\n            color: \"black\",\n          });\n        }\n      }\n      // switch (attr[k][\"topic\"]) {\n      //   case \"Disturbances\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"qualifneurotest\",\n\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"master\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"singular\",\n      //       label: \"part of\",\n\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"NPT\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"neurotest\",\n\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"Blood\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"blood\",\n\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"CSF\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"spinefluid\",\n\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"Ataxia\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"ataxia\",\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"SARA scores\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"sara_scores\",\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"SARA subscores\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"sara_subscores\",\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"SARA\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"sara\",\n      //       color: \"blue\",\n      //     });\n      //     break;\n\n      //   default:\n      //     console.log(\"No topic found...\");\n      //}\n    }\n\n    var sources = sources_all[\"data\"][\"sources\"];\n    //console.log(response);\n    for (var s = 0; s < sources.length; s++) {\n      this.nodes.push({\n        id: \"sources_\" + sources[s],\n        label: sources[s],\n        cid: sources[s],\n        fixed: true,\n        color: {\n          background: \"#c2ad4b\",\n          border: \"#c2ad4b\"\n        },\n        highlight: \"red\",\n        font: { color: \"black\" },\n      });\n      //TODO add edges\n    }\n    this.sources_all = Array.from(sources);\n    this.topics_all = Array.from(topics);\n\n    var attribute_mappings = attr_mappings[\"data\"][\"mappings\"];\n    for (var d = 0; d < attribute_mappings.length; d++) {\n      if (\n        !this.nodes.some(\n          (node) => node.id == \"attr_\" + attribute_mappings[d][\"name\"]\n        )\n      ) {\n        this.nodes.push({\n          id: \"attr_\" + attribute_mappings[d][\"name\"],\n          cid: attribute_mappings[d][\"Source\"],\n          label: attribute_mappings[d][\"name\"],\n          color: {\n            background: \"#00bcbd\",\n            border: \"#00bcbd\",\n            highlight: {\n              background: \"red\",\n            },\n          },\n\n          font: { color: \"black\" },\n        });\n      }\n      if (\n        // check if edge is already set and if not self-map is set\n        !this.edges.some(\n          (edge) =>\n            edge.from == \"attr_\" + attribute_mappings[d][\"name\"] &&\n            edge.to == \"attr_\" + attribute_mappings[d][\"Target\"]\n        ) &&\n        \"attr_\" + attribute_mappings[d][\"name\"] !=\n          \"attr_\" + attribute_mappings[d][\"Target\"]\n      ) {\n        this.edges.push({\n          from: \"attr_\" + attribute_mappings[d][\"name\"],\n          to: \"attr_\" + attribute_mappings[d][\"Target\"],\n\n          color: \"blue\",\n        });\n      }\n      this.edges.push({\n        to: \"sources_\" + attribute_mappings[d][\"Source\"],\n        from: \"attr_\" + attribute_mappings[d][\"name\"],\n        color: \"grey\",\n        dashes: true\n      });\n    }\n    document.getElementById(\"fulltext_form\").onsubmit = function (e) {\n      e.preventDefault();\n      alert(\"Not implemented yet...\");\n    };\n    // align fixed nodes on unit circle:\n    var _topics = this.nodes.filter((elem) => {\n      return elem.fixed && elem.id != \"root\" && !elem.id.startsWith(\"sources_\");\n    });\n    var _sources = this.nodes.filter((elem) => {\n      return elem.fixed && elem.id.startsWith(\"sources_\");\n    });\n    console.log(_sources);\n\n\n\n\n    var _z = _sources.length;\n    _sources.forEach((s, l) => {\n      s.x = Math.round(Math.cos((2 * Math.PI * l) / _z) * 500);\n      s.y = Math.round(Math.sin((2 * Math.PI * l) / _z) * 500);\n    });\n    //console.log(_topics);\n    var _k = _topics.length;\n    _topics.forEach((t, l) => {\n      t.x = Math.round(Math.cos((2 * Math.PI * l) / _k) * 300);\n      t.y = Math.round(Math.sin((2 * Math.PI * l) / _k) * 300);\n    });\n  },\n  data() {\n    return {\n      helpText: \"The Datamodel Explorer gives insight about the variables contained in the CCDM (Common Clinical Datamodel) \"+\n      \"You can inspect single nodes by right click or search through the graph via the node search or more advanced the fulltext search. Each edge represents the ralationship between two nodes.\"\n      + \" Physics can be enabled and disabled at anytime.\",\n      update: true,\n      topics_dict: {\"Demography\": \"Master\", \n               \"Organizational\": \"Master\", \n               \"Demetia_biomarker\": \"Master\", \n               \"Demographics\": \"Master\",\n               \"Diagnosis\": \"Master\", \n               \"Family\": \"Master\", \n               \"BNT\": \"NPT\", \n               \"FAQ\": \"NPT\", \n               \"TMT\": \"NPT\", \n               \"CDR\": \"NPT\", \n               \"MOCA\": \"NPT\", \n               \"GDS\": \"NPT\", \n               \"NPI\": \"NPT\", \n               \"NPIQ\": \"NPT\", \n               \"Memory deficit\": \"Deficits\", \n               \"Language deficits\": \"Deficits\", \n               \"Executive deficits\": \"Deficits\", \n               \"Attention deficits\": \"Deficits\", \n               \"Other deficits\": \"Deficits\", \n               \"Blood\": \"Lab\", \n               \"CSF\": \"Lab\", \n               \"Ataxia\": \"Ataxia\",\n               \"SARA scores\": \"SARA\",\n               \"Dementia\": \"Dementia\"   \n                                      },\n      nodes: [\n        {\n          id: \"root\",\n          label: \"The Data Model Root\",\n          color: {\n            background: \"#c55e2d\",\n            border: \"#c55e2d\"\n          },\n          fixed: true,\n          x: 0,\n          y: 0,\n          font: { color: \"white\" },\n        },\n        // {\n        //   id: \"site\",\n        //   label: \"SITE\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"pid\",\n        //   label: \"PID\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"ts\",\n        //   label: \"TIMESTAMP\",\n        //   fixed: true,\n\n        //   color: \"DarkViolet\",\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"singular\",\n        //   label: \"Singular Patient information\",\n        //   //cid: \"master\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"blood\",\n        //   label: \"Laboratory measurements in blood\",\n        //   //cid: \"Blood\",\n        //   fixed: true,\n\n        //   color: \"DarkViolet\",\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"spinefluid\",\n        //   label: \"Laboratory measurements in cerebral spine fluid\",\n        //   //cid: \"CSF\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"neurotest\",\n        //   label: \"Neuropsychological test scores\",\n        //   color: \"DarkViolet\",\n        //   //cid: \"NPT\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"qualifneurotest\",\n        //   label: \"Qualifiable neuropsychological disturbances\",\n        //   color: \"DarkViolet\",\n        //   //cid: \"Disturbances\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"ataxia\",\n        //   label: \"Ataxia\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"sara\",\n        //   label: \"SARA\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"sara_subscores\",\n        //   label: \"SARA Subscores\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"sara_scores\",\n        //   label: \"SARA Scores\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // // ,{\n        // //   id:\"sca_characterization\",\n        // //   label: \"SCA CHARACTERIZATION\",\n        // //   fixed: true,\n        // //   x: -210,\n        // //   y: -110,\n        // //   font: { color: \"white\" },\n        // // }\n      ],\n      edges: [\n        // { from: \"site\", to: \"root\", color: \"blue\" },\n        // { from: \"spinefluid\", to: \"root\", color: \"blue\" },\n        // { from: \"pid\", to: \"root\", color: \"blue\" },\n        // { from: \"ts\", to: \"root\", color: \"blue\" },\n        // { from: \"blood\", to: \"root\", color: \"blue\" },\n        // { from: \"neurotest\", to: \"root\", color: \"blue\" },\n        // { from: \"singular\", to: \"root\", color: \"blue\" },\n        // { from: \"qualifneurotest\", to: \"root\", color: \"blue\" },\n      ],\n      menuView: \"\",\n      options: {\n        nodes: {\n          borderWidth: 4,\n          color: {\n            highlight: {\n              background: \"red\",\n            },\n          },\n        },\n        edges: {\n          color: \"lightgray\",\n\n          arrows: {\n            to: { enabled: true, scaleFactor: 1, type: \"arrow\" },\n          },\n        },\n        height: (window.innerHeight * 0.9).toString(),\n        width: (window.innerWidth * 0.99).toString(),\n\n        physics: {\n          enabled: true,\n          solver: \"barnesHut\",\n        },\n        manipulation: true,\n      },\n      sub_nodes: [],\n      sub_edges: [],\n      sub_options: {\n        nodes: {\n          borderWidth: 4,\n        },\n        edges: {\n          color: \"black\",\n\n          arrows: {\n            to: { enabled: true, scaleFactor: 1, type: \"arrow\" },\n          },\n        },\n        height: (window.innerHeight * 0.5).toString(),\n        physics: {\n          enabled: true,\n          solver: \"barnesHut\",\n        },\n      },\n    };\n  },\n  updated() {\n    const this_nodes = this.nodes;\n    const network = this.$refs.network;\n    function selectThisNode(nodeId) {\n      var findNodesReturn = network.findNode(nodeId);\n      if (network.isCluster(findNodesReturn[0])) {\n        network.openCluster(findNodesReturn[0]);\n        return selectThisNode();\n      }\n      network.focus(nodeId);\n      network.selectNodes([nodeId], [true]);\n      return;\n    }\n    if (this.update) {\n      document.getElementById(\"loader_text\").innerHTML = \"Clustering Nodes...\";\n      console.log(\"UPDATING..\");\n\n      // NETWORK PROPERTIES\n      //console.log(this.topics_all);\n\n      // CORE CLUSTERING\n      // var options_core = {\n      //   joinCondition: function (nodeOptions) {\n      //     return nodeOptions.cid === \"core\";\n      //   },\n      //   clusterNodeProperties: {\n      //     id: \"cidCluster\",\n      //     borderWidth: 3,\n      //     shape: \"circle\",\n      //     label: \"Core Model\",\n      //   },\n      // };\n\n      // this.$refs.network.cluster(options_core);\n\n      // CLUSTERING via TOPICS\n\n      var options_topics = [];\n      this.topics_all.forEach(function (topic) {\n        var options_topic = {\n          joinCondition: function (nodeOptions) {\n            //console.log(\"HALLOHALLO\");\n            return nodeOptions.cid == topic;\n          },\n          clusterNodeProperties: {\n            id: \"cidCluster_\" + topic,\n            borderWidth: 3,\n            shape: \"square\",\n            color: {\n              background: \"#1d6e88\",\n              border: \"#1d6e88\"\n            },\n            label: topic,\n          },\n        };\n        options_topics.push(options_topic);\n        // console.log(topic + \" clustering...\");\n        // this.$refs.network.cluster(options_topic);\n      });\n      for (var i = 0; i < options_topics.length; i++) {\n        this.$refs.network.cluster(options_topics[i]);\n      }\n\n      // CLUSTERING via SOURCES\n\n      var options_sources = [];\n      this.sources_all.forEach(function (source) {\n        var options_source = {\n          joinCondition: function (nodeOptions) {\n            //console.log(\"HALLOHALLO\");\n            return nodeOptions.cid == source;\n          },\n          clusterNodeProperties: {\n            id: \"cidCluster_\" + source,\n            borderWidth: 3,\n            shape: \"square\",\n            label: source,\n            color: {\n              background: \"#c2ad4b\",\n              border: \"#c2ad4b\"\n            },\n          },\n        };\n        options_sources.push(options_source);\n        // console.log(topic + \" clustering...\");\n        // this.$refs.network.cluster(options_topic);\n      });\n      for (var p = 0; p < options_sources.length; p++) {\n        this.$refs.network.cluster(options_sources[p]);\n      }\n\n      let autoCompleteData = {};\n      this.nodes.forEach((node) => {\n        autoCompleteData[node.label] = null;\n      });\n\n      var autoCompleteOptions = {\n        data: autoCompleteData,\n        onAutocomplete: function (params) {\n          var node = this_nodes.find((node) => {\n            return node.label == params;\n          });\n\n          selectThisNode(node.id);\n        },\n      };\n\n      var elems = document.querySelectorAll(\".autocomplete\");\n      M.Autocomplete.init(elems, autoCompleteOptions);\n\n      document.getElementById(\"loader\").style = \"display: none\";\n\n      document.getElementById(\"network_div\").style = \"visibility: visible\";\n\n      //this.edges = [...new Set(this.edges)];\n\n      //console.log(this.$refs.network);\n      // CLUSTERING\n      this.update = false;\n    } else {\n      console.log(\"prevented updating...\");\n    }\n  },\n};\n</script>\n<style scoped>\n.btn.waves-effect {\n  height: auto !important;\n\n  min-height: 20px;\n  line-height: 20px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.waves-effect.btn {\n  height: auto !important;\n\n  min-height: 20px;\n  line-height: 20px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n\n.btn {\n  height: auto !important;\n}\n\n.menu {\n  background-color: white;\n  z-index: 999999;\n  width: 120px;\n  box-shadow: 0 4px 5px 3px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  display: none;\n}\n.menu .menu-options {\n  list-style: none;\n  padding: 10px 0;\n}\n.menu .menu-options .menu-option {\n  font-weight: 500;\n  font-size: 14px;\n  padding: 10px 40px 10px 20px;\n  cursor: pointer;\n}\n.menu .menu-options .menu-option:hover {\n  background: rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n}\nli .menu-option:hover {\n  cursor: pointer;\n}\n\n.mynetwork{\n  border: 2px solid black;\n  margin-left:5px; \n  margin-right: 5px;\n  margin-bottom: 10px\n\n}\n\n</style>"]}]}