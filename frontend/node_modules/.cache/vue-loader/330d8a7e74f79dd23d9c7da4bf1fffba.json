{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/src/components/DataDump.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/src/components/DataDump.vue","mtime":1635322962955},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635508076994},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1635508076954},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/babel-loader/lib/index.js","mtime":1635508077568},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635508076994},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/index.js","mtime":1635508077737}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBNIGZyb20gIm1hdGVyaWFsaXplLWNzcyI7CmltcG9ydCBheCBmcm9tICJheGlvcyI7CmNvbnN0IGF4aW9zID0gYXg7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkRhdGFEdW1wIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYXNzZXRzOiBbXSwKICAgIH07CiAgfSwKICBhc3luYyBtb3VudGVkKCkgewogICAgIGNvbnN0IGFzc2V0cyA9IGF3YWl0IGF4aW9zLmdldCgKICAgICAgcHJvY2Vzcy5lbnYuVlVFX0FQUF9DTElOSUNBTFVSTCArICIvZ2V0L3NlbWFudGljLWFzc2V0cy1hbGwiCiAgICApOwogICAgdGhpcy5hc3NldHMgPSBhc3NldHNbImRhdGEiXVsiYXNzZXRzIl07CiAgICB2YXIgdGhpc19hc3NldHMgPSB0aGlzLmFzc2V0czsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJkYXRhX2R1bXAiKS5vbnN1Ym1pdCA9IGFzeW5jIGZ1bmN0aW9uIChlKSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3Byb2dyZXNzJylbMF0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CiAgICAgIGUucHJldmVudERlZmF1bHQoKTsKICAgICAgY29uc29sZS5sb2coIlBPU1QuLi4uIik7CiAgICAgIHZhciBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSh0aGlzKTsKICAgICAgY29uc3QgdXBsb2FkUmVzcG9uc2UgPSBhd2FpdCBheGlvcyh7CiAgICAgICAgbWV0aG9kOiAicG9zdCIsCiAgICAgICAgdXJsOiBwcm9jZXNzLmVudi5WVUVfQVBQX0NMSU5JQ0FMVVJMICsgIi9wb3N0L3NlbWFudGljLWFzc2V0IiwKICAgICAgICBkYXRhOiBmb3JtRGF0YSwKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKHVwbG9hZFJlc3BvbnNlKTsKICAgICAgaWYgKCF1cGxvYWRSZXNwb25zZVsiZGF0YSJdWyJtZXNzYWdlIl0gPT0gIm9rIikgewogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlcnJvciIpLmlubmVySFRNTCA9CiAgICAgICAgICB1cGxvYWRSZXNwb25zZVsiZGF0YSJdWyJtZXNzYWdlIl07CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVycm9yIikuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5yZXNldCgpOwogICAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlcnJvciIpLmlubmVySFRNTCA9ICIiOwogICAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdWNjZXNzIikuaW5uZXJIVE1MID0KICAgICAgICAvLyAgICJTdWNjZXNzZnVsbHkgdXBsb2FkZWQgYSBzZW1hbnRpYyBhc3NldC4iOwogICAgICAgIC8vIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdWNjZXNzIikuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgICAgTS51cGRhdGVUZXh0RmllbGRzKCk7CiAgICAgICAgY29uc3QgYXNzZXRzID0gYXdhaXQgYXhpb3MuZ2V0KAogICAgICAgICAgcHJvY2Vzcy5lbnYuVlVFX0FQUF9DTElOSUNBTFVSTCArICIvZ2V0L3NlbWFudGljLWFzc2V0cy1hbGwiCiAgICAgICAgKTsKICAgICAgICB0aGlzX2Fzc2V0cyA9IGFzc2V0c1siZGF0YSJdWyJhc3NldHMiXTsKCiAgICAgICAgICBNLnRvYXN0KHtodG1sOiAnU3VjY2Vzc2Z1bGx5IGNvbnRyaWJ1dGVkIGEgU2VtYW50aWMgQXNzZXQhIFRoYW5rIHlvdSEnfSk7CiAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncHJvZ3Jlc3MnKVswXS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICB9CiAgICB9OwoKICAgCiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiaW5wdXRfbGFiZWwiKS5vbmNoYW5nZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKHRoaXNfYXNzZXRzLnNvbWUoKGUpID0+IGUgPT0gdGhpcy52YWx1ZSkpIHsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibGFiZWwtZXJyb3IiKS5pbm5lckhUTUwgPQogICAgICAgICAgIlRoaXMgdmFyaWFibGUgbmFtZSBhbHJlYWR5IGV4aXN0cyEiOwogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzdWJtaXQiKS5kaXNhYmxlZCA9IHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImxhYmVsLWVycm9yIikuaW5uZXJIVE1MID0gIiI7CiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInN1Ym1pdCIpLmRpc2FibGVkID0gZmFsc2U7CiAgICAgIH0KICAgIH07CiAgfSwKfTsK"},{"version":3,"sources":["DataDump.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DataDump.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <h5>\n      Upload Semantic Asset\n      <i\n        class=\"material-icons tooltipped\"\n        data-position=\"bottom\"\n        data-tooltip=\"A Semantic Asset can be any variable that you are using or planning to use. Uploading your variables here help to higher the coverage of the Common Datamodel!\"\n        >info</i\n      >\n    </h5>\n    <br />\n    <p id=\"error\"></p>\n     <div class=\"progress\" style=\"display: none; width: 40vw; margin: auto\">\n      <div class=\"indeterminate\"></div>\n  </div>\n    <p id=\"success\"></p>\n    <br />\n    <div class=\"row\">\n      <form id=\"data_dump\">\n        <div class=\"row\">\n          <div class=\"input-field col s6\">\n            <input\n              type=\"text\"\n              name=\"label\"\n              id=\"input_label\"\n              placeholder=\"A unique name for the variable\"\n              required\n            />\n            <label for=\"label\">Variable Name</label>\n            <div id=\"label-error\"></div>\n          </div>\n          <div class=\"input-field col s6\">\n            <input\n              type=\"text\"\n              name=\"provenance\"\n              id=\"input_provenance\"\n              placeholder=\"Optionally add adescription\"\n            />\n            <label for=\"provenance\">Provenance (optional)</label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <label for=\"textarea1\">Description</label>\n            <textarea\n              id=\"textarea1\"\n              name=\"description\"\n              class=\"materialize-textarea\"\n              required\n            ></textarea>\n\n            <span class=\"helper-text\" data-error=\"wrong\" data-success=\"right\"\n              >Make your desciption as common as possible because this is later\n              used to map your variable to the Common Datamodel.</span\n            >\n          </div>\n        </div>\n\n        <button\n          class=\"btn waves-effect waves-light right\"\n          type=\"submit\"\n          name=\"action\"\n          id=\"submit\"\n        >\n          Upload\n          <i class=\"material-icons right\">send</i>\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport M from \"materialize-css\";\nimport ax from \"axios\";\nconst axios = ax;\n\nexport default {\n  name: \"DataDump\",\n  data() {\n    return {\n      assets: [],\n    };\n  },\n  async mounted() {\n     const assets = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/semantic-assets-all\"\n    );\n    this.assets = assets[\"data\"][\"assets\"];\n    var this_assets = this.assets;\n    document.getElementById(\"data_dump\").onsubmit = async function (e) {\n      document.getElementsByClassName('progress')[0].style.display = 'block';\n      e.preventDefault();\n      console.log(\"POST....\");\n      var formData = new FormData(this);\n      const uploadResponse = await axios({\n        method: \"post\",\n        url: process.env.VUE_APP_CLINICALURL + \"/post/semantic-asset\",\n        data: formData,\n      });\n      console.log(uploadResponse);\n      if (!uploadResponse[\"data\"][\"message\"] == \"ok\") {\n        document.getElementById(\"error\").innerHTML =\n          uploadResponse[\"data\"][\"message\"];\n        document.getElementById(\"error\").style.display = \"block\";\n      } else {\n        this.reset();\n        // document.getElementById(\"error\").innerHTML = \"\";\n        // document.getElementById(\"success\").innerHTML =\n        //   \"Successfully uploaded a semantic asset.\";\n        // document.getElementById(\"success\").style.display = \"block\";\n        M.updateTextFields();\n        const assets = await axios.get(\n          process.env.VUE_APP_CLINICALURL + \"/get/semantic-assets-all\"\n        );\n        this_assets = assets[\"data\"][\"assets\"];\n\n          M.toast({html: 'Successfully contributed a Semantic Asset! Thank you!'});\n           document.getElementsByClassName('progress')[0].style.display = \"none\";\n      }\n    };\n\n   \n    document.getElementById(\"input_label\").onchange = function () {\n      if (this_assets.some((e) => e == this.value)) {\n        document.getElementById(\"label-error\").innerHTML =\n          \"This variable name already exists!\";\n        document.getElementById(\"submit\").disabled = true;\n      } else {\n        document.getElementById(\"label-error\").innerHTML = \"\";\n        document.getElementById(\"submit\").disabled = false;\n      }\n    };\n  },\n};\n</script>\n\n<style scoped>\n#label-error {\n  color: red;\n\n}\n#error {\n  color: red;\n    \n  padding: 15px;\n  background-color: lightgray;\n  width: 20vw;\n  margin: auto;\n  display: none;\n}\n#success {\n  color: green;\n  padding: 15px;\n  background-color: lightgray;\n  width: 20vw;\n  margin: auto;\n  display: none;\n}\n.tooltipped:hover {\n  cursor: help;\n}\n</style>"]}]}