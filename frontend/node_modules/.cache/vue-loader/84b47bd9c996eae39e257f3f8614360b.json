{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/Metrics.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/Metrics.vue","mtime":1626075497077},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IFBsb3RseSB9IGZyb20gInZ1ZS1wbG90bHkiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgUGxvdGx5LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGE6IFt7CiAgICAgICAgeDogW10sCiAgICAgICAgeTogW10sCiAgICAgICAgdHlwZTogImJhciIsCiAgICAgICAgdGV4dDoiIiwKICAgICAgICAgdGV4dHBvc2l0aW9uOiAnYXV0bycsCiAgICAgICAgaG92ZXJpbmZvOiAnbm9uZScsCiAgICAgIH1dLAogICAgICBsYXlvdXQ6IHsgdGl0bGU6ICJEYXRhIG1vZGVsIFN0YXRpc3RpY3MiLAogICAgICB5YXhpczp7CiAgICAgICAgdGl0bGU6ICJWYXJpYWJsZXMgbWFwcGVkIgogICAgICB9LAogICAgICB4YXhpczp7CiAgICAgICAgdGl0bGU6ICJTb3VyY2VzIgogICAgICAgIH0KICAgfSwKICAgIH07CiAgfSwKICBhc3luYyBjcmVhdGVkKCkgewogICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBheGlvcy5nZXQoCiAgICAgIHByb2Nlc3MuZW52LlZVRV9BUFBfQ0xJTklDQUxVUkwgKyAiL2dldC9hdHRyLWJ5LXNvdXJjZSIKICAgICk7CiAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGFbImF0dHJfYnlfc3JjIl07CiAgICBPYmplY3Qua2V5cyhkYXRhKS5mb3JFYWNoKChzcmMpID0+IHsKICAgICAgdGhpcy5kYXRhWzBdLngucHVzaChzcmMpOwogICAgICB0aGlzLmRhdGFbMF0ueS5wdXNoKGRhdGFbc3JjXSk7CiAgICB9KTsKICAgIHRoaXMuZGF0YVswXS50ZXh0ID0gIHRoaXMuZGF0YVswXS55Lm1hcChTdHJpbmcpOwogIH0sCn07Cg=="},{"version":3,"sources":["Metrics.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Metrics.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <h5 class=\"center-align\">Model Statistics</h5>\n    </div>\n    <div class=\"row\">\n      <div>\n        <Plotly\n          :data=\"data\"\n          :layout=\"layout\"\n          :display-mode-bar=\"false\"\n        ></Plotly>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { Plotly } from \"vue-plotly\";\nexport default {\n  components: {\n    Plotly,\n  },\n  data() {\n    return {\n      data: [{\n        x: [],\n        y: [],\n        type: \"bar\",\n        text:\"\",\n         textposition: 'auto',\n        hoverinfo: 'none',\n      }],\n      layout: { title: \"Data model Statistics\",\n      yaxis:{\n        title: \"Variables mapped\"\n      },\n      xaxis:{\n        title: \"Sources\"\n        }\n   },\n    };\n  },\n  async created() {\n    const response = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attr-by-source\"\n    );\n    var data = response.data[\"attr_by_src\"];\n    Object.keys(data).forEach((src) => {\n      this.data[0].x.push(src);\n      this.data[0].y.push(data[src]);\n    });\n    this.data[0].text =  this.data[0].y.map(String);\n  },\n};\n</script>\n\n<style>\n</style>\n"]}]}