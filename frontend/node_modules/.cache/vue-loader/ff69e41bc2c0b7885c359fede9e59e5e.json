{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/Welcome.vue?vue&type=template&id=d4b7673c&scoped=true&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/Welcome.vue","mtime":1626075497078},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInBhcmFsbGF4LTEiIH0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJvdyBjb250YWluZXIiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbCBzMTIiIH0sIFsKICAgICAgICAgIF9jKCJoMSIsIFtfdm0uX3YoIldlbGNvbWUgdG8gdGhlIFNDQUkgRGF0YSBTdGV3YXJkIildKSwKICAgICAgICAgIF9jKCJwIiwgeyBzdGF0aWNDbGFzczogImZsb3ctdGV4dCIgfSwgWwogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgIlxuICAgICAgICBUaGlzIHNlcnZpY2UgcHJvdmlkZXMgc2V2ZXJhbCBmZWF0dXJlcyBzdWNoIGFzIHVwbG9hZGluZyBhbmQgZWRpdGluZ1xuICAgICAgICB0aGUgY3VycmVudCBjbGluaWNhbCBkYXRhbW9kZWwgd2hpY2ggaXMgdXNlZCByaWdodCBub3cgdG8gbm9ybWFsaXplXG4gICAgICAgIGRhdGEgaW4gdGhlIHVzZWQgaW4gdGhlICIKICAgICAgICAgICAgKSwKICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvcmVhY3Qtdmlld2VyIiB9IH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIkNsaW5pY2FsIFZpZXdlciIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgIi5cbiAgICAgICAgTW9yZW92ZXIgeW91IGNhbiBkb3dubG9hZCB0aGUgZGF0YW1vZGVsIGluIC54bHN4IGZvcm1hdCBhZnRlciB5b3VcbiAgICAgICAgYWRkZWQgYXR0cmlidXRlcywgbWFwcGluZ3Mgb3IgbmV3IHNvdXJjZXMuXG4gICAgICAgXG4gICAgICAiCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9Ib3cgaXQgd29ya3MucG5nIiksCiAgICAgICAgICAgICAgd2lkdGg6ICI1MDBweCIKICAgICAgICAgICAgfQogICAgICAgICAgfSksCiAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJmbG93LXRleHQiIH0sIFsKICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICJcbiAgICAgICAgQW5vdGhlciBrZXkgZmVhdHVyZSBvZiB0aGUgRGF0YS1TdGV3YXJkIGlzIHRoZSBncmFwaCBleHBsb3JlciBvZiB0aGVcbiAgICAgICAgZGF0YW1vZGVsLiBUaGF0IGdyYXBoIHByb3ZpZGVzIGRlZXBlciBpbnNpZ2h0IGludG8gdGhlIG1vZGVsIGN1cnJlbnRseVxuICAgICAgICB1c2VkIGJ5IFNDQUkuIEVkZ2VzIGluIHRoYXQgZ3JhcGggcmVwcmVzZW50IHRoZSBjb25uZWN0aW9ucyBiZXR3ZWVuXG4gICAgICAgIGRpZmZlcmVudCBzb3VyY2VzIGFuZCBpdHMgYXR0cmlidXRlcyBhcyB3ZWxsIGFzIHRoZSBtYXBwaW5ncyBiZXR3ZWVuXG4gICAgICAgIHRob3NlIGF0dHJpYnV0ZXMuXG4gICAgICAiCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicGFyYWxsYXgtMiIgfSksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm93IGNvbnRhaW5lciIsCiAgICAgICAgICBzdGF0aWNTdHlsZTogeyAibWluLWhlaWdodCI6ICIzMDBweCIgfQogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2wgczEyIiB9LCBbCiAgICAgICAgICAgIF9jKCJoMSIsIFtfdm0uX3YoIk5vcm1hbGl6YXRpb24gd2l0aCBPTFMiKV0pLAogICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJmbG93LXRleHQiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAiXG4gICAgICAgIFRoZSBncmFwaCB2aXN1YWxpemF0aW9uIHByb3ZpZGVzIGFuIHVwbGluayB3aXRoXG4gICAgICAgICIKICAgICAgICAgICAgICApLAogICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiaHR0cHM6Ly93d3cuZWJpLmFjLnVrL29scy9pbmRleCIgfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIk9MUyIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgIiB0byBub3JtYWxpemUgdGhlXG4gICAgICAgIGF0dHJpYnV0ZXMgYWdhaW5zdCBwb3B1bGFyIE9udG9sb2dpZXMuIFRoaXMgZmVhdHVyZSBtYWtlcyB0aGVcbiAgICAgICAgZGF0YS1zdGV3YXJkIGEgdXNlZnVsIHRvb2wgZm9yIElEU04gaW4gdGhlIGNvbnRleHQgb2Ygc2VtYW50aWNcbiAgICAgICAgaW50ZWdyYXRpb24uXG4gICAgICAiCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKQogICAgICAgICAgXSkKICAgICAgICBdCiAgICAgICkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}