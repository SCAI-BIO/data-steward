{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/src/components/OWLUpload.vue?vue&type=style&index=0&id=6c8dfb7f&scoped=true&lang=css&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/src/components/OWLUpload.vue","mtime":1635322962954},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/css-loader/index.js","mtime":1635508076990},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1635508077968},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635508076994},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/index.js","mtime":1635508077737}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdXBsb2FkLWJ0biB7CiAgbWFyZ2luOiAxNXB4ICFpbXBvcnRhbnQ7Cn0KaDUsCnAgewogIGNvbG9yOiAjMmMzZTUwOwp9Ci5kcm9wLWRpdiB7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyLXN0eWxlOiBkYXNoZWQ7CiAgaGVpZ2h0OiAzMHZoOwogIG1hcmdpbjogYXV0bzsKICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjMpOwp9Ci5kcm9wLWRpdjpob3ZlciB7CiAgYm94LXNoYWRvdzogMCAwIDZweCByZ2JhKDM1LCAxNzMsIDI3OCwgMSk7Cn0K"},{"version":3,"sources":["OWLUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"OWLUpload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      <h3>Upload a CCDM Ontology</h3>\n      <div class=\"row\">\n        <form id=\"owl_form\">\n          <div\n            id=\"drop-zone\"\n            class=\"drop-div\"\n            v-on:dragover=\"ondragover\"\n            v-on:dragenter=\"ondragover\"\n            v-on:drop=\"dragdrop\"\n            v-on:click=\"dropZoneClick\"\n          >\n            <p id=\"drop-text\">Drag and drop your owl file.</p>\n            <i class=\"large material-icons\" v-if=\"dropped\">attach_file</i>\n            <p id=\"file_info\"></p>\n          </div>\n\n          <input\n            type=\"file\"\n            id=\"file_input\"\n            style=\"display: none\"\n            v-on:change=\"dragdrop\"\n          />\n          <button\n            class=\"btn waves-effect waves-light right blue-grey lighten-1\"\n            id=\"upload-btn\"\n            type=\"submit\"\n            name=\"action\"\n            v-if=\"dropped\"\n          >\n            Upload\n            <i class=\"material-icons right\">send</i>\n          </button>\n          <button\n            class=\"btn waves-effect waves-light left blue-grey lighten-1\"\n            id=\"upload-btn-reset\"\n            type=\"button\"\n            v-on:click=\"reset\"\n            v-if=\"dropped\"\n          >\n            Reset\n            <i class=\"material-icons right\">send</i>\n          </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport ax from \"axios\";\nconst axios = ax;\nexport default {\n  name: \"OWLUpload\",\n  data() {\n    return {\n      dropped: false,\n    };\n  },\n\n  methods: {\n    reset: function (e) {\n      e.preventDefault();\n      document.getElementById(\"owl_form\").reset();\n      document.getElementById(\"file_info\").innerText = \"\";\n      this.dropped = false;\n    },\n    ondragover: function (e) {\n      e.preventDefault();\n    },\n    dragdrop: function (e) {\n      var fileInput = document.getElementById(\"file_input\");\n      if (fileInput.files === undefined || fileInput.files.length == 0) {\n        fileInput.files = e.dataTransfer.files;\n\n        // If you want to use some of the dropped files\n        const dT = new DataTransfer();\n        dT.items.add(e.dataTransfer.files[0]);\n        fileInput.files = dT.files;\n      }\n\n      e.preventDefault();\n      document.getElementById(\"file_info\").innerText = fileInput.files[0].name;\n\n      this.dropped = true;\n    },\n    dropZoneClick: function (e) {\n      e.preventDefault();\n      document.getElementById(\"file_input\").click();\n    },\n  },\n  created() {\n    document.getElementById(\"owl_form\").onsubmit = async function (e) {\n      e.preventDefault();\n      var formData = new FormData();\n\n      var fileInput = document.getElementById(\"file_input\").files[0];\n      formData.append(\"file\", fileInput);\n      const uploadResponse = await axios.post(\n        process.env.VUE_APP_CLINICALURL + \"/post/owl\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      console.log(uploadResponse);\n    };\n  },\n};\n</script>\n<style scoped>\nupload-btn {\n  margin: 15px !important;\n}\nh5,\np {\n  color: #2c3e50;\n}\n.drop-div {\n  width: 100%;\n  border-style: dashed;\n  height: 30vh;\n  margin: auto;\n  color: rgba(0, 0, 0, 0.3);\n}\n.drop-div:hover {\n  box-shadow: 0 0 6px rgba(35, 173, 278, 1);\n}\n</style>"]}]}