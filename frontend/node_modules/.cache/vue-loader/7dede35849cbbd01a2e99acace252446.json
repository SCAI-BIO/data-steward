{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/StewardHeader.vue?vue&type=template&id=67228acd&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/StewardHeader.vue","mtime":1628248823641},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF92bS5fbSgwKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgWwogICAgICBfYygibmF2IiwgeyBzdGF0aWNDbGFzczogImxpZ2h0LWJsdWUtYmciIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm5hdi13cmFwcGVyIiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImEiLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJzaWRlbmF2LXRyaWdnZXIiLAogICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjIiwgImRhdGEtdGFyZ2V0IjogIm1vYmlsZS1kZW1vIiB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfYygiaSIsIHsgc3RhdGljQ2xhc3M6ICJtYXRlcmlhbC1pY29ucyIgfSwgW192bS5fdigibWVudSIpXSldCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ1bCIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImxlZnQgaGlkZS1vbi1tZWQtYW5kLWRvd24iLAogICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiAibmF2LW1vYmlsZSIgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicHQtMTAgaG92ZXItbm9uZSIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIi9kYXRhLXN0ZXdhcmQiIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBzcmM6IHJlcXVpcmUoIi4uL2Fzc2V0cy9sb2dvX2RhdGFfc3Rld2FyZF9ub190ZXh0LnBuZyIpLAogICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogIjUwLyIKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL2RhdGFwb2ludHMiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIkRhdGEgVXBsb2FkIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZHJvcGRvd24tdHJpZ2dlciIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaHJlZjogIiMiLCAiZGF0YS10YXJnZXQiOiAiZHJvcGRvd24xIiB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIk1vZGVsIFVwbG9hZCIpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInVsIiwKICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJkcm9wZG93bi1jb250ZW50IiwgYXR0cnM6IHsgaWQ6ICJkcm9wZG93bjEiIH0gfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgICAgIF9jKCJhIiwgeyBhdHRyczogeyBocmVmOiAiL2RhdGEtc3Rld2FyZC9kYXRhbW9kZWwiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJNb2RlbCBVcGxvYWQiKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAiYSIsCiAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL3NlbWFudGljLWR1bXAiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkFzc2V0IFVwbG9hZCIpXQogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKCJsaSIsIFsKICAgICAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIi9kYXRhLXN0ZXdhcmQvb3dsLXVwbG9hZCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIk9XTCB1cGxvYWQiKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIi9kYXRhLXN0ZXdhcmQvZWRpdCIgfSB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigiV2l6YXJkIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZHJvcGRvd24tdHJpZ2dlciIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgImRhdGEtdGFyZ2V0IjogImRyb3Bkb3duMiIsIGhyZWY6ICIjIiB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIk1vZGVsIEV4cGxvcmVyIildCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidWwiLAogICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImRyb3Bkb3duLWNvbnRlbnQiLCBhdHRyczogeyBpZDogImRyb3Bkb3duMiIgfSB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL2dyYXBoIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiR3JhcGgiKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL3RhYmxlIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigiVGFibGUiKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL21ldHJpY3MiIH0gfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJTdGF0aXN0aWNzIikKICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvIiB9IH0sIFtfdm0uX3YoIkNsaW5pY2FsIFZpZXdlciIpXSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIi9kYXRhLXN0ZXdhcmQvZG93bmxvYWQiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIkRvd25sb2FkIikKICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL2NvbnRhY3QiIH0gfSwgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoIkNvbnRhY3QiKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSksCiAgICAgIF9jKCJ1bCIsIHsgc3RhdGljQ2xhc3M6ICJzaWRlbmF2IiwgYXR0cnM6IHsgaWQ6ICJtb2JpbGUtZGVtbyIgfSB9LCBbCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkIiB9IH0sIFtfdm0uX3YoIkhvbWUiKV0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL2RhdGFwb2ludHMiIH0gfSwgWwogICAgICAgICAgICBfdm0uX3YoIkRhdGEgVXBsb2FkIikKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL2RhdGFtb2RlbCIgfSB9LCBbCiAgICAgICAgICAgIF92bS5fdigiTW9kZWwgVXBsb2FkIikKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL2RhdGFtb2RlbCIgfSB9LCBbCiAgICAgICAgICAgIF92bS5fdigiTW9kZWwgVXBsb2FkIikKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL293bC11cGxvYWQiIH0gfSwgWwogICAgICAgICAgICBfdm0uX3YoIk9XTCBVcGxvYWQiKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIi9kYXRhLXN0ZXdhcmQvZWRpdCIgfSB9LCBbX3ZtLl92KCJXaXphcmQiKV0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvZGF0YS1zdGV3YXJkL2dyYXBoIiB9IH0sIFsKICAgICAgICAgICAgX3ZtLl92KCJWaXN1YWxpemF0aW9uIikKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImxpIiwgWwogICAgICAgICAgX2MoImEiLCB7IGF0dHJzOiB7IGhyZWY6ICIvIiB9IH0sIFtfdm0uX3YoIkNsaW5pY2FsIFZpZXdlciIpXSkKICAgICAgICBdKSwKICAgICAgICBfYygibGkiLCBbCiAgICAgICAgICBfYygiYSIsIHsgYXR0cnM6IHsgaHJlZjogIi9kYXRhLXN0ZXdhcmQvZG93bmxvYWQiIH0gfSwgWwogICAgICAgICAgICBfdm0uX3YoIkRvd25sb2FkIikKICAgICAgICAgIF0pCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}