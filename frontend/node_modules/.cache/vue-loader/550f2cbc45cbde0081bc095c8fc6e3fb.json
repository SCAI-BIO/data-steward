{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/src/components/DataModelGraph.vue?vue&type=template&id=0a033738&scoped=true&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/src/components/DataModelGraph.vue","mtime":1635322962953},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635508076994},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1635508077994},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635508076994},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/index.js","mtime":1635508077737}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}