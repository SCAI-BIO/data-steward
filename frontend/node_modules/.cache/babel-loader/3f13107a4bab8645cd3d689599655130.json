{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/thread-loader/dist/cjs.js!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/babel-loader/lib/index.js!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/Metrics.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/Metrics.vue","mtime":1626075497077},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9waGlsaXBwd2VnbmVyL0Rlc2t0b3AvRnJhdW5ob2Zlci9TRU0tR3JvdXAvZ2l0L2RhdGEtc3Rld2FyZC10b29sL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBQbG90bHkgfSBmcm9tICJ2dWUtcGxvdGx5IjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFBsb3RseTogUGxvdGx5CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YTogW3sKICAgICAgICB4OiBbXSwKICAgICAgICB5OiBbXSwKICAgICAgICB0eXBlOiAiYmFyIiwKICAgICAgICB0ZXh0OiAiIiwKICAgICAgICB0ZXh0cG9zaXRpb246ICdhdXRvJywKICAgICAgICBob3ZlcmluZm86ICdub25lJwogICAgICB9XSwKICAgICAgbGF5b3V0OiB7CiAgICAgICAgdGl0bGU6ICJEYXRhIG1vZGVsIFN0YXRpc3RpY3MiLAogICAgICAgIHlheGlzOiB7CiAgICAgICAgICB0aXRsZTogIlZhcmlhYmxlcyBtYXBwZWQiCiAgICAgICAgfSwKICAgICAgICB4YXhpczogewogICAgICAgICAgdGl0bGU6ICJTb3VyY2VzIgogICAgICAgIH0KICAgICAgfQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciByZXNwb25zZSwgZGF0YTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9DTElOSUNBTFVSTCArICIvZ2V0L2F0dHItYnktc291cmNlIik7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSByZXNwb25zZS5kYXRhWyJhdHRyX2J5X3NyYyJdOwogICAgICAgICAgICAgIE9iamVjdC5rZXlzKGRhdGEpLmZvckVhY2goZnVuY3Rpb24gKHNyYykgewogICAgICAgICAgICAgICAgX3RoaXMuZGF0YVswXS54LnB1c2goc3JjKTsKCiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhWzBdLnkucHVzaChkYXRhW3NyY10pOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF90aGlzLmRhdGFbMF0udGV4dCA9IF90aGlzLmRhdGFbMF0ueS5tYXAoU3RyaW5nKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9Cn07"},{"version":3,"sources":["Metrics.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,MAAA,QAAA,YAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,CAAA;AACA,QAAA,CAAA,EAAA,EADA;AAEA,QAAA,CAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA,KAHA;AAIA,QAAA,IAAA,EAAA,EAJA;AAKA,QAAA,YAAA,EAAA,MALA;AAMA,QAAA,SAAA,EAAA;AANA,OAAA,CADA;AASA,MAAA,MAAA,EAAA;AAAA,QAAA,KAAA,EAAA,uBAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA,SADA;AAIA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA;AAJA;AATA,KAAA;AAkBA,GAvBA;AAwBA,EAAA,OAxBA,qBAwBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,GAAA,CACA,OAAA,CAAA,GAAA,CAAA,mBAAA,GAAA,qBADA,CADA;;AAAA;AACA,cAAA,QADA;AAIA,cAAA,IAJA,GAIA,QAAA,CAAA,IAAA,CAAA,aAAA,CAJA;AAKA,cAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AACA,gBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,eAHA;AAIA,cAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,IAAA,GAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,MAAA,CAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAlCA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <h5 class=\"center-align\">Model Statistics</h5>\n    </div>\n    <div class=\"row\">\n      <div>\n        <Plotly\n          :data=\"data\"\n          :layout=\"layout\"\n          :display-mode-bar=\"false\"\n        ></Plotly>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { Plotly } from \"vue-plotly\";\nexport default {\n  components: {\n    Plotly,\n  },\n  data() {\n    return {\n      data: [{\n        x: [],\n        y: [],\n        type: \"bar\",\n        text:\"\",\n         textposition: 'auto',\n        hoverinfo: 'none',\n      }],\n      layout: { title: \"Data model Statistics\",\n      yaxis:{\n        title: \"Variables mapped\"\n      },\n      xaxis:{\n        title: \"Sources\"\n        }\n   },\n    };\n  },\n  async created() {\n    const response = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attr-by-source\"\n    );\n    var data = response.data[\"attr_by_src\"];\n    Object.keys(data).forEach((src) => {\n      this.data[0].x.push(src);\n      this.data[0].y.push(data[src]);\n    });\n    this.data[0].text =  this.data[0].y.map(String);\n  },\n};\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}