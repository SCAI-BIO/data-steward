{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/thread-loader/dist/cjs.js!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/babel-loader/lib/index.js!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/DataModelGraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/DataModelGraph.vue","mtime":1626075497077},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9waGlsaXBwd2VnbmVyL0Rlc2t0b3AvRnJhdW5ob2Zlci9TRU0tR3JvdXAvZ2l0L2RhdGEtc3Rld2FyZC10b29sL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnNldC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5maXhlZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXggZnJvbSAiYXhpb3MiOwp2YXIgYXhpb3MgPSBheDsKaW1wb3J0IE0gZnJvbSAibWF0ZXJpYWxpemUtY3NzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJncmFwaCIsCiAgbWV0aG9kczogewogICAgaGlkZU5hdjogZnVuY3Rpb24gaGlkZU5hdigpIHsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRvcF9uYXZfZGl2Iikuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImhpZGVOYXZCdG4iKS5jbGFzc0xpc3QuYWRkKCJoaWRlIik7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzaG93TmF2QnRuIikuY2xhc3NMaXN0LnJlbW92ZSgiaGlkZSIpOwogICAgfSwKICAgIHNob3dOYXY6IGZ1bmN0aW9uIHNob3dOYXYoKSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0b3BfbmF2X2RpdiIpLnN0eWxlLmRpc3BsYXkgPSAiZmxleCI7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJzaG93TmF2QnRuIikuY2xhc3NMaXN0LmFkZCgiaGlkZSIpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiaGlkZU5hdkJ0biIpLmNsYXNzTGlzdC5yZW1vdmUoImhpZGUiKTsKICAgIH0sCiAgICB1c2VyS2V5Ym9hcmQ6IGZ1bmN0aW9uIHVzZXJLZXlib2FyZChlKSB7CiAgICAgIGlmIChlLmtleUNvZGUgPT0gNzAgJiYgZS5jdHJsS2V5KSB7CiAgICAgICAgYWxlcnQoImN0cmwgRiIpOwogICAgICB9CiAgICB9LAogICAgY2x1c3RlckFsbDogZnVuY3Rpb24gY2x1c3RlckFsbCgpIHsKICAgICAgLy8gQ0xVU1RFUklORyB2aWEgVE9QSUNTCiAgICAgIHZhciBvcHRpb25zX3RvcGljcyA9IFtdOwogICAgICB0aGlzLnRvcGljc19hbGwuZm9yRWFjaChmdW5jdGlvbiAodG9waWMpIHsKICAgICAgICB2YXIgb3B0aW9uc190b3BpYyA9IHsKICAgICAgICAgIGpvaW5Db25kaXRpb246IGZ1bmN0aW9uIGpvaW5Db25kaXRpb24obm9kZU9wdGlvbnMpIHsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZygiSEFMTE9IQUxMTyIpOwogICAgICAgICAgICByZXR1cm4gbm9kZU9wdGlvbnMuY2lkID09IHRvcGljOwogICAgICAgICAgfSwKICAgICAgICAgIGNsdXN0ZXJOb2RlUHJvcGVydGllczogewogICAgICAgICAgICBpZDogImNpZENsdXN0ZXJfIiArIHRvcGljLAogICAgICAgICAgICBib3JkZXJXaWR0aDogMywKICAgICAgICAgICAgc2hhcGU6ICJzcXVhcmUiLAogICAgICAgICAgICBsYWJlbDogdG9waWMKICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIG9wdGlvbnNfdG9waWNzLnB1c2gob3B0aW9uc190b3BpYyk7IC8vIGNvbnNvbGUubG9nKHRvcGljICsgIiBjbHVzdGVyaW5nLi4uIik7CiAgICAgICAgLy8gdGhpcy4kcmVmcy5uZXR3b3JrLmNsdXN0ZXIob3B0aW9uc190b3BpYyk7CiAgICAgIH0pOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBvcHRpb25zX3RvcGljcy5sZW5ndGg7IGkrKykgewogICAgICAgIHRoaXMuJHJlZnMubmV0d29yay5jbHVzdGVyKG9wdGlvbnNfdG9waWNzW2ldKTsKICAgICAgfSAvLyBDTFVTVEVSSU5HIHZpYSBTT1VSQ0VTCgoKICAgICAgdmFyIG9wdGlvbnNfc291cmNlcyA9IFtdOwogICAgICB0aGlzLnNvdXJjZXNfYWxsLmZvckVhY2goZnVuY3Rpb24gKHNvdXJjZSkgewogICAgICAgIHZhciBvcHRpb25zX3NvdXJjZSA9IHsKICAgICAgICAgIGpvaW5Db25kaXRpb246IGZ1bmN0aW9uIGpvaW5Db25kaXRpb24obm9kZU9wdGlvbnMpIHsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZygiSEFMTE9IQUxMTyIpOwogICAgICAgICAgICByZXR1cm4gbm9kZU9wdGlvbnMuY2lkID09IHNvdXJjZTsKICAgICAgICAgIH0sCiAgICAgICAgICBjbHVzdGVyTm9kZVByb3BlcnRpZXM6IHsKICAgICAgICAgICAgaWQ6ICJjaWRDbHVzdGVyXyIgKyBzb3VyY2UsCiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAzLAogICAgICAgICAgICBzaGFwZTogInNxdWFyZSIsCiAgICAgICAgICAgIGxhYmVsOiBzb3VyY2UsCiAgICAgICAgICAgIGNvbG9yOiB7CiAgICAgICAgICAgICAgYmFja2dyb3VuZDogIiNjMmFkNGIiLAogICAgICAgICAgICAgIGJvcmRlcjogIiNjMmFkNGIiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIG9wdGlvbnNfc291cmNlcy5wdXNoKG9wdGlvbnNfc291cmNlKTsgLy8gY29uc29sZS5sb2codG9waWMgKyAiIGNsdXN0ZXJpbmcuLi4iKTsKICAgICAgICAvLyB0aGlzLiRyZWZzLm5ldHdvcmsuY2x1c3RlcihvcHRpb25zX3RvcGljKTsKICAgICAgfSk7CgogICAgICBmb3IgKHZhciBwID0gMDsgcCA8IG9wdGlvbnNfc291cmNlcy5sZW5ndGg7IHArKykgewogICAgICAgIHRoaXMuJHJlZnMubmV0d29yay5jbHVzdGVyKG9wdGlvbnNfc291cmNlc1twXSk7CiAgICAgIH0KICAgIH0sCiAgICBnZW5lcmFsQ2xpY2s6IGZ1bmN0aW9uIGdlbmVyYWxDbGljaygpIHsKICAgICAgdmFyIG1lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmlnaHRDbGlja01lbnUiKTsKCiAgICAgIGlmIChtZW51LnN0eWxlLmRpc3BsYXkgPT0gImJsb2NrIikgewogICAgICAgIG1lbnUuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgfQogICAgfSwKICAgIG9uQ29udGV4dENsaWNrU3ViOiBmdW5jdGlvbiBvbkNvbnRleHRDbGlja1N1YihwYXJhbXMpIHsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJpZ2h0TWVudUxpc3QiKS5pbm5lckhUTUwgPSAiIjsKCiAgICAgIGlmIChwYXJhbXMubm9kZXMubGVuZ3RoID09IDEpIHsKICAgICAgICB2YXIgZSA9IHBhcmFtcy5ldmVudDsKICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgdmFyIG1lbnUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmlnaHRDbGlja01lbnUiKTsKICAgICAgICB2YXIgcGFnZXggPSBlLnBhZ2VYOwogICAgICAgIHZhciBwYWdleSA9IGUucGFnZVk7CiAgICAgICAgbWVudS5zdHlsZS5sZWZ0ID0gIiIuY29uY2F0KHBhZ2V4LCAicHgiKTsKICAgICAgICBtZW51LnN0eWxlLnRvcCA9ICIiLmNvbmNhdChwYWdleSwgInB4Iik7CiAgICAgICAgbWVudS5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmlnaHRNZW51TGlzdCIpLmlubmVySFRNTCA9ICIiOwoKICAgICAgICBpZiAodGhpcy4kcmVmcy5uZXR3b3JrLmlzQ2x1c3RlcihwYXJhbXMubm9kZXNbMF0pKSB7CiAgICAgICAgICBjb25zb2xlLmVycm9yKCJjbHVzdGVyIG9jY3VyZWQgaW4gc3ViIGdyYXBoLi4uIik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIFsiSW5zcGVjdCIsICJTaG93IG1vcmUgaW4gT0xTIl0uZm9yRWFjaChmdW5jdGlvbiAocykgewogICAgICAgICAgICB2YXIgbGlzdGVsZW1Ob2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibGkiKTsKICAgICAgICAgICAgbGlzdGVsZW1Ob2RlLmNsYXNzTGlzdC5hZGQoIm1lbnUtb3B0aW9uIik7CiAgICAgICAgICAgIHZhciBidG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTsKICAgICAgICAgICAgYnRuLmNsYXNzTGlzdC5hZGQoImJ0biIpOwogICAgICAgICAgICBidG4uY2xhc3NMaXN0LmFkZCgid2F2ZXMtZWZmZWN0Iik7CiAgICAgICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCJibHVlLWdyZXkiLCAibGlnaHRlbi0xIik7CiAgICAgICAgICAgIGJ0bi5zdHlsZS5oZWlnaHQgPSAiYXV0byI7CiAgICAgICAgICAgIGJ0bi5zdHlsZS53aWR0aCA9ICJhdXRvIjsKICAgICAgICAgICAgYnRuLnN0eWxlLm1hcmdpbiA9ICIycHgiOwogICAgICAgICAgICB2YXIgdGV4dE5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShzKTsKCiAgICAgICAgICAgIGlmIChzID09ICJJbnNwZWN0IikgewogICAgICAgICAgICAgIGJ0bi5vbmNsaWNrID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgdmFyIGdldFBhcmFtcyA9IHt9OwoKICAgICAgICAgICAgICAgIGlmIChwYXJhbXMubm9kZXNbMF0uc3RhcnRzV2l0aCgiYXR0cl8iKSkgewogICAgICAgICAgICAgICAgICBnZXRQYXJhbXNbInR5cGUiXSA9ICJhdHRyaWJ1dGUiOwogICAgICAgICAgICAgICAgICBnZXRQYXJhbXNbIm5vZGUiXSA9IHBhcmFtcy5ub2Rlc1swXS5yZXBsYWNlKCJhdHRyXyIsICIiKTsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocGFyYW1zLm5vZGVzWzBdLnN0YXJ0c1dpdGgoInNvdXJjZXNfIikpIHsKICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1zWyJ0eXBlIl0gPSAic291cmNlIjsKICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1zWyJub2RlIl0gPSBwYXJhbXMubm9kZXNbMF0ucmVwbGFjZSgic291cmNlc18iLCAiIik7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBnZXRQYXJhbXNbInR5cGUiXSA9ICJjb3JlIjsKICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1zWyJub2RlIl0gPSBwYXJhbXMubm9kZXNbMF07CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgdmFyIGF0dHJpYnV0ZUluZm9ybWF0aW9uID0gYXhpb3MuZ2V0KHByb2Nlc3MuZW52LlZVRV9BUFBfQ0xJTklDQUxVUkwgKyAiL2dldC9hdHRyaWJ1dGUiLCB7CiAgICAgICAgICAgICAgICAgIHBhcmFtczogZ2V0UGFyYW1zCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGF0dHJpYnV0ZUluZm9ybWF0aW9uLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgdmFyIGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibW9kYWwxIik7CiAgICAgICAgICAgICAgICAgIHZhciBpbnN0YW5jZSA9IE0uTW9kYWwuZ2V0SW5zdGFuY2UoZWxlbSk7CiAgICAgICAgICAgICAgICAgIHZhciBtb2RhbEhlYWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJoZWFkZXJNb2RhbCIpOwogICAgICAgICAgICAgICAgICBtb2RhbEhlYWRlci50ZXh0Q29udGVudCA9ICJWYXJpYWJsZSBOYW1lOiAiICsgZ2V0UGFyYW1zWyJub2RlIl07CiAgICAgICAgICAgICAgICAgIHZhciBtb2RhbFRleHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidGV4dE1vZGFsIik7CiAgICAgICAgICAgICAgICAgIG1vZGFsVGV4dC5pbm5lckhUTUwgPSAiIjsKCiAgICAgICAgICAgICAgICAgIGlmIChkYXRhWyJkYXRhIl1bImluZm9ybWF0aW9uIl0gPT0gIm5vbmUiKSB7CiAgICAgICAgICAgICAgICAgICAgbW9kYWxUZXh0LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJObyBpbmZvcm1hdGlvbiBhdmFpbGFibGUgaW4gQ2xpbmljYWwgQmFja2VuZC4uLiIpKTsKICAgICAgICAgICAgICAgICAgICBtZW51LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2Uub3BlbigpOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHZhciBkYXRhX2FzX2pzb24gPSBKU09OLnBhcnNlKGRhdGFbImRhdGEiXVsiaW5mb3JtYXRpb24iXSlbMF1bImZpZWxkcyJdOwogICAgICAgICAgICAgICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoZGF0YV9hc19qc29uKTsKICAgICAgICAgICAgICAgICAgICB2YXIgdGJsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGFibGUiKTsKICAgICAgICAgICAgICAgICAgICB0Ymwuc3R5bGUud2lkdGggPSAiMTAwJSI7CiAgICAgICAgICAgICAgICAgICAgdGJsLnNldEF0dHJpYnV0ZSgiYm9yZGVyIiwgIjEiKTsKICAgICAgICAgICAgICAgICAgICB2YXIgdGJkeSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRib2R5Iik7CiAgICAgICAgICAgICAgICAgICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICAgICAgICAgICAgdmFyIHJvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRyIik7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZCIpOwogICAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGwyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGQiKTsKICAgICAgICAgICAgICAgICAgICAgIGNlbGwxLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHZhbHVlKSk7CiAgICAgICAgICAgICAgICAgICAgICBjZWxsMi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShkYXRhX2FzX2pzb25bdmFsdWVdKSk7CiAgICAgICAgICAgICAgICAgICAgICByb3cuYXBwZW5kQ2hpbGQoY2VsbDEpOwogICAgICAgICAgICAgICAgICAgICAgcm93LmFwcGVuZENoaWxkKGNlbGwyKTsKICAgICAgICAgICAgICAgICAgICAgIHRiZHkuYXBwZW5kQ2hpbGQocm93KTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB0YmwuYXBwZW5kQ2hpbGQodGJkeSk7CiAgICAgICAgICAgICAgICAgICAgbW9kYWxUZXh0LmFwcGVuZENoaWxkKHRibCk7CiAgICAgICAgICAgICAgICAgICAgbWVudS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICAgICAgICAgICAgICAgIGluc3RhbmNlLm9wZW4oKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7IC8vY29uc29sZS5sb2coYXR0cmlidXRlSW5mb3JtYXRpb24pOwogICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChzID09ICJTaG93IG1vcmUgaW4gT0xTIikgewogICAgICAgICAgICAgIGJ0bi5vbmNsaWNrID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgd2luZG93Lm9wZW4ocHJvY2Vzcy5lbnYuVlVFX0FQUF9PTFNVUkwgKyAic2VhcmNoP3E9IiArIHBhcmFtcy5ub2Rlc1swXS5yZXBsYWNlKCJhdHRyXyIsICIiKSwgInBvcFVwV2luZG93IiwgImhlaWdodD04MDAsd2lkdGg9MTIwMCxsZWZ0PTEwLHRvcD0xMCwsc2Nyb2xsYmFycz15ZXMsbWVudWJhcj1ubyIpOwogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgIH07CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGJ0bi5hcHBlbmRDaGlsZCh0ZXh0Tm9kZSk7CiAgICAgICAgICAgIGxpc3RlbGVtTm9kZS5hcHBlbmRDaGlsZChidG4pOwogICAgICAgICAgICBtZW51LmZpcnN0Q2hpbGQuYXBwZW5kQ2hpbGQobGlzdGVsZW1Ob2RlKTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAocGFyYW1zLmVkZ2VzLmxlbmd0aCA9PSAxKSB7CiAgICAgICAgICB2YXIgYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7CiAgICAgICAgICB2YXIgZWRnZSA9IHBhcmFtcy5lZGdlc1swXTsKICAgICAgICAgIHZhciBfZSA9IHBhcmFtcy5ldmVudDsKCiAgICAgICAgICBfZS5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgIHZhciBfbWVudSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyaWdodENsaWNrTWVudSIpOwoKICAgICAgICAgIHBhZ2V4ID0gX2UucGFnZVg7CiAgICAgICAgICBwYWdleSA9IF9lLnBhZ2VZOwogICAgICAgICAgX21lbnUuc3R5bGUubGVmdCA9ICIiLmNvbmNhdChwYWdleCwgInB4Iik7CiAgICAgICAgICBfbWVudS5zdHlsZS50b3AgPSAiIi5jb25jYXQocGFnZXksICJweCIpOwogICAgICAgICAgX21lbnUuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmlnaHRNZW51TGlzdCIpLmlubmVySFRNTCA9ICIiOwogICAgICAgICAgdmFyIG5ldHcgPSB0aGlzLiRyZWZzLm5ldHdvcms7CiAgICAgICAgICB2YXIgbGlzdGVsZW1Ob2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibGkiKTsKICAgICAgICAgIGxpc3RlbGVtTm9kZS5jbGFzc0xpc3QuYWRkKCJtZW51LW9wdGlvbiIpOwogICAgICAgICAgYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7CiAgICAgICAgICBidG4uY2xhc3NMaXN0LmFkZCgiYnRuIik7CiAgICAgICAgICBidG4uY2xhc3NMaXN0LmFkZCgid2F2ZXMtZWZmZWN0Iik7CiAgICAgICAgICBidG4uY2xhc3NMaXN0LmFkZCgiYmx1ZS1ncmV5IiwgImxpZ2h0ZW4tMSIpOwogICAgICAgICAgYnRuLnN0eWxlLmhlaWdodCA9ICJhdXRvIjsKICAgICAgICAgIGJ0bi5zdHlsZS53aWR0aCA9ICJhdXRvIjsKICAgICAgICAgIGJ0bi5zdHlsZS5tYXJnaW4gPSAiMnB4IjsKICAgICAgICAgIHZhciBzID0gIkluc3BlY3QiOwogICAgICAgICAgdmFyIHRleHROb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocyArICIgRWRnZSIpOwoKICAgICAgICAgIGlmIChzID09ICJJbnNwZWN0IikgewogICAgICAgICAgICBidG4ub25jbGljayA9IC8qI19fUFVSRV9fKi9fYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgICAgICAgdmFyIGdldFBhcmFtcywgY29ubmVjdGVkTm9kZXMsIGF0dHJpYnV0ZU1hcHBpbmdJbmZvcm1hdGlvbiwgZGF0YSwgZWxlbSwgaW5zdGFuY2UsIG1vZGFsSGVhZGVyLCBtb2RhbFRleHQsIGRhdGFfYXNfanNvbiwga2V5cywgdGJsLCB0YmR5OwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgIGdldFBhcmFtcyA9IHt9OwogICAgICAgICAgICAgICAgICAgICAgY29ubmVjdGVkTm9kZXMgPSBuZXR3LmdldENvbm5lY3RlZE5vZGVzKGVkZ2UpOwoKICAgICAgICAgICAgICAgICAgICAgIGlmICghKGNvbm5lY3RlZE5vZGVzWzBdLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoImNsdXN0ZXIiKSB8fCBjb25uZWN0ZWROb2Rlc1sxXS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCJjbHVzdGVyIikpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICBNLnRvYXN0KHsKICAgICAgICAgICAgICAgICAgICAgICAgaHRtbDogIlBsZWFzZSBPcGVuIHRoZSBjbHVzdGVyIGJlZm9yZSBpbnNwZWN0aW5nIGVkZ2VzISIKICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICAgIGlmICghKGNvbm5lY3RlZE5vZGVzWzBdLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoInNvdXJjZSIpIHx8IGNvbm5lY3RlZE5vZGVzWzFdLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoInNvdXJjZSIpKSkgewogICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgTS50b2FzdCh7CiAgICAgICAgICAgICAgICAgICAgICAgIGh0bWw6ICJNYXBwaW5ncyBvZiB0eXBlICdwYXJ0X29mJyBkbyBub3QgY29udGFpbiBtb3JlIGluZm9ybWF0aW9uISIKICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgICAgICAgIGdldFBhcmFtc1siYXR0cl8xIl0gPSBjb25uZWN0ZWROb2Rlc1swXS5yZXBsYWNlKCJhdHRyXyIsICIiKTsKICAgICAgICAgICAgICAgICAgICAgIGdldFBhcmFtc1siYXR0cl8yIl0gPSBjb25uZWN0ZWROb2Rlc1sxXS5yZXBsYWNlKCJhdHRyXyIsICIiKTsgLy9jb25zb2xlLmxvZyhjb25uZWN0ZWROb2Rlcyk7CgogICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChwcm9jZXNzLmVudi5WVUVfQVBQX0NMSU5JQ0FMVVJMICsgIi9nZXQvYXR0cmlidXRlLW1hcHBpbmciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczogZ2V0UGFyYW1zCiAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZU1hcHBpbmdJbmZvcm1hdGlvbiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGF0dHJpYnV0ZU1hcHBpbmdJbmZvcm1hdGlvbik7CiAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gYXR0cmlidXRlTWFwcGluZ0luZm9ybWF0aW9uWyJkYXRhIl07IC8vY29uc29sZS5sb2coZGF0YSk7CgogICAgICAgICAgICAgICAgICAgICAgZWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtb2RhbDEiKTsKICAgICAgICAgICAgICAgICAgICAgIGluc3RhbmNlID0gTS5Nb2RhbC5nZXRJbnN0YW5jZShlbGVtKTsKICAgICAgICAgICAgICAgICAgICAgIG1vZGFsSGVhZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImhlYWRlck1vZGFsIik7CiAgICAgICAgICAgICAgICAgICAgICBtb2RhbEhlYWRlci50ZXh0Q29udGVudCA9ICJWYXJpYWJsZSBNYXBwaW5nOiAiICsgZ2V0UGFyYW1zWyJhdHRyXzEiXSArICIsICIgKyBnZXRQYXJhbXNbImF0dHJfMiJdOwogICAgICAgICAgICAgICAgICAgICAgbW9kYWxUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRleHRNb2RhbCIpOwogICAgICAgICAgICAgICAgICAgICAgbW9kYWxUZXh0LmlubmVySFRNTCA9ICIiOwoKICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhWyJpbmZvcm1hdGlvbiJdID09ICJub25lIikgewogICAgICAgICAgICAgICAgICAgICAgICBtb2RhbFRleHQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIk5vIGluZm9ybWF0aW9uIGF2YWlsYWJsZSBpbiBDbGluaWNhbCBCYWNrZW5kLi4uIikpOwogICAgICAgICAgICAgICAgICAgICAgICBfbWVudS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5vcGVuKCk7CiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICBkYXRhX2FzX2pzb24gPSBKU09OLnBhcnNlKGRhdGFbImluZm9ybWF0aW9uIl0pWzBdWyJmaWVsZHMiXTsKICAgICAgICAgICAgICAgICAgICAgICAga2V5cyA9IE9iamVjdC5rZXlzKGRhdGFfYXNfanNvbik7CiAgICAgICAgICAgICAgICAgICAgICAgIHRibCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRhYmxlIik7CiAgICAgICAgICAgICAgICAgICAgICAgIHRibC5zdHlsZS53aWR0aCA9ICIxMDAlIjsKICAgICAgICAgICAgICAgICAgICAgICAgdGJsLnNldEF0dHJpYnV0ZSgiYm9yZGVyIiwgIjEiKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGJkeSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRib2R5Iik7CiAgICAgICAgICAgICAgICAgICAgICAgIGtleXMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidHIiKTsKICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY2VsbDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ZCIpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjZWxsMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRkIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY2VsbDEuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodmFsdWUpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsMi5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShkYXRhX2FzX2pzb25bdmFsdWVdKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcm93LmFwcGVuZENoaWxkKGNlbGwxKTsKICAgICAgICAgICAgICAgICAgICAgICAgICByb3cuYXBwZW5kQ2hpbGQoY2VsbDIpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHRiZHkuYXBwZW5kQ2hpbGQocm93KTsKICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHRibC5hcHBlbmRDaGlsZCh0YmR5KTsKICAgICAgICAgICAgICAgICAgICAgICAgbW9kYWxUZXh0LmFwcGVuZENoaWxkKHRibCk7CiAgICAgICAgICAgICAgICAgICAgICAgIF9tZW51LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbmNlLm9wZW4oKTsKICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgY2FzZSAyMToKICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sIF9jYWxsZWUpOwogICAgICAgICAgICB9KSk7CiAgICAgICAgICAgIGJ0bi5hcHBlbmRDaGlsZCh0ZXh0Tm9kZSk7CiAgICAgICAgICAgIGxpc3RlbGVtTm9kZS5hcHBlbmRDaGlsZChidG4pOwoKICAgICAgICAgICAgX21lbnUuZmlyc3RDaGlsZC5hcHBlbmRDaGlsZChsaXN0ZWxlbU5vZGUpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgb25Db250ZXh0Q2xpY2s6IGZ1bmN0aW9uIG9uQ29udGV4dENsaWNrKHBhcmFtcykgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJpZ2h0TWVudUxpc3QiKS5pbm5lckhUTUwgPSAiIjsKICAgICAgdmFyIHBhZ2V5OwogICAgICB2YXIgcGFnZXg7CgogICAgICBpZiAocGFyYW1zLm5vZGVzLmxlbmd0aCA9PSAxKSB7CiAgICAgICAgdmFyIGUgPSBwYXJhbXMuZXZlbnQ7CiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIHZhciBtZW51ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInJpZ2h0Q2xpY2tNZW51Iik7CiAgICAgICAgcGFnZXggPSBlLnBhZ2VYOwogICAgICAgIHBhZ2V5ID0gZS5wYWdlWTsKICAgICAgICBtZW51LnN0eWxlLmxlZnQgPSAiIi5jb25jYXQocGFnZXgsICJweCIpOwogICAgICAgIG1lbnUuc3R5bGUudG9wID0gIiIuY29uY2F0KHBhZ2V5LCAicHgiKTsKICAgICAgICBtZW51LnN0eWxlLmRpc3BsYXkgPSAiYmxvY2siOwogICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyaWdodE1lbnVMaXN0IikuaW5uZXJIVE1MID0gIiI7CiAgICAgICAgdmFyIG5ldHcgPSB0aGlzLiRyZWZzLm5ldHdvcms7CgogICAgICAgIGlmICh0aGlzLiRyZWZzLm5ldHdvcmsuaXNDbHVzdGVyKHBhcmFtcy5ub2Rlc1swXSkpIHsKICAgICAgICAgIHZhciBsaXN0ZWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxpIik7CiAgICAgICAgICBsaXN0ZWxlbS5jbGFzc0xpc3QuYWRkKCJtZW51LW9wdGlvbiIpOwogICAgICAgICAgdmFyIHRleHQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiT3BlbiB0aGlzIENsdXN0ZXIiKTsKICAgICAgICAgIHZhciBidG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTsKICAgICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCJidG4iKTsKICAgICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCJ3YXZlcy1lZmZlY3QiKTsKICAgICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCJibHVlLWdyZXkiLCAibGlnaHRlbi0xIik7CiAgICAgICAgICBidG4uc3R5bGUuaGVpZ2h0ID0gImF1dG8iOwogICAgICAgICAgYnRuLnN0eWxlLndpZHRoID0gImF1dG8iOwogICAgICAgICAgYnRuLnN0eWxlLm1hcmdpbiA9ICIycHgiOwoKICAgICAgICAgIGJ0bi5vbmNsaWNrID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICBuZXR3Lm9wZW5DbHVzdGVyKHBhcmFtcy5ub2Rlc1swXSk7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJyaWdodENsaWNrTWVudSIpLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgICB9OwoKICAgICAgICAgIGJ0bi5hcHBlbmRDaGlsZCh0ZXh0KTsKICAgICAgICAgIGxpc3RlbGVtLmFwcGVuZENoaWxkKGJ0bik7CiAgICAgICAgICBtZW51LmZpcnN0Q2hpbGQuYXBwZW5kQ2hpbGQobGlzdGVsZW0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBbIkluc3BlY3QiLCAiT3BlbiBzdWIgZ3JhcGgiLCAiU2hvdyBtb3JlIGluIE9MUyJdLmZvckVhY2goZnVuY3Rpb24gKHMpIHsKICAgICAgICAgICAgdmFyIGxpc3RlbGVtTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxpIik7CiAgICAgICAgICAgIGxpc3RlbGVtTm9kZS5jbGFzc0xpc3QuYWRkKCJtZW51LW9wdGlvbiIpOwogICAgICAgICAgICB2YXIgYnRuID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYnV0dG9uIik7CiAgICAgICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCJidG4iKTsKICAgICAgICAgICAgYnRuLmNsYXNzTGlzdC5hZGQoIndhdmVzLWVmZmVjdCIpOwogICAgICAgICAgICBidG4uY2xhc3NMaXN0LmFkZCgiYmx1ZS1ncmV5IiwgImxpZ2h0ZW4tMSIpOwogICAgICAgICAgICBidG4uc3R5bGUuaGVpZ2h0ID0gImF1dG8iOwogICAgICAgICAgICBidG4uc3R5bGUud2lkdGggPSAiYXV0byI7CiAgICAgICAgICAgIGJ0bi5zdHlsZS5tYXJnaW4gPSAiMnB4IjsKICAgICAgICAgICAgdmFyIHRleHROb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUocyk7CgogICAgICAgICAgICBpZiAocyA9PSAiSW5zcGVjdCIpIHsKICAgICAgICAgICAgICBidG4ub25jbGljayA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHZhciBnZXRQYXJhbXMgPSB7fTsKCiAgICAgICAgICAgICAgICBpZiAocGFyYW1zLm5vZGVzWzBdLnN0YXJ0c1dpdGgoImF0dHJfIikpIHsKICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1zWyJ0eXBlIl0gPSAiYXR0cmlidXRlIjsKICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1zWyJub2RlIl0gPSBwYXJhbXMubm9kZXNbMF0ucmVwbGFjZSgiYXR0cl8iLCAiIik7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHBhcmFtcy5ub2Rlc1swXS5zdGFydHNXaXRoKCJzb3VyY2VzXyIpKSB7CiAgICAgICAgICAgICAgICAgIGdldFBhcmFtc1sidHlwZSJdID0gInNvdXJjZSI7CiAgICAgICAgICAgICAgICAgIGdldFBhcmFtc1sibm9kZSJdID0gcGFyYW1zLm5vZGVzWzBdLnJlcGxhY2UoInNvdXJjZXNfIiwgIiIpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1zWyJ0eXBlIl0gPSAiY29yZSI7CiAgICAgICAgICAgICAgICAgIGdldFBhcmFtc1sibm9kZSJdID0gcGFyYW1zLm5vZGVzWzBdOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHZhciBhdHRyaWJ1dGVJbmZvcm1hdGlvbiA9IGF4aW9zLmdldChwcm9jZXNzLmVudi5WVUVfQVBQX0NMSU5JQ0FMVVJMICsgIi9nZXQvYXR0cmlidXRlIiwgewogICAgICAgICAgICAgICAgICBwYXJhbXM6IGdldFBhcmFtcwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBhdHRyaWJ1dGVJbmZvcm1hdGlvbi50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1vZGFsMSIpOwogICAgICAgICAgICAgICAgICB2YXIgaW5zdGFuY2UgPSBNLk1vZGFsLmdldEluc3RhbmNlKGVsZW0pOwogICAgICAgICAgICAgICAgICB2YXIgbW9kYWxIZWFkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiaGVhZGVyTW9kYWwiKTsKICAgICAgICAgICAgICAgICAgbW9kYWxIZWFkZXIudGV4dENvbnRlbnQgPSAiVmFyaWFibGUgTmFtZTogIiArIGdldFBhcmFtc1sibm9kZSJdOwogICAgICAgICAgICAgICAgICB2YXIgbW9kYWxUZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRleHRNb2RhbCIpOwogICAgICAgICAgICAgICAgICBtb2RhbFRleHQuaW5uZXJIVE1MID0gIiI7CgogICAgICAgICAgICAgICAgICBpZiAoZGF0YVsiZGF0YSJdWyJpbmZvcm1hdGlvbiJdID09ICJub25lIikgewogICAgICAgICAgICAgICAgICAgIG1vZGFsVGV4dC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiTm8gaW5mb3JtYXRpb24gYXZhaWxhYmxlIGluIENsaW5pY2FsIEJhY2tlbmQuLi4iKSk7CiAgICAgICAgICAgICAgICAgICAgbWVudS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICAgICAgICAgICAgICAgIGluc3RhbmNlLm9wZW4oKTsKICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YV9hc19qc29uID0gSlNPTi5wYXJzZShkYXRhWyJkYXRhIl1bImluZm9ybWF0aW9uIl0pWzBdWyJmaWVsZHMiXTsKICAgICAgICAgICAgICAgICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGRhdGFfYXNfanNvbik7CiAgICAgICAgICAgICAgICAgICAgdmFyIHRibCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRhYmxlIik7CiAgICAgICAgICAgICAgICAgICAgdGJsLnN0eWxlLndpZHRoID0gIjEwMCUiOwogICAgICAgICAgICAgICAgICAgIHRibC5zZXRBdHRyaWJ1dGUoImJvcmRlciIsICIxIik7CiAgICAgICAgICAgICAgICAgICAgdmFyIHRiZHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0Ym9keSIpOwogICAgICAgICAgICAgICAgICAgIGtleXMuZm9yRWFjaChmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICAgIHZhciByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ciIpOwogICAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGwxID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGQiKTsKICAgICAgICAgICAgICAgICAgICAgIHZhciBjZWxsMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRkIik7CiAgICAgICAgICAgICAgICAgICAgICBjZWxsMS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh2YWx1ZSkpOwogICAgICAgICAgICAgICAgICAgICAgY2VsbDIuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZGF0YV9hc19qc29uW3ZhbHVlXSkpOwogICAgICAgICAgICAgICAgICAgICAgcm93LmFwcGVuZENoaWxkKGNlbGwxKTsKICAgICAgICAgICAgICAgICAgICAgIHJvdy5hcHBlbmRDaGlsZChjZWxsMik7CiAgICAgICAgICAgICAgICAgICAgICB0YmR5LmFwcGVuZENoaWxkKHJvdyk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgdGJsLmFwcGVuZENoaWxkKHRiZHkpOwogICAgICAgICAgICAgICAgICAgIG1vZGFsVGV4dC5hcHBlbmRDaGlsZCh0YmwpOwogICAgICAgICAgICAgICAgICAgIG1lbnUuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZS5vcGVuKCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOyAvL2NvbnNvbGUubG9nKGF0dHJpYnV0ZUluZm9ybWF0aW9uKTsKICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAocyA9PSAiU2hvdyBtb3JlIGluIE9MUyIpIHsKICAgICAgICAgICAgICBidG4ub25jbGljayA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHdpbmRvdy5vcGVuKHByb2Nlc3MuZW52LlZVRV9BUFBfT0xTVVJMICsgInNlYXJjaD9xPSIgKyBwYXJhbXMubm9kZXNbMF0ucmVwbGFjZSgiYXR0cl8iLCAiIiksICJwb3BVcFdpbmRvdyIsICJoZWlnaHQ9ODAwLHdpZHRoPTEyMDAsbGVmdD0xMCx0b3A9MTAsLHNjcm9sbGJhcnM9eWVzLG1lbnViYXI9bm8iKTsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAocyA9PSAiT3BlbiBzdWIgZ3JhcGgiKSB7CiAgICAgICAgICAgICAgLy9jb25zdCBzdWJuZXR3ID0gdGhpcy4kcmVmcy5zdWJfbmV0d29yazsKICAgICAgICAgICAgICBfdGhpcy5zdWJfbm9kZXMgPSBbXTsKICAgICAgICAgICAgICBfdGhpcy5zdWJfZWRnZXMgPSBbXTsKICAgICAgICAgICAgICB2YXIgc3ViX24gPSBfdGhpcy5zdWJfbm9kZXM7CiAgICAgICAgICAgICAgdmFyIHN1Yl9lID0gX3RoaXMuc3ViX2VkZ2VzOwoKICAgICAgICAgICAgICBidG4ub25jbGljayA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHZhciBub2RlID0gcGFyYW1zLm5vZGVzWzBdOwogICAgICAgICAgICAgICAgdmFyIGNvbm5lY3RlZE5vZGVzID0gbmV0dy5nZXRDb25uZWN0ZWROb2Rlcyhub2RlKTsKICAgICAgICAgICAgICAgIGNvbm5lY3RlZE5vZGVzLnB1c2gobm9kZSk7CiAgICAgICAgICAgICAgICB2YXIgY29ubmVjdGVkRWRnZXMgPSBuZXR3LmdldENvbm5lY3RlZEVkZ2VzKG5vZGUpOwogICAgICAgICAgICAgICAgdmFyIGluc3RhbmNlMiA9IE0uTW9kYWwuZ2V0SW5zdGFuY2UoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm1vZGFsMiIpKTsKICAgICAgICAgICAgICAgIGluc3RhbmNlMi5vcGVuKCk7CiAgICAgICAgICAgICAgICBjb25uZWN0ZWROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgICAgICAgICAgIHZhciBuID0gbmV0dy5nZXROb2RlKG5vZGUpOwoKICAgICAgICAgICAgICAgICAgaWYgKG4gIT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgIHN1Yl9uLnB1c2gobik7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgY29ubmVjdGVkRWRnZXMuZm9yRWFjaChmdW5jdGlvbiAoZWRnZSkgewogICAgICAgICAgICAgICAgICB2YXIgZWQgPSBuZXR3LmdldEVkZ2UoZWRnZSk7CgogICAgICAgICAgICAgICAgICBpZiAoZWQgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgIHN1Yl9lLnB1c2goZWQpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIG1lbnUuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgICAgICAgICB9OwogICAgICAgICAgICB9CgogICAgICAgICAgICBidG4uYXBwZW5kQ2hpbGQodGV4dE5vZGUpOwogICAgICAgICAgICBsaXN0ZWxlbU5vZGUuYXBwZW5kQ2hpbGQoYnRuKTsKICAgICAgICAgICAgbWVudS5maXJzdENoaWxkLmFwcGVuZENoaWxkKGxpc3RlbGVtTm9kZSk7CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgaWYgKHBhcmFtcy5lZGdlcy5sZW5ndGggPT0gMSkgewogICAgICAgICAgdmFyIGVkZ2UgPSBwYXJhbXMuZWRnZXNbMF07CiAgICAgICAgICB2YXIgX2UyID0gcGFyYW1zLmV2ZW50OwoKICAgICAgICAgIF9lMi5wcmV2ZW50RGVmYXVsdCgpOwoKICAgICAgICAgIHZhciBfbWVudTIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmlnaHRDbGlja01lbnUiKTsKCiAgICAgICAgICBwYWdleCA9IF9lMi5wYWdlWDsKICAgICAgICAgIHBhZ2V5ID0gX2UyLnBhZ2VZOwogICAgICAgICAgX21lbnUyLnN0eWxlLmxlZnQgPSAiIi5jb25jYXQocGFnZXgsICJweCIpOwogICAgICAgICAgX21lbnUyLnN0eWxlLnRvcCA9ICIiLmNvbmNhdChwYWdleSwgInB4Iik7CiAgICAgICAgICBfbWVudTIuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgicmlnaHRNZW51TGlzdCIpLmlubmVySFRNTCA9ICIiOwogICAgICAgICAgdmFyIF9uZXR3ID0gdGhpcy4kcmVmcy5uZXR3b3JrOwogICAgICAgICAgdmFyIGxpc3RlbGVtTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImxpIik7CiAgICAgICAgICBsaXN0ZWxlbU5vZGUuY2xhc3NMaXN0LmFkZCgibWVudS1vcHRpb24iKTsKICAgICAgICAgIGJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImJ1dHRvbiIpOwogICAgICAgICAgYnRuLmNsYXNzTGlzdC5hZGQoImJ0biIpOwogICAgICAgICAgYnRuLmNsYXNzTGlzdC5hZGQoIndhdmVzLWVmZmVjdCIpOwogICAgICAgICAgYnRuLmNsYXNzTGlzdC5hZGQoImJsdWUtZ3JleSIsICJsaWdodGVuLTEiKTsKICAgICAgICAgIGJ0bi5zdHlsZS5oZWlnaHQgPSAiYXV0byI7CiAgICAgICAgICBidG4uc3R5bGUud2lkdGggPSAiYXV0byI7CiAgICAgICAgICBidG4uc3R5bGUubWFyZ2luID0gIjJweCI7CiAgICAgICAgICB2YXIgcyA9ICJJbnNwZWN0IjsKICAgICAgICAgIHZhciB0ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHMgKyAiIEVkZ2UiKTsKCiAgICAgICAgICBpZiAocyA9PSAiSW5zcGVjdCIpIHsKICAgICAgICAgICAgYnRuLm9uY2xpY2sgPSAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICAgICAgICB2YXIgZ2V0UGFyYW1zLCBjb25uZWN0ZWROb2RlcywgYXR0cmlidXRlTWFwcGluZ0luZm9ybWF0aW9uLCBkYXRhLCBlbGVtLCBpbnN0YW5jZSwgbW9kYWxIZWFkZXIsIG1vZGFsVGV4dCwgZGF0YV9hc19qc29uLCBrZXlzLCB0YmwsIHRiZHk7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgIGdldFBhcmFtcyA9IHt9OwogICAgICAgICAgICAgICAgICAgICAgY29ubmVjdGVkTm9kZXMgPSBfbmV0dy5nZXRDb25uZWN0ZWROb2RlcyhlZGdlKTsKCiAgICAgICAgICAgICAgICAgICAgICBpZiAoIShjb25uZWN0ZWROb2Rlc1swXS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCJjbHVzdGVyIikgfHwgY29ubmVjdGVkTm9kZXNbMV0udG9Mb3dlckNhc2UoKS5pbmNsdWRlcygiY2x1c3RlciIpKSkgewogICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgIE0udG9hc3QoewogICAgICAgICAgICAgICAgICAgICAgICBodG1sOiAiUGxlYXNlIE9wZW4gdGhlIGNsdXN0ZXIgYmVmb3JlIGluc3BlY3RpbmcgZWRnZXMhIgogICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgICAgICAgIGlmICghKGNvbm5lY3RlZE5vZGVzWzBdLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoInNvdXJjZSIpIHx8IGNvbm5lY3RlZE5vZGVzWzFdLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoInNvdXJjZSIpKSkgewogICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDg7CiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgIE0udG9hc3QoewogICAgICAgICAgICAgICAgICAgICAgICBodG1sOiAiTWFwcGluZ3Mgb2YgdHlwZSAncGFydF9vZicgZG8gbm90IGNvbnRhaW4gbW9yZSBpbmZvcm1hdGlvbiEiCiAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1zWyJhdHRyXzEiXSA9IGNvbm5lY3RlZE5vZGVzWzBdLnJlcGxhY2UoImF0dHJfIiwgIiIpOwogICAgICAgICAgICAgICAgICAgICAgZ2V0UGFyYW1zWyJhdHRyXzIiXSA9IGNvbm5lY3RlZE5vZGVzWzFdLnJlcGxhY2UoImF0dHJfIiwgIiIpOyAvL2NvbnNvbGUubG9nKGNvbm5lY3RlZE5vZGVzKTsKCiAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChwcm9jZXNzLmVudi5WVUVfQVBQX0NMSU5JQ0FMVVJMICsgIi9nZXQvYXR0cmlidXRlLW1hcHBpbmciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtczogZ2V0UGFyYW1zCiAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICAgICAgICAgIGF0dHJpYnV0ZU1hcHBpbmdJbmZvcm1hdGlvbiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhhdHRyaWJ1dGVNYXBwaW5nSW5mb3JtYXRpb24pOwogICAgICAgICAgICAgICAgICAgICAgZGF0YSA9IGF0dHJpYnV0ZU1hcHBpbmdJbmZvcm1hdGlvblsiZGF0YSJdOyAvL2NvbnNvbGUubG9nKGRhdGEpOwoKICAgICAgICAgICAgICAgICAgICAgIGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibW9kYWwxIik7CiAgICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZSA9IE0uTW9kYWwuZ2V0SW5zdGFuY2UoZWxlbSk7CiAgICAgICAgICAgICAgICAgICAgICBtb2RhbEhlYWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJoZWFkZXJNb2RhbCIpOwogICAgICAgICAgICAgICAgICAgICAgbW9kYWxIZWFkZXIudGV4dENvbnRlbnQgPSAiVmFyaWFibGUgTWFwcGluZzogIiArIGdldFBhcmFtc1siYXR0cl8xIl0gKyAiLCAiICsgZ2V0UGFyYW1zWyJhdHRyXzIiXTsKICAgICAgICAgICAgICAgICAgICAgIG1vZGFsVGV4dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0ZXh0TW9kYWwiKTsKICAgICAgICAgICAgICAgICAgICAgIG1vZGFsVGV4dC5pbm5lckhUTUwgPSAiIjsKCiAgICAgICAgICAgICAgICAgICAgICBpZiAoZGF0YVsiaW5mb3JtYXRpb24iXSA9PSAibm9uZSIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbW9kYWxUZXh0LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCJObyBpbmZvcm1hdGlvbiBhdmFpbGFibGUgaW4gQ2xpbmljYWwgQmFja2VuZC4uLiIpKTsKICAgICAgICAgICAgICAgICAgICAgICAgX21lbnUyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbmNlLm9wZW4oKTsKICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFfYXNfanNvbiA9IEpTT04ucGFyc2UoZGF0YVsiaW5mb3JtYXRpb24iXSlbMF1bImZpZWxkcyJdOwogICAgICAgICAgICAgICAgICAgICAgICBrZXlzID0gT2JqZWN0LmtleXMoZGF0YV9hc19qc29uKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGJsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGFibGUiKTsKICAgICAgICAgICAgICAgICAgICAgICAgdGJsLnN0eWxlLndpZHRoID0gIjEwMCUiOwogICAgICAgICAgICAgICAgICAgICAgICB0Ymwuc2V0QXR0cmlidXRlKCJib3JkZXIiLCAiMSIpOwogICAgICAgICAgICAgICAgICAgICAgICB0YmR5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGJvZHkiKTsKICAgICAgICAgICAgICAgICAgICAgICAga2V5cy5mb3JFYWNoKGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHZhciByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJ0ciIpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBjZWxsMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRkIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNlbGwyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgidGQiKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBjZWxsMS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh2YWx1ZSkpOwogICAgICAgICAgICAgICAgICAgICAgICAgIGNlbGwyLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGRhdGFfYXNfanNvblt2YWx1ZV0pKTsKICAgICAgICAgICAgICAgICAgICAgICAgICByb3cuYXBwZW5kQ2hpbGQoY2VsbDEpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHJvdy5hcHBlbmRDaGlsZChjZWxsMik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdGJkeS5hcHBlbmRDaGlsZChyb3cpOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgdGJsLmFwcGVuZENoaWxkKHRiZHkpOwogICAgICAgICAgICAgICAgICAgICAgICBtb2RhbFRleHQuYXBwZW5kQ2hpbGQodGJsKTsKICAgICAgICAgICAgICAgICAgICAgICAgX21lbnUyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbmNlLm9wZW4oKTsKICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgY2FzZSAyMToKICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgICAgICAgIH0pKTsKICAgICAgICAgICAgYnRuLmFwcGVuZENoaWxkKHRleHROb2RlKTsKICAgICAgICAgICAgbGlzdGVsZW1Ob2RlLmFwcGVuZENoaWxkKGJ0bik7CgogICAgICAgICAgICBfbWVudTIuZmlyc3RDaGlsZC5hcHBlbmRDaGlsZChsaXN0ZWxlbU5vZGUpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgY2x1c3Rlck9wZW5BbGw6IGZ1bmN0aW9uIGNsdXN0ZXJPcGVuQWxsKCkgewogICAgICBmb3IgKHZhciBub2RlIGluIHRoaXMubm9kZXMpIHsKICAgICAgICBpZiAodGhpcy4kcmVmcy5uZXR3b3JrLmlzQ2x1c3Rlcihub2RlKSA9PSB0cnVlKSB7CiAgICAgICAgICB0aGlzLiRyZWZzLm5ldHdvcmsub3BlbkNsdXN0ZXIobm9kZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgb25Ob2RlQ2xpY2s6IGZ1bmN0aW9uIG9uTm9kZUNsaWNrKHBhcmFtcykgewogICAgICBjb25zb2xlLmxvZygiQ2xpY2tlZCBkb3VibGUiKTsgLy9jb25zb2xlLmxvZygiSEFMTE9IQUxMTyIpOwoKICAgICAgaWYgKHBhcmFtcy5ub2Rlcy5sZW5ndGggPT0gMSkgewogICAgICAgIGlmICh0aGlzLiRyZWZzLm5ldHdvcmsuaXNDbHVzdGVyKHBhcmFtcy5ub2Rlc1swXSkgPT0gdHJ1ZSkgewogICAgICAgICAgdGhpcy4kcmVmcy5uZXR3b3JrLm9wZW5DbHVzdGVyKHBhcmFtcy5ub2Rlc1swXSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgZGlzYWJsZVBoeXNpY3M6IGZ1bmN0aW9uIGRpc2FibGVQaHlzaWNzKCkgewogICAgICB2YXIgb3B0cyA9IHRoaXMuJHJlZnMubmV0d29ya1sib3B0aW9ucyJdOwogICAgICBvcHRzWyJwaHlzaWNzIl1bImVuYWJsZWQiXSA9IGZhbHNlOwogICAgICB0aGlzLiRyZWZzLm5ldHdvcmsuc2V0T3B0aW9ucyhvcHRzKTsKICAgIH0sCiAgICBlbmFibGVQaHlzaWNzOiBmdW5jdGlvbiBlbmFibGVQaHlzaWNzKCkgewogICAgICB2YXIgb3B0cyA9IHRoaXMuJHJlZnMubmV0d29ya1sib3B0aW9ucyJdOwogICAgICBvcHRzWyJwaHlzaWNzIl1bImVuYWJsZWQiXSA9IHRydWU7CiAgICAgIHRoaXMuJHJlZnMubmV0d29yay5zZXRPcHRpb25zKG9wdHMpOwogICAgfSwKICAgIGJ0bkNsaWNrOiBmdW5jdGlvbiBidG5DbGljaygpIHsKICAgICAgdmFyIG9wdGlvbnNfdG9waWMgPSB7CiAgICAgICAgam9pbkNvbmRpdGlvbjogZnVuY3Rpb24gam9pbkNvbmRpdGlvbihub2RlT3B0aW9ucykgewogICAgICAgICAgLy9jb25zb2xlLmxvZygiSEFMTE9IQUxMTyIpOwogICAgICAgICAgcmV0dXJuIG5vZGVPcHRpb25zLmNpZCA9PSB0aGlzLnRvcGljc19hbGxbMV07CiAgICAgICAgfSwKICAgICAgICBjbHVzdGVyTm9kZVByb3BlcnRpZXM6IHsKICAgICAgICAgIGlkOiAiY2lkQ2x1c3Rlcl8iICsgdGhpcy50b3BpY3NfYWxsWzFdLAogICAgICAgICAgYm9yZGVyV2lkdGg6IDMsCiAgICAgICAgICBzaGFwZTogImNpcmNsZSIsCiAgICAgICAgICBsYWJlbDogdGhpcy50b3BpY3NfYWxsWzFdCiAgICAgICAgfQogICAgICB9OwogICAgICBjb25zb2xlLmxvZygiY2x1c3RlcmluZy4uLiIpOwogICAgICB0aGlzLiRyZWZzLm5ldHdvcmsuY2x1c3RlcihvcHRpb25zX3RvcGljKTsKICAgIH0sCiAgICBmdWxsdGV4dFNlYXJjaDogZnVuY3Rpb24gZnVsbHRleHRTZWFyY2goKSB7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmdWxsdGV4dF9yZXN1bHQiKS5pbm5lckhUTUwgPSAiIjsKICAgICAgdmFyIG5ldHdvcmsgPSB0aGlzLiRyZWZzLm5ldHdvcms7CiAgICAgIHZhciBub2RlcyA9IHRoaXMubm9kZXM7CgogICAgICBmdW5jdGlvbiBzZWxlY3RUaGlzTm9kZShub2RlSWQpIHsKICAgICAgICB2YXIgZmluZE5vZGVzUmV0dXJuID0gbmV0d29yay5maW5kTm9kZShub2RlSWQpOwoKICAgICAgICBpZiAobmV0d29yay5pc0NsdXN0ZXIoZmluZE5vZGVzUmV0dXJuWzBdKSkgewogICAgICAgICAgbmV0d29yay5vcGVuQ2x1c3RlcihmaW5kTm9kZXNSZXR1cm5bMF0pOwogICAgICAgICAgcmV0dXJuIHNlbGVjdFRoaXNOb2RlKG5vZGVJZCk7CiAgICAgICAgfSAvL2NvbnNvbGUubG9nKG5vZGVJZCk7CgoKICAgICAgICBuZXR3b3JrLmZvY3VzKG5vZGVJZCk7CiAgICAgICAgbmV0d29yay5zZWxlY3ROb2Rlcyhbbm9kZUlkXSwgW3RydWVdKTsgLy8gY29uc29sZS5sb2cobm9kZXMpOwoKICAgICAgICB2YXIgc2VsID0gbm9kZXMuZmluZChmdW5jdGlvbiAob2JqKSB7CiAgICAgICAgICByZXR1cm4gb2JqWyJpZCJdID09IG5vZGVJZDsKICAgICAgICB9KTsKICAgICAgICBzZWxbImNvbG9yIl0gPSB7CiAgICAgICAgICBiYWNrZ3JvdW5kOiAicmVkIgogICAgICAgIH07CiAgICAgICAgbmV0d29yay5lZGl0Tm9kZSgpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIGZ1bGx0ZXh0X21vZGFsID0gTS5Nb2RhbC5nZXRJbnN0YW5jZShkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibW9kYWxfZnVsbHRleHQiKSk7CiAgICAgIGZ1bGx0ZXh0X21vZGFsLm9wZW4oKTsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZ1bGx0ZXh0X2lucHV0IikudmFsdWUgPSAiIjsKICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZ1bGx0ZXh0X2lucHV0IikuZm9jdXMoKTsKCiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmdWxsdGV4dF9mb3JtIikub25zdWJtaXQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBfcmVmMyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoZSkgewogICAgICAgICAgdmFyIGZ1bGx0ZXh0UmVzdWx0OwogICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICAgIHJldHVybiBheGlvcyh7CiAgICAgICAgICAgICAgICAgICAgdXJsOiBwcm9jZXNzLmVudi5WVUVfQVBQX0NMSU5JQ0FMVVJMICsgIi9nZXQvZnVsbHRleHQiICsgIj90ZXh0PSIgKyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnVsbHRleHRfaW5wdXQiKS52YWx1ZQogICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgIGZ1bGx0ZXh0UmVzdWx0ID0gX2NvbnRleHQzLnNlbnQ7CgogICAgICAgICAgICAgICAgICBpZiAoZnVsbHRleHRSZXN1bHQuc3RhdHVzID09IDIwMCAmJiBmdWxsdGV4dFJlc3VsdFsiZGF0YSJdWyJyZXN1bHQiXS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZ1bGx0ZXh0X3Jlc3VsdCIpLmlubmVySFRNTCA9ICIiOwogICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmdWxsdGV4dF9yZXN1bHQiKS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgiU2VhcmNoIFJlc3VsdHM6ICIpKTsKICAgICAgICAgICAgICAgICAgICBmdWxsdGV4dFJlc3VsdFsiZGF0YSJdWyJyZXN1bHQiXS5mb3JFYWNoKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICAgIHZhciBidG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJidXR0b24iKTsKCiAgICAgICAgICAgICAgICAgICAgICBidG4ub25jbGljayA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZnVsbHRleHRfbW9kYWwuY2xvc2UoKTsgLy9jb25zb2xlLmxvZyhyZXN1bHQpOwoKICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0VGhpc05vZGUoImF0dHJfIiArIHJlc3VsdCk7CiAgICAgICAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgICAgICAgIGJ0bi5jbGFzc0xpc3QuYWRkKCJidG4iLCAid2F2ZXMtZWZmZWN0IiwgImJsdWUtZ3JleSIsICJsaWdodGVuLTEiKTsKICAgICAgICAgICAgICAgICAgICAgIGJ0bi5pbm5lckhUTUwgPSByZXN1bHQ7CiAgICAgICAgICAgICAgICAgICAgICB2YXIgcm93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICAgICAgICAgICAgICAgICAgICByb3cuY2xhc3NMaXN0LmFkZCgicm93Iik7CiAgICAgICAgICAgICAgICAgICAgICByb3cuYXBwZW5kQ2hpbGQoYnRuKTsKICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmdWxsdGV4dF9yZXN1bHQiKS5hcHBlbmRDaGlsZChyb3cpOwogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJmdWxsdGV4dF9yZXN1bHQiKS5pbm5lckhUTUwgPSAiIjsKICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZnVsbHRleHRfcmVzdWx0IikuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoIk5vIEF0dHJpYnV0ZS9zIEZvdW5kLi4uIikpOwogICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgICAgfSkpOwoKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICB9OwogICAgICB9KCk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiZm9vdGVyLWZpeGVkIilbMF0uc3R5bGUucG9zaXRpb24gPSAicmVsYXRpdmUiOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KCkgewogICAgICB2YXIgZWxlbXNfdG9vbHRpcCwgYXR0cmlidXRlcywgc291cmNlc19hbGwsIGF0dHJfbWFwcGluZ3MsIGVsZW1zTW9kYWwsIF9sb29wLCB0LCB0b3BpY3MsIGF0dHIsIGssIF90LCBzb3VyY2VzLCBzLCBhdHRyaWJ1dGVfbWFwcGluZ3MsIGQsIF90b3BpY3MsIF9zb3VyY2VzLCBfeiwgX2s7CgogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGVsZW1zX3Rvb2x0aXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcudG9vbHRpcHBlZCcpOwogICAgICAgICAgICAgIE0uVG9vbHRpcC5pbml0KGVsZW1zX3Rvb2x0aXApOyAvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsb2FkZXJfdGV4dCcpLmlubmVySFRNTD0iRmV0Y2hpbmcgQXR0cmlidXRlcy4uLiI7CgogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KHByb2Nlc3MuZW52LlZVRV9BUFBfQ0xJTklDQUxVUkwgKyAiL2dldC9hdHRyaWJ1dGVzL2FsbCIpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGF0dHJpYnV0ZXMgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDc7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChwcm9jZXNzLmVudi5WVUVfQVBQX0NMSU5JQ0FMVVJMICsgIi9nZXQvc291cmNlcy9hbGwiKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBzb3VyY2VzX2FsbCA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChwcm9jZXNzLmVudi5WVUVfQVBQX0NMSU5JQ0FMVVJMICsgIi9nZXQvYXR0cmlidXRlLW1hcHBpbmdzL2FsbCIpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICBhdHRyX21hcHBpbmdzID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgICAgZWxlbXNNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5tb2RhbCIpOwogICAgICAgICAgICAgIE0uTW9kYWwuaW5pdChlbGVtc01vZGFsKTsKCiAgICAgICAgICAgICAgX2xvb3AgPSBmdW5jdGlvbiBfbG9vcCh0KSB7CiAgICAgICAgICAgICAgICBpZiAoIV90aGlzMi5ub2Rlcy5maWx0ZXIoZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGUuaWQgPT0gX3RoaXMyLnRvcGljc19kaWN0W3RdOwogICAgICAgICAgICAgICAgfSkubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiQURERUQ6IiArIHQpOwoKICAgICAgICAgICAgICAgICAgX3RoaXMyLm5vZGVzLnB1c2goewogICAgICAgICAgICAgICAgICAgIGlkOiBfdGhpczIudG9waWNzX2RpY3RbdF0sCiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IF90aGlzMi50b3BpY3NfZGljdFt0XSwKICAgICAgICAgICAgICAgICAgICBjb2xvcjogewogICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogIiNjNTVlMmQiLAogICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAiI2M1NWUyZCIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIGZpeGVkOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIGZvbnQ6IHsKICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAid2hpdGUiCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgIF90aGlzMi5lZGdlcy5wdXNoKHsKICAgICAgICAgICAgICAgICAgICBmcm9tOiBfdGhpczIudG9waWNzX2RpY3RbdF0sCiAgICAgICAgICAgICAgICAgICAgdG86ICJyb290IiwKICAgICAgICAgICAgICAgICAgICBjb2xvcjogImJsYWNrIgogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICBmb3IgKHQgaW4gX3RoaXMyLnRvcGljc19kaWN0KSB7CiAgICAgICAgICAgICAgICBfbG9vcCh0KTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHRvcGljcyA9IG5ldyBTZXQoKTsgLy9jb25zb2xlLmxvZyhyZXNwb25zZSk7CgogICAgICAgICAgICAgIGF0dHIgPSBhdHRyaWJ1dGVzWyJkYXRhIl1bImF0dHJpYnV0ZXMiXTsgLy9kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbG9hZGVyX3RleHQnKS5pbm5lckhUTUw9IkJ1aWxkaW5nIGdyYXBoLi4uIjsKCiAgICAgICAgICAgICAgZm9yIChrID0gMDsgayA8IGF0dHIubGVuZ3RoOyBrKyspIHsKICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coYXR0cltrXVsidG9waWMiXSk7CiAgICAgICAgICAgICAgICB0b3BpY3MuYWRkKGF0dHJba11bInRvcGljIl0pOwoKICAgICAgICAgICAgICAgIF90aGlzMi5ub2Rlcy5wdXNoKHsKICAgICAgICAgICAgICAgICAgaWQ6ICJhdHRyXyIgKyBhdHRyW2tdWyJuYW1lIl0sCiAgICAgICAgICAgICAgICAgIGxhYmVsOiBhdHRyW2tdWyJ0b29sdGlwIl0sCiAgICAgICAgICAgICAgICAgIGNpZDogYXR0cltrXVsidG9waWMiXSwKICAgICAgICAgICAgICAgICAgY29sb3I6IHsKICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAiIzFkNmU4OCIsCiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAiIzFkNmU4OCIKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgZm9udDogewogICAgICAgICAgICAgICAgICAgIGNvbG9yOiAid2hpdGUiCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgIGZvciAoX3QgaW4gX3RoaXMyLnRvcGljc19kaWN0KSB7CiAgICAgICAgICAgICAgICAgIGlmIChfdCA9PSBhdHRyW2tdWyJ0b3BpYyJdKSB7CiAgICAgICAgICAgICAgICAgICAgX3RoaXMyLmVkZ2VzLnB1c2goewogICAgICAgICAgICAgICAgICAgICAgZnJvbTogImF0dHJfIiArIGF0dHJba11bIm5hbWUiXSwKICAgICAgICAgICAgICAgICAgICAgIHRvOiBfdGhpczIudG9waWNzX2RpY3RbX3RdLAogICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJibGFjayIKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSAvLyBzd2l0Y2ggKGF0dHJba11bInRvcGljIl0pIHsKICAgICAgICAgICAgICAgIC8vICAgY2FzZSAiRGlzdHVyYmFuY2VzIjoKICAgICAgICAgICAgICAgIC8vICAgICB0aGlzLmVkZ2VzLnB1c2goewogICAgICAgICAgICAgICAgLy8gICAgICAgZnJvbTogImF0dHJfIiArIGF0dHJba11bIm5hbWUiXSwKICAgICAgICAgICAgICAgIC8vICAgICAgIHRvOiAicXVhbGlmbmV1cm90ZXN0IiwKICAgICAgICAgICAgICAgIC8vICAgICAgIGNvbG9yOiAiYmx1ZSIsCiAgICAgICAgICAgICAgICAvLyAgICAgfSk7CiAgICAgICAgICAgICAgICAvLyAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAvLyAgIGNhc2UgIm1hc3RlciI6CiAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5lZGdlcy5wdXNoKHsKICAgICAgICAgICAgICAgIC8vICAgICAgIGZyb206ICJhdHRyXyIgKyBhdHRyW2tdWyJuYW1lIl0sCiAgICAgICAgICAgICAgICAvLyAgICAgICB0bzogInNpbmd1bGFyIiwKICAgICAgICAgICAgICAgIC8vICAgICAgIGxhYmVsOiAicGFydCBvZiIsCiAgICAgICAgICAgICAgICAvLyAgICAgICBjb2xvcjogImJsdWUiLAogICAgICAgICAgICAgICAgLy8gICAgIH0pOwogICAgICAgICAgICAgICAgLy8gICAgIGJyZWFrOwogICAgICAgICAgICAgICAgLy8gICBjYXNlICJOUFQiOgogICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuZWRnZXMucHVzaCh7CiAgICAgICAgICAgICAgICAvLyAgICAgICBmcm9tOiAiYXR0cl8iICsgYXR0cltrXVsibmFtZSJdLAogICAgICAgICAgICAgICAgLy8gICAgICAgdG86ICJuZXVyb3Rlc3QiLAogICAgICAgICAgICAgICAgLy8gICAgICAgY29sb3I6ICJibHVlIiwKICAgICAgICAgICAgICAgIC8vICAgICB9KTsKICAgICAgICAgICAgICAgIC8vICAgICBicmVhazsKICAgICAgICAgICAgICAgIC8vICAgY2FzZSAiQmxvb2QiOgogICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuZWRnZXMucHVzaCh7CiAgICAgICAgICAgICAgICAvLyAgICAgICBmcm9tOiAiYXR0cl8iICsgYXR0cltrXVsibmFtZSJdLAogICAgICAgICAgICAgICAgLy8gICAgICAgdG86ICJibG9vZCIsCiAgICAgICAgICAgICAgICAvLyAgICAgICBjb2xvcjogImJsdWUiLAogICAgICAgICAgICAgICAgLy8gICAgIH0pOwogICAgICAgICAgICAgICAgLy8gICAgIGJyZWFrOwogICAgICAgICAgICAgICAgLy8gICBjYXNlICJDU0YiOgogICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuZWRnZXMucHVzaCh7CiAgICAgICAgICAgICAgICAvLyAgICAgICBmcm9tOiAiYXR0cl8iICsgYXR0cltrXVsibmFtZSJdLAogICAgICAgICAgICAgICAgLy8gICAgICAgdG86ICJzcGluZWZsdWlkIiwKICAgICAgICAgICAgICAgIC8vICAgICAgIGNvbG9yOiAiYmx1ZSIsCiAgICAgICAgICAgICAgICAvLyAgICAgfSk7CiAgICAgICAgICAgICAgICAvLyAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAvLyAgIGNhc2UgIkF0YXhpYSI6CiAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5lZGdlcy5wdXNoKHsKICAgICAgICAgICAgICAgIC8vICAgICAgIGZyb206ICJhdHRyXyIgKyBhdHRyW2tdWyJuYW1lIl0sCiAgICAgICAgICAgICAgICAvLyAgICAgICB0bzogImF0YXhpYSIsCiAgICAgICAgICAgICAgICAvLyAgICAgICBjb2xvcjogImJsdWUiLAogICAgICAgICAgICAgICAgLy8gICAgIH0pOwogICAgICAgICAgICAgICAgLy8gICAgIGJyZWFrOwogICAgICAgICAgICAgICAgLy8gICBjYXNlICJTQVJBIHNjb3JlcyI6CiAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5lZGdlcy5wdXNoKHsKICAgICAgICAgICAgICAgIC8vICAgICAgIGZyb206ICJhdHRyXyIgKyBhdHRyW2tdWyJuYW1lIl0sCiAgICAgICAgICAgICAgICAvLyAgICAgICB0bzogInNhcmFfc2NvcmVzIiwKICAgICAgICAgICAgICAgIC8vICAgICAgIGNvbG9yOiAiYmx1ZSIsCiAgICAgICAgICAgICAgICAvLyAgICAgfSk7CiAgICAgICAgICAgICAgICAvLyAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAvLyAgIGNhc2UgIlNBUkEgc3Vic2NvcmVzIjoKICAgICAgICAgICAgICAgIC8vICAgICB0aGlzLmVkZ2VzLnB1c2goewogICAgICAgICAgICAgICAgLy8gICAgICAgZnJvbTogImF0dHJfIiArIGF0dHJba11bIm5hbWUiXSwKICAgICAgICAgICAgICAgIC8vICAgICAgIHRvOiAic2FyYV9zdWJzY29yZXMiLAogICAgICAgICAgICAgICAgLy8gICAgICAgY29sb3I6ICJibHVlIiwKICAgICAgICAgICAgICAgIC8vICAgICB9KTsKICAgICAgICAgICAgICAgIC8vICAgICBicmVhazsKICAgICAgICAgICAgICAgIC8vICAgY2FzZSAiU0FSQSI6CiAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5lZGdlcy5wdXNoKHsKICAgICAgICAgICAgICAgIC8vICAgICAgIGZyb206ICJhdHRyXyIgKyBhdHRyW2tdWyJuYW1lIl0sCiAgICAgICAgICAgICAgICAvLyAgICAgICB0bzogInNhcmEiLAogICAgICAgICAgICAgICAgLy8gICAgICAgY29sb3I6ICJibHVlIiwKICAgICAgICAgICAgICAgIC8vICAgICB9KTsKICAgICAgICAgICAgICAgIC8vICAgICBicmVhazsKICAgICAgICAgICAgICAgIC8vICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgIC8vICAgICBjb25zb2xlLmxvZygiTm8gdG9waWMgZm91bmQuLi4iKTsKICAgICAgICAgICAgICAgIC8vfQoKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHNvdXJjZXMgPSBzb3VyY2VzX2FsbFsiZGF0YSJdWyJzb3VyY2VzIl07IC8vY29uc29sZS5sb2cocmVzcG9uc2UpOwoKICAgICAgICAgICAgICBmb3IgKHMgPSAwOyBzIDwgc291cmNlcy5sZW5ndGg7IHMrKykgewogICAgICAgICAgICAgICAgX3RoaXMyLm5vZGVzLnB1c2goewogICAgICAgICAgICAgICAgICBpZDogInNvdXJjZXNfIiArIHNvdXJjZXNbc10sCiAgICAgICAgICAgICAgICAgIGxhYmVsOiBzb3VyY2VzW3NdLAogICAgICAgICAgICAgICAgICBjaWQ6IHNvdXJjZXNbc10sCiAgICAgICAgICAgICAgICAgIGZpeGVkOiB0cnVlLAogICAgICAgICAgICAgICAgICBjb2xvcjogewogICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICIjYzJhZDRiIiwKICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICIjYzJhZDRiIgogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBoaWdobGlnaHQ6ICJyZWQiLAogICAgICAgICAgICAgICAgICBmb250OiB7CiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJibGFjayIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7IC8vVE9ETyBhZGQgZWRnZXMKCiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfdGhpczIuc291cmNlc19hbGwgPSBBcnJheS5mcm9tKHNvdXJjZXMpOwogICAgICAgICAgICAgIF90aGlzMi50b3BpY3NfYWxsID0gQXJyYXkuZnJvbSh0b3BpY3MpOwogICAgICAgICAgICAgIGF0dHJpYnV0ZV9tYXBwaW5ncyA9IGF0dHJfbWFwcGluZ3NbImRhdGEiXVsibWFwcGluZ3MiXTsKCiAgICAgICAgICAgICAgZm9yIChkID0gMDsgZCA8IGF0dHJpYnV0ZV9tYXBwaW5ncy5sZW5ndGg7IGQrKykgewogICAgICAgICAgICAgICAgaWYgKCFfdGhpczIubm9kZXMuc29tZShmdW5jdGlvbiAobm9kZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gbm9kZS5pZCA9PSAiYXR0cl8iICsgYXR0cmlidXRlX21hcHBpbmdzW2RdWyJuYW1lIl07CiAgICAgICAgICAgICAgICB9KSkgewogICAgICAgICAgICAgICAgICBfdGhpczIubm9kZXMucHVzaCh7CiAgICAgICAgICAgICAgICAgICAgaWQ6ICJhdHRyXyIgKyBhdHRyaWJ1dGVfbWFwcGluZ3NbZF1bIm5hbWUiXSwKICAgICAgICAgICAgICAgICAgICBjaWQ6IGF0dHJpYnV0ZV9tYXBwaW5nc1tkXVsiU291cmNlIl0sCiAgICAgICAgICAgICAgICAgICAgbGFiZWw6IGF0dHJpYnV0ZV9tYXBwaW5nc1tkXVsibmFtZSJdLAogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB7CiAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAiIzAwYmNiZCIsCiAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6ICIjMDBiY2JkIiwKICAgICAgICAgICAgICAgICAgICAgIGhpZ2hsaWdodDogewogICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAicmVkIgogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgZm9udDogewogICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJibGFjayIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGlmICggLy8gY2hlY2sgaWYgZWRnZSBpcyBhbHJlYWR5IHNldCBhbmQgaWYgbm90IHNlbGYtbWFwIGlzIHNldAogICAgICAgICAgICAgICAgIV90aGlzMi5lZGdlcy5zb21lKGZ1bmN0aW9uIChlZGdlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBlZGdlLmZyb20gPT0gImF0dHJfIiArIGF0dHJpYnV0ZV9tYXBwaW5nc1tkXVsibmFtZSJdICYmIGVkZ2UudG8gPT0gImF0dHJfIiArIGF0dHJpYnV0ZV9tYXBwaW5nc1tkXVsiVGFyZ2V0Il07CiAgICAgICAgICAgICAgICB9KSAmJiAiYXR0cl8iICsgYXR0cmlidXRlX21hcHBpbmdzW2RdWyJuYW1lIl0gIT0gImF0dHJfIiArIGF0dHJpYnV0ZV9tYXBwaW5nc1tkXVsiVGFyZ2V0Il0pIHsKICAgICAgICAgICAgICAgICAgX3RoaXMyLmVkZ2VzLnB1c2goewogICAgICAgICAgICAgICAgICAgIGZyb206ICJhdHRyXyIgKyBhdHRyaWJ1dGVfbWFwcGluZ3NbZF1bIm5hbWUiXSwKICAgICAgICAgICAgICAgICAgICB0bzogImF0dHJfIiArIGF0dHJpYnV0ZV9tYXBwaW5nc1tkXVsiVGFyZ2V0Il0sCiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJibHVlIgogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfdGhpczIuZWRnZXMucHVzaCh7CiAgICAgICAgICAgICAgICAgIHRvOiAic291cmNlc18iICsgYXR0cmlidXRlX21hcHBpbmdzW2RdWyJTb3VyY2UiXSwKICAgICAgICAgICAgICAgICAgZnJvbTogImF0dHJfIiArIGF0dHJpYnV0ZV9tYXBwaW5nc1tkXVsibmFtZSJdLAogICAgICAgICAgICAgICAgICBjb2xvcjogImdyZXkiLAogICAgICAgICAgICAgICAgICBkYXNoZXM6IHRydWUKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImZ1bGx0ZXh0X2Zvcm0iKS5vbnN1Ym1pdCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICBhbGVydCgiTm90IGltcGxlbWVudGVkIHlldC4uLiIpOwogICAgICAgICAgICAgIH07IC8vIGFsaWduIGZpeGVkIG5vZGVzIG9uIHVuaXQgY2lyY2xlOgoKCiAgICAgICAgICAgICAgX3RvcGljcyA9IF90aGlzMi5ub2Rlcy5maWx0ZXIoZnVuY3Rpb24gKGVsZW0pIHsKICAgICAgICAgICAgICAgIHJldHVybiBlbGVtLmZpeGVkICYmIGVsZW0uaWQgIT0gInJvb3QiICYmICFlbGVtLmlkLnN0YXJ0c1dpdGgoInNvdXJjZXNfIik7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgX3NvdXJjZXMgPSBfdGhpczIubm9kZXMuZmlsdGVyKGZ1bmN0aW9uIChlbGVtKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gZWxlbS5maXhlZCAmJiBlbGVtLmlkLnN0YXJ0c1dpdGgoInNvdXJjZXNfIik7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coX3NvdXJjZXMpOwogICAgICAgICAgICAgIF96ID0gX3NvdXJjZXMubGVuZ3RoOwoKICAgICAgICAgICAgICBfc291cmNlcy5mb3JFYWNoKGZ1bmN0aW9uIChzLCBsKSB7CiAgICAgICAgICAgICAgICBzLnggPSBNYXRoLnJvdW5kKE1hdGguY29zKDIgKiBNYXRoLlBJICogbCAvIF96KSAqIDUwMCk7CiAgICAgICAgICAgICAgICBzLnkgPSBNYXRoLnJvdW5kKE1hdGguc2luKDIgKiBNYXRoLlBJICogbCAvIF96KSAqIDUwMCk7CiAgICAgICAgICAgICAgfSk7IC8vY29uc29sZS5sb2coX3RvcGljcyk7CgoKICAgICAgICAgICAgICBfayA9IF90b3BpY3MubGVuZ3RoOwoKICAgICAgICAgICAgICBfdG9waWNzLmZvckVhY2goZnVuY3Rpb24gKHQsIGwpIHsKICAgICAgICAgICAgICAgIHQueCA9IE1hdGgucm91bmQoTWF0aC5jb3MoMiAqIE1hdGguUEkgKiBsIC8gX2spICogMzAwKTsKICAgICAgICAgICAgICAgIHQueSA9IE1hdGgucm91bmQoTWF0aC5zaW4oMiAqIE1hdGguUEkgKiBsIC8gX2spICogMzAwKTsKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMzI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlNCk7CiAgICB9KSkoKTsKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBoZWxwVGV4dDogIlRoZSBEYXRhbW9kZWwgRXhwbG9yZXIgZ2l2ZXMgaW5zaWdodCBhYm91dCB0aGUgdmFyaWFibGVzIGNvbnRhaW5lZCBpbiB0aGUgQ0NETSAoQ29tbW9uIENsaW5pY2FsIERhdGFtb2RlbCkgIiArICJZb3UgY2FuIGluc3BlY3Qgc2luZ2xlIG5vZGVzIGJ5IHJpZ2h0IGNsaWNrIG9yIHNlYXJjaCB0aHJvdWdoIHRoZSBncmFwaCB2aWEgdGhlIG5vZGUgc2VhcmNoIG9yIG1vcmUgYWR2YW5jZWQgdGhlIGZ1bGx0ZXh0IHNlYXJjaC4gRWFjaCBlZGdlIHJlcHJlc2VudHMgdGhlIHJhbGF0aW9uc2hpcCBiZXR3ZWVuIHR3byBub2Rlcy4iICsgIiBQaHlzaWNzIGNhbiBiZSBlbmFibGVkIGFuZCBkaXNhYmxlZCBhdCBhbnl0aW1lLiIsCiAgICAgIHVwZGF0ZTogdHJ1ZSwKICAgICAgdG9waWNzX2RpY3Q6IHsKICAgICAgICAiRGVtb2dyYXBoeSI6ICJNYXN0ZXIiLAogICAgICAgICJPcmdhbml6YXRpb25hbCI6ICJNYXN0ZXIiLAogICAgICAgICJEZW1ldGlhX2Jpb21hcmtlciI6ICJNYXN0ZXIiLAogICAgICAgICJEZW1vZ3JhcGhpY3MiOiAiTWFzdGVyIiwKICAgICAgICAiRGlhZ25vc2lzIjogIk1hc3RlciIsCiAgICAgICAgIkZhbWlseSI6ICJNYXN0ZXIiLAogICAgICAgICJCTlQiOiAiTlBUIiwKICAgICAgICAiRkFRIjogIk5QVCIsCiAgICAgICAgIlRNVCI6ICJOUFQiLAogICAgICAgICJDRFIiOiAiTlBUIiwKICAgICAgICAiTU9DQSI6ICJOUFQiLAogICAgICAgICJHRFMiOiAiTlBUIiwKICAgICAgICAiTlBJIjogIk5QVCIsCiAgICAgICAgIk5QSVEiOiAiTlBUIiwKICAgICAgICAiTWVtb3J5IGRlZmljaXQiOiAiRGVmaWNpdHMiLAogICAgICAgICJMYW5ndWFnZSBkZWZpY2l0cyI6ICJEZWZpY2l0cyIsCiAgICAgICAgIkV4ZWN1dGl2ZSBkZWZpY2l0cyI6ICJEZWZpY2l0cyIsCiAgICAgICAgIkF0dGVudGlvbiBkZWZpY2l0cyI6ICJEZWZpY2l0cyIsCiAgICAgICAgIk90aGVyIGRlZmljaXRzIjogIkRlZmljaXRzIiwKICAgICAgICAiQmxvb2QiOiAiTGFiIiwKICAgICAgICAiQ1NGIjogIkxhYiIsCiAgICAgICAgIkF0YXhpYSI6ICJBdGF4aWEiLAogICAgICAgICJTQVJBIHNjb3JlcyI6ICJTQVJBIiwKICAgICAgICAiRGVtZW50aWEiOiAiRGVtZW50aWEiCiAgICAgIH0sCiAgICAgIG5vZGVzOiBbewogICAgICAgIGlkOiAicm9vdCIsCiAgICAgICAgbGFiZWw6ICJUaGUgRGF0YSBNb2RlbCBSb290IiwKICAgICAgICBjb2xvcjogewogICAgICAgICAgYmFja2dyb3VuZDogIiNjNTVlMmQiLAogICAgICAgICAgYm9yZGVyOiAiI2M1NWUyZCIKICAgICAgICB9LAogICAgICAgIGZpeGVkOiB0cnVlLAogICAgICAgIHg6IDAsCiAgICAgICAgeTogMCwKICAgICAgICBmb250OiB7CiAgICAgICAgICBjb2xvcjogIndoaXRlIgogICAgICAgIH0KICAgICAgfSAvLyB7CiAgICAgIC8vICAgaWQ6ICJzaXRlIiwKICAgICAgLy8gICBsYWJlbDogIlNJVEUiLAogICAgICAvLyAgIGNvbG9yOiAiRGFya1Zpb2xldCIsCiAgICAgIC8vICAgZml4ZWQ6IHRydWUsCiAgICAgIC8vICAgZm9udDogeyBjb2xvcjogIndoaXRlIiB9LAogICAgICAvLyB9LAogICAgICAvLyB7CiAgICAgIC8vICAgaWQ6ICJwaWQiLAogICAgICAvLyAgIGxhYmVsOiAiUElEIiwKICAgICAgLy8gICBjb2xvcjogIkRhcmtWaW9sZXQiLAogICAgICAvLyAgIGZpeGVkOiB0cnVlLAogICAgICAvLyAgIGZvbnQ6IHsgY29sb3I6ICJ3aGl0ZSIgfSwKICAgICAgLy8gfSwKICAgICAgLy8gewogICAgICAvLyAgIGlkOiAidHMiLAogICAgICAvLyAgIGxhYmVsOiAiVElNRVNUQU1QIiwKICAgICAgLy8gICBmaXhlZDogdHJ1ZSwKICAgICAgLy8gICBjb2xvcjogIkRhcmtWaW9sZXQiLAogICAgICAvLyAgIGZvbnQ6IHsgY29sb3I6ICJ3aGl0ZSIgfSwKICAgICAgLy8gfSwKICAgICAgLy8gewogICAgICAvLyAgIGlkOiAic2luZ3VsYXIiLAogICAgICAvLyAgIGxhYmVsOiAiU2luZ3VsYXIgUGF0aWVudCBpbmZvcm1hdGlvbiIsCiAgICAgIC8vICAgLy9jaWQ6ICJtYXN0ZXIiLAogICAgICAvLyAgIGNvbG9yOiAiRGFya1Zpb2xldCIsCiAgICAgIC8vICAgZml4ZWQ6IHRydWUsCiAgICAgIC8vICAgZm9udDogeyBjb2xvcjogIndoaXRlIiB9LAogICAgICAvLyB9LAogICAgICAvLyB7CiAgICAgIC8vICAgaWQ6ICJibG9vZCIsCiAgICAgIC8vICAgbGFiZWw6ICJMYWJvcmF0b3J5IG1lYXN1cmVtZW50cyBpbiBibG9vZCIsCiAgICAgIC8vICAgLy9jaWQ6ICJCbG9vZCIsCiAgICAgIC8vICAgZml4ZWQ6IHRydWUsCiAgICAgIC8vICAgY29sb3I6ICJEYXJrVmlvbGV0IiwKICAgICAgLy8gICBmb250OiB7IGNvbG9yOiAid2hpdGUiIH0sCiAgICAgIC8vIH0sCiAgICAgIC8vIHsKICAgICAgLy8gICBpZDogInNwaW5lZmx1aWQiLAogICAgICAvLyAgIGxhYmVsOiAiTGFib3JhdG9yeSBtZWFzdXJlbWVudHMgaW4gY2VyZWJyYWwgc3BpbmUgZmx1aWQiLAogICAgICAvLyAgIC8vY2lkOiAiQ1NGIiwKICAgICAgLy8gICBjb2xvcjogIkRhcmtWaW9sZXQiLAogICAgICAvLyAgIGZpeGVkOiB0cnVlLAogICAgICAvLyAgIGZvbnQ6IHsgY29sb3I6ICJ3aGl0ZSIgfSwKICAgICAgLy8gfSwKICAgICAgLy8gewogICAgICAvLyAgIGlkOiAibmV1cm90ZXN0IiwKICAgICAgLy8gICBsYWJlbDogIk5ldXJvcHN5Y2hvbG9naWNhbCB0ZXN0IHNjb3JlcyIsCiAgICAgIC8vICAgY29sb3I6ICJEYXJrVmlvbGV0IiwKICAgICAgLy8gICAvL2NpZDogIk5QVCIsCiAgICAgIC8vICAgZml4ZWQ6IHRydWUsCiAgICAgIC8vICAgZm9udDogeyBjb2xvcjogIndoaXRlIiB9LAogICAgICAvLyB9LAogICAgICAvLyB7CiAgICAgIC8vICAgaWQ6ICJxdWFsaWZuZXVyb3Rlc3QiLAogICAgICAvLyAgIGxhYmVsOiAiUXVhbGlmaWFibGUgbmV1cm9wc3ljaG9sb2dpY2FsIGRpc3R1cmJhbmNlcyIsCiAgICAgIC8vICAgY29sb3I6ICJEYXJrVmlvbGV0IiwKICAgICAgLy8gICAvL2NpZDogIkRpc3R1cmJhbmNlcyIsCiAgICAgIC8vICAgZml4ZWQ6IHRydWUsCiAgICAgIC8vICAgZm9udDogeyBjb2xvcjogIndoaXRlIiB9LAogICAgICAvLyB9LAogICAgICAvLyB7CiAgICAgIC8vICAgaWQ6ICJhdGF4aWEiLAogICAgICAvLyAgIGxhYmVsOiAiQXRheGlhIiwKICAgICAgLy8gICBjb2xvcjogIkRhcmtWaW9sZXQiLAogICAgICAvLyAgIGZpeGVkOiB0cnVlLAogICAgICAvLyAgIGZvbnQ6IHsgY29sb3I6ICJ3aGl0ZSIgfSwKICAgICAgLy8gfSwKICAgICAgLy8gewogICAgICAvLyAgIGlkOiAic2FyYSIsCiAgICAgIC8vICAgbGFiZWw6ICJTQVJBIiwKICAgICAgLy8gICBjb2xvcjogIkRhcmtWaW9sZXQiLAogICAgICAvLyAgIGZpeGVkOiB0cnVlLAogICAgICAvLyAgIGZvbnQ6IHsgY29sb3I6ICJ3aGl0ZSIgfSwKICAgICAgLy8gfSwKICAgICAgLy8gewogICAgICAvLyAgIGlkOiAic2FyYV9zdWJzY29yZXMiLAogICAgICAvLyAgIGxhYmVsOiAiU0FSQSBTdWJzY29yZXMiLAogICAgICAvLyAgIGNvbG9yOiAiRGFya1Zpb2xldCIsCiAgICAgIC8vICAgZml4ZWQ6IHRydWUsCiAgICAgIC8vICAgZm9udDogeyBjb2xvcjogIndoaXRlIiB9LAogICAgICAvLyB9LAogICAgICAvLyB7CiAgICAgIC8vICAgaWQ6ICJzYXJhX3Njb3JlcyIsCiAgICAgIC8vICAgbGFiZWw6ICJTQVJBIFNjb3JlcyIsCiAgICAgIC8vICAgY29sb3I6ICJEYXJrVmlvbGV0IiwKICAgICAgLy8gICBmaXhlZDogdHJ1ZSwKICAgICAgLy8gICBmb250OiB7IGNvbG9yOiAid2hpdGUiIH0sCiAgICAgIC8vIH0sCiAgICAgIC8vIC8vICx7CiAgICAgIC8vIC8vICAgaWQ6InNjYV9jaGFyYWN0ZXJpemF0aW9uIiwKICAgICAgLy8gLy8gICBsYWJlbDogIlNDQSBDSEFSQUNURVJJWkFUSU9OIiwKICAgICAgLy8gLy8gICBmaXhlZDogdHJ1ZSwKICAgICAgLy8gLy8gICB4OiAtMjEwLAogICAgICAvLyAvLyAgIHk6IC0xMTAsCiAgICAgIC8vIC8vICAgZm9udDogeyBjb2xvcjogIndoaXRlIiB9LAogICAgICAvLyAvLyB9CiAgICAgIF0sCiAgICAgIGVkZ2VzOiBbLy8geyBmcm9tOiAic2l0ZSIsIHRvOiAicm9vdCIsIGNvbG9yOiAiYmx1ZSIgfSwKICAgICAgICAvLyB7IGZyb206ICJzcGluZWZsdWlkIiwgdG86ICJyb290IiwgY29sb3I6ICJibHVlIiB9LAogICAgICAgIC8vIHsgZnJvbTogInBpZCIsIHRvOiAicm9vdCIsIGNvbG9yOiAiYmx1ZSIgfSwKICAgICAgICAvLyB7IGZyb206ICJ0cyIsIHRvOiAicm9vdCIsIGNvbG9yOiAiYmx1ZSIgfSwKICAgICAgICAvLyB7IGZyb206ICJibG9vZCIsIHRvOiAicm9vdCIsIGNvbG9yOiAiYmx1ZSIgfSwKICAgICAgICAvLyB7IGZyb206ICJuZXVyb3Rlc3QiLCB0bzogInJvb3QiLCBjb2xvcjogImJsdWUiIH0sCiAgICAgICAgLy8geyBmcm9tOiAic2luZ3VsYXIiLCB0bzogInJvb3QiLCBjb2xvcjogImJsdWUiIH0sCiAgICAgICAgLy8geyBmcm9tOiAicXVhbGlmbmV1cm90ZXN0IiwgdG86ICJyb290IiwgY29sb3I6ICJibHVlIiB9LAogICAgICBdLAogICAgICBtZW51VmlldzogIiIsCiAgICAgIG9wdGlvbnM6IHsKICAgICAgICBub2RlczogewogICAgICAgICAgYm9yZGVyV2lkdGg6IDQsCiAgICAgICAgICBjb2xvcjogewogICAgICAgICAgICBoaWdobGlnaHQ6IHsKICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAicmVkIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBlZGdlczogewogICAgICAgICAgY29sb3I6ICJsaWdodGdyYXkiLAogICAgICAgICAgYXJyb3dzOiB7CiAgICAgICAgICAgIHRvOiB7CiAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgICBzY2FsZUZhY3RvcjogMSwKICAgICAgICAgICAgICB0eXBlOiAiYXJyb3ciCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIGhlaWdodDogKHdpbmRvdy5pbm5lckhlaWdodCAqIDAuOSkudG9TdHJpbmcoKSwKICAgICAgICB3aWR0aDogKHdpbmRvdy5pbm5lcldpZHRoICogMC45OSkudG9TdHJpbmcoKSwKICAgICAgICBwaHlzaWNzOiB7CiAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgc29sdmVyOiAiYmFybmVzSHV0IgogICAgICAgIH0sCiAgICAgICAgbWFuaXB1bGF0aW9uOiB0cnVlCiAgICAgIH0sCiAgICAgIHN1Yl9ub2RlczogW10sCiAgICAgIHN1Yl9lZGdlczogW10sCiAgICAgIHN1Yl9vcHRpb25zOiB7CiAgICAgICAgbm9kZXM6IHsKICAgICAgICAgIGJvcmRlcldpZHRoOiA0CiAgICAgICAgfSwKICAgICAgICBlZGdlczogewogICAgICAgICAgY29sb3I6ICJibGFjayIsCiAgICAgICAgICBhcnJvd3M6IHsKICAgICAgICAgICAgdG86IHsKICAgICAgICAgICAgICBlbmFibGVkOiB0cnVlLAogICAgICAgICAgICAgIHNjYWxlRmFjdG9yOiAxLAogICAgICAgICAgICAgIHR5cGU6ICJhcnJvdyIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgaGVpZ2h0OiAod2luZG93LmlubmVySGVpZ2h0ICogMC41KS50b1N0cmluZygpLAogICAgICAgIHBoeXNpY3M6IHsKICAgICAgICAgIGVuYWJsZWQ6IHRydWUsCiAgICAgICAgICBzb2x2ZXI6ICJiYXJuZXNIdXQiCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0sCiAgdXBkYXRlZDogZnVuY3Rpb24gdXBkYXRlZCgpIHsKICAgIHZhciB0aGlzX25vZGVzID0gdGhpcy5ub2RlczsKICAgIHZhciBuZXR3b3JrID0gdGhpcy4kcmVmcy5uZXR3b3JrOwoKICAgIGZ1bmN0aW9uIHNlbGVjdFRoaXNOb2RlKG5vZGVJZCkgewogICAgICB2YXIgZmluZE5vZGVzUmV0dXJuID0gbmV0d29yay5maW5kTm9kZShub2RlSWQpOwoKICAgICAgaWYgKG5ldHdvcmsuaXNDbHVzdGVyKGZpbmROb2Rlc1JldHVyblswXSkpIHsKICAgICAgICBuZXR3b3JrLm9wZW5DbHVzdGVyKGZpbmROb2Rlc1JldHVyblswXSk7CiAgICAgICAgcmV0dXJuIHNlbGVjdFRoaXNOb2RlKCk7CiAgICAgIH0KCiAgICAgIG5ldHdvcmsuZm9jdXMobm9kZUlkKTsKICAgICAgbmV0d29yay5zZWxlY3ROb2Rlcyhbbm9kZUlkXSwgW3RydWVdKTsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmICh0aGlzLnVwZGF0ZSkgewogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibG9hZGVyX3RleHQiKS5pbm5lckhUTUwgPSAiQ2x1c3RlcmluZyBOb2Rlcy4uLiI7CiAgICAgIGNvbnNvbGUubG9nKCJVUERBVElORy4uIik7IC8vIE5FVFdPUksgUFJPUEVSVElFUwogICAgICAvL2NvbnNvbGUubG9nKHRoaXMudG9waWNzX2FsbCk7CiAgICAgIC8vIENPUkUgQ0xVU1RFUklORwogICAgICAvLyB2YXIgb3B0aW9uc19jb3JlID0gewogICAgICAvLyAgIGpvaW5Db25kaXRpb246IGZ1bmN0aW9uIChub2RlT3B0aW9ucykgewogICAgICAvLyAgICAgcmV0dXJuIG5vZGVPcHRpb25zLmNpZCA9PT0gImNvcmUiOwogICAgICAvLyAgIH0sCiAgICAgIC8vICAgY2x1c3Rlck5vZGVQcm9wZXJ0aWVzOiB7CiAgICAgIC8vICAgICBpZDogImNpZENsdXN0ZXIiLAogICAgICAvLyAgICAgYm9yZGVyV2lkdGg6IDMsCiAgICAgIC8vICAgICBzaGFwZTogImNpcmNsZSIsCiAgICAgIC8vICAgICBsYWJlbDogIkNvcmUgTW9kZWwiLAogICAgICAvLyAgIH0sCiAgICAgIC8vIH07CiAgICAgIC8vIHRoaXMuJHJlZnMubmV0d29yay5jbHVzdGVyKG9wdGlvbnNfY29yZSk7CiAgICAgIC8vIENMVVNURVJJTkcgdmlhIFRPUElDUwoKICAgICAgdmFyIG9wdGlvbnNfdG9waWNzID0gW107CiAgICAgIHRoaXMudG9waWNzX2FsbC5mb3JFYWNoKGZ1bmN0aW9uICh0b3BpYykgewogICAgICAgIHZhciBvcHRpb25zX3RvcGljID0gewogICAgICAgICAgam9pbkNvbmRpdGlvbjogZnVuY3Rpb24gam9pbkNvbmRpdGlvbihub2RlT3B0aW9ucykgewogICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJIQUxMT0hBTExPIik7CiAgICAgICAgICAgIHJldHVybiBub2RlT3B0aW9ucy5jaWQgPT0gdG9waWM7CiAgICAgICAgICB9LAogICAgICAgICAgY2x1c3Rlck5vZGVQcm9wZXJ0aWVzOiB7CiAgICAgICAgICAgIGlkOiAiY2lkQ2x1c3Rlcl8iICsgdG9waWMsCiAgICAgICAgICAgIGJvcmRlcldpZHRoOiAzLAogICAgICAgICAgICBzaGFwZTogInNxdWFyZSIsCiAgICAgICAgICAgIGNvbG9yOiB7CiAgICAgICAgICAgICAgYmFja2dyb3VuZDogIiMxZDZlODgiLAogICAgICAgICAgICAgIGJvcmRlcjogIiMxZDZlODgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGxhYmVsOiB0b3BpYwogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgb3B0aW9uc190b3BpY3MucHVzaChvcHRpb25zX3RvcGljKTsgLy8gY29uc29sZS5sb2codG9waWMgKyAiIGNsdXN0ZXJpbmcuLi4iKTsKICAgICAgICAvLyB0aGlzLiRyZWZzLm5ldHdvcmsuY2x1c3RlcihvcHRpb25zX3RvcGljKTsKICAgICAgfSk7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9wdGlvbnNfdG9waWNzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdGhpcy4kcmVmcy5uZXR3b3JrLmNsdXN0ZXIob3B0aW9uc190b3BpY3NbaV0pOwogICAgICB9IC8vIENMVVNURVJJTkcgdmlhIFNPVVJDRVMKCgogICAgICB2YXIgb3B0aW9uc19zb3VyY2VzID0gW107CiAgICAgIHRoaXMuc291cmNlc19hbGwuZm9yRWFjaChmdW5jdGlvbiAoc291cmNlKSB7CiAgICAgICAgdmFyIG9wdGlvbnNfc291cmNlID0gewogICAgICAgICAgam9pbkNvbmRpdGlvbjogZnVuY3Rpb24gam9pbkNvbmRpdGlvbihub2RlT3B0aW9ucykgewogICAgICAgICAgICAvL2NvbnNvbGUubG9nKCJIQUxMT0hBTExPIik7CiAgICAgICAgICAgIHJldHVybiBub2RlT3B0aW9ucy5jaWQgPT0gc291cmNlOwogICAgICAgICAgfSwKICAgICAgICAgIGNsdXN0ZXJOb2RlUHJvcGVydGllczogewogICAgICAgICAgICBpZDogImNpZENsdXN0ZXJfIiArIHNvdXJjZSwKICAgICAgICAgICAgYm9yZGVyV2lkdGg6IDMsCiAgICAgICAgICAgIHNoYXBlOiAic3F1YXJlIiwKICAgICAgICAgICAgbGFiZWw6IHNvdXJjZSwKICAgICAgICAgICAgY29sb3I6IHsKICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAiI2MyYWQ0YiIsCiAgICAgICAgICAgICAgYm9yZGVyOiAiI2MyYWQ0YiIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgb3B0aW9uc19zb3VyY2VzLnB1c2gob3B0aW9uc19zb3VyY2UpOyAvLyBjb25zb2xlLmxvZyh0b3BpYyArICIgY2x1c3RlcmluZy4uLiIpOwogICAgICAgIC8vIHRoaXMuJHJlZnMubmV0d29yay5jbHVzdGVyKG9wdGlvbnNfdG9waWMpOwogICAgICB9KTsKCiAgICAgIGZvciAodmFyIHAgPSAwOyBwIDwgb3B0aW9uc19zb3VyY2VzLmxlbmd0aDsgcCsrKSB7CiAgICAgICAgdGhpcy4kcmVmcy5uZXR3b3JrLmNsdXN0ZXIob3B0aW9uc19zb3VyY2VzW3BdKTsKICAgICAgfQoKICAgICAgdmFyIGF1dG9Db21wbGV0ZURhdGEgPSB7fTsKICAgICAgdGhpcy5ub2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgYXV0b0NvbXBsZXRlRGF0YVtub2RlLmxhYmVsXSA9IG51bGw7CiAgICAgIH0pOwogICAgICB2YXIgYXV0b0NvbXBsZXRlT3B0aW9ucyA9IHsKICAgICAgICBkYXRhOiBhdXRvQ29tcGxldGVEYXRhLAogICAgICAgIG9uQXV0b2NvbXBsZXRlOiBmdW5jdGlvbiBvbkF1dG9jb21wbGV0ZShwYXJhbXMpIHsKICAgICAgICAgIHZhciBub2RlID0gdGhpc19ub2Rlcy5maW5kKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgICAgIHJldHVybiBub2RlLmxhYmVsID09IHBhcmFtczsKICAgICAgICAgIH0pOwogICAgICAgICAgc2VsZWN0VGhpc05vZGUobm9kZS5pZCk7CiAgICAgICAgfQogICAgICB9OwogICAgICB2YXIgZWxlbXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIuYXV0b2NvbXBsZXRlIik7CiAgICAgIE0uQXV0b2NvbXBsZXRlLmluaXQoZWxlbXMsIGF1dG9Db21wbGV0ZU9wdGlvbnMpOwogICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibG9hZGVyIikuc3R5bGUgPSAiZGlzcGxheTogbm9uZSI7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJuZXR3b3JrX2RpdiIpLnN0eWxlID0gInZpc2liaWxpdHk6IHZpc2libGUiOyAvL3RoaXMuZWRnZXMgPSBbLi4ubmV3IFNldCh0aGlzLmVkZ2VzKV07CiAgICAgIC8vY29uc29sZS5sb2codGhpcy4kcmVmcy5uZXR3b3JrKTsKICAgICAgLy8gQ0xVU1RFUklORwoKICAgICAgdGhpcy51cGRhdGUgPSBmYWxzZTsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnNvbGUubG9nKCJwcmV2ZW50ZWQgdXBkYXRpbmcuLi4iKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["DataModelGraph.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <br />\n    <br />\n    <div id=\"loader\">\n      <div class=\"preloader-wrapper big active\">\n        <div class=\"spinner-layer spinner-blue-only\">\n          <div class=\"circle-clipper left\">\n            <div class=\"circle\"></div>\n          </div>\n          <div class=\"gap-patch\">\n            <div class=\"circle\"></div>\n          </div>\n          <div class=\"circle-clipper right\">\n            <div class=\"circle\"></div>\n          </div>\n        </div>\n      </div>\n      <div id=\"loader_text\">Initializing Network...</div>\n    </div>\n    <div id=\"network_div\" style=\"visibility: hidden\">\n      <!-- Modal Structure -->\n      <div id=\"modal1\" class=\"modal\">\n        <div class=\"modal-content\" id=\"modalContent\">\n          <h4 id=\"headerModal\"></h4>\n          <p id=\"textModal\"></p>\n        </div>\n        <div class=\"modal-footer\">\n          <a\n            href=\"#!\"\n            class=\"modal-close waves-effect waves-green btn-flat blue-grey lighten-1\"\n            >Close</a\n          >\n        </div>\n      </div>\n      <div id=\"modal2\" class=\"modal\">\n        <div class=\"modal-content\" id=\"modalContent2\">\n          <h4 id=\"headerModal2\"></h4>\n          <p id=\"textModal2\">\n            <network\n              ref=\"sub_network\"\n              :nodes=\"sub_nodes\"\n              :edges=\"sub_edges\"\n              :options=\"sub_options\"\n              :events=\"['doubleClick', 'oncontext', 'click']\"\n              @double-click=\"onNodeClick\"\n              @oncontext=\"onContextClickSub\"\n              @click=\"generalClick\"\n            ></network>\n          </p>\n        </div>\n        <div class=\"modal-footer\">\n          <a\n            href=\"#!\"\n            class=\"modal-close waves-effect waves-green btn-flat blue-grey lighten-1\"\n            >Close</a\n          >\n        </div>\n      </div>\n      <div id=\"modal_fulltext\" class=\"modal\">\n        <div class=\"modal-content\">\n          <h4>Fulltext Search</h4>\n          <p>\n            Search through all descriptions, tooltips and definitions of the\n            datmodel.\n          </p>\n          <div class=\"row\">\n            <form id=\"fulltext_form\">\n              <div class=\"input-field col s10\">\n                <input type=\"text\" required name=\"text\" id=\"fulltext_input\" />\n              </div>\n              <div class=\"col s2\">\n                <button class=\"waves-effect btn blue-grey lighten-1\">Go</button>\n              </div>\n            </form>\n          </div>\n          <div class=\"row\" id=\"fulltext_result\"></div>\n        </div>\n      </div>\n      <div>\n        <div class=\"row\" style=\"margin-bottom: 3px;\">\n          <div class=\"col s4\"></div>\n          <div class=\"col s4\">\n        <h2 style=\"margin-top: 0\" class=\"center-align\">Model Explorer <i class=\"small material-icons tooltipped\" data-position=\"bottom\" :data-tooltip=\"helpText\">help_outline</i></h2>\n        </div>\n        <div class=\"col s4 right\">\n          <button class=\"waves-effect waves-light btn blue-grey lighten-1\" id=\"hideNavBtn\" @click=\"hideNav()\">Hide Navigation</button>\n          <button class=\"waves-effect waves-light btn blue-grey lighten-1 hide\" id=\"showNavBtn\" @click=\"showNav()\">Show Navigation</button>\n        </div>\n        </div>\n       \n\n        <div class=\"row valign-wrapper\" id=\"top_nav_div\">\n          \n          <div class=\"col s2\">\n            <button\n              @click=\"disablePhysics\"\n              class=\"waves-effect waves-light btn blue-grey lighten-1 left\"\n            >\n              Disable Physics</button\n            ><br /><br />\n            <button\n              @click=\"enablePhysics\"\n              class=\"waves-effect waves-light btn blue-grey lighten-1 left\"\n            >\n              Enable Physics</button\n            ><br />\n            <br />\n            <button\n              @click=\"clusterAll\"\n              class=\"waves-effect waves-light btn blue-grey lighten-1 left\"\n            >\n              Close all Clusters</button\n            ><br />\n          \n          </div>\n\n          \n          <div class=\"col s4\">\n            <div class=\"row\">\n              <div class=\"input-field col s12\">\n                <i class=\"material-icons prefix\">textsms</i>\n                <input\n                  type=\"text\"\n                  id=\"autocomplete-input\"\n                  class=\"autocomplete\"\n                />\n                <label for=\"autocomplete-input\">Search for Nodes...</label>\n              </div>\n              <div class=\"col s12\">or</div>\n              <br />\n              <div class=\"col s12\">\n                <div\n                  @click=\"fulltextSearch\"\n                  class=\"btn blue-grey lighten-1\"\n                  id=\"fulltext_btn\"\n                >\n                  Fulltext Search\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n          <div class=\"col s6\">\n             LEGEND\n            <table class=\"striped\">\n              <thead>\n                <tr>\n                <th>Clusters and Nodes</th>\n                <th>Edges</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n\n                  <td><a\n              style=\"\n                background-color: #1d6e88;\n                color: white;\n                padding-left: 18px;\n                padding-right: 18px;\n                margin: 4px;\n                \n              \"\n              ></a\n            >\n            = data root groups; internal variables with available mappings\n                  </td>\n                  <td>\n\n                    <a  style=\"\n                background-color: black;\n                color: black;\n                padding-left: 18px;\n                padding-right: 18px;\n                margin: 4px;\n              \"></a> = part_of <br />\n        \n\n                  </td>\n                </tr>\n                <tr>\n\n                  <td><a\n              style=\"\n                background-color: #00bcbd;\n                color: black;\n                padding-left: 18px;\n                padding-right: 18px;\n                margin: 4px;\n              \"\n              ></a\n            >\n            = attributes by sources; external variables</td>\n            <td>\n\n                  <a\n              style=\"\n                background-color: blue;\n                color: white;\n                padding-right: 18px;\n                padding-left: 18px;\n                margin: 4px;\n              \"\n              ></a\n            >\n            = maps_to\n\n            </td>\n\n                </tr>\n                <tr>\n                  <td>\n                     <a\n              style=\"\n                background-color: #c2ad4b;\n                color: black;\n                padding-left: 18px;\n                padding-right: 18px;\n                margin: 4px;\n              \"\n              ></a\n            >\n            = sources\n\n                  </td>\n                  <td>\n                       <a\n              style=\"\n                background-color: gray;\n                color: black;\n                padding: 4px;\n                margin: 4px;\n              \"\n              >dashed</a\n            >\n            = variable_in\n                  </td>\n                </tr>\n                <tr><td>\n                  <a\n              style=\"\n                background-color: #c55e2d;\n                color: black;\n                padding-left: 18px;\n                padding-right: 18px;\n                margin: 4px;\n              \"\n              ></a\n            >\n            = root nodes\n                  </td></tr>\n            \n\n              </tbody>\n           \n          <br />\n         \n            \n            </table>\n          </div>\n        </div>\n      </div>\n      <network class=\"mynetwork\"\n        ref=\"network\"\n        :nodes=\"nodes\"\n        :edges=\"edges\"\n        :options=\"options\"\n        :events=\"['doubleClick', 'oncontext', 'click']\"\n        @double-click=\"onNodeClick\"\n        @oncontext=\"onContextClick\"\n        @click=\"generalClick\"\n      ></network>\n\n      <div class=\"menu\" id=\"rightClickMenu\">\n        <ul class=\"menu-options\" id=\"rightMenuList\">\n          <component v-if=\"menuView\" :is=\"menuView\"></component>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ax from \"axios\";\nconst axios = ax;\nimport M from \"materialize-css\";\n\nexport default {\n  name: \"graph\",\n  methods: {\n    hideNav: function(){\n      document.getElementById(\"top_nav_div\").style.display = \"none\"; \n      document.getElementById(\"hideNavBtn\").classList.add(\"hide\");\n      document.getElementById(\"showNavBtn\").classList.remove(\"hide\");\n\n    },\n    showNav: function(){\n      document.getElementById(\"top_nav_div\").style.display = \"flex\";\n      document.getElementById(\"showNavBtn\").classList.add(\"hide\");\n      document.getElementById(\"hideNavBtn\").classList.remove(\"hide\");\n    },\n\n    userKeyboard: function (e) {\n      if (e.keyCode == 70 && e.ctrlKey) {\n        alert(\"ctrl F\");\n      }\n    },\n    clusterAll: function () {\n      // CLUSTERING via TOPICS\n\n      var options_topics = [];\n      this.topics_all.forEach(function (topic) {\n        var options_topic = {\n          joinCondition: function (nodeOptions) {\n            //console.log(\"HALLOHALLO\");\n            return nodeOptions.cid == topic;\n          },\n          clusterNodeProperties: {\n            id: \"cidCluster_\" + topic,\n            borderWidth: 3,\n            shape: \"square\",\n\n            label: topic,\n          },\n        };\n        options_topics.push(options_topic);\n        // console.log(topic + \" clustering...\");\n        // this.$refs.network.cluster(options_topic);\n      });\n      for (var i = 0; i < options_topics.length; i++) {\n        this.$refs.network.cluster(options_topics[i]);\n      }\n\n      // CLUSTERING via SOURCES\n\n      var options_sources = [];\n      this.sources_all.forEach(function (source) {\n        var options_source = {\n          joinCondition: function (nodeOptions) {\n            //console.log(\"HALLOHALLO\");\n            return nodeOptions.cid == source;\n          },\n          clusterNodeProperties: {\n            id: \"cidCluster_\" + source,\n            borderWidth: 3,\n            shape: \"square\",\n            label: source,\n            color: {\n              background: \"#c2ad4b\",\n              border: \"#c2ad4b\"\n            },\n          },\n        };\n        options_sources.push(options_source);\n        // console.log(topic + \" clustering...\");\n        // this.$refs.network.cluster(options_topic);\n      });\n      for (var p = 0; p < options_sources.length; p++) {\n        this.$refs.network.cluster(options_sources[p]);\n      }\n    },\n    generalClick: function () {\n      const menu = document.getElementById(\"rightClickMenu\");\n      if (menu.style.display == \"block\") {\n        menu.style.display = \"none\";\n      }\n    },\n    onContextClickSub: function (params) {\n      document.getElementById(\"rightMenuList\").innerHTML = \"\";\n      if (params.nodes.length == 1) {\n        const e = params.event;\n        e.preventDefault();\n\n        const menu = document.getElementById(\"rightClickMenu\");\n        var pagex = e.pageX;\n        var pagey = e.pageY;\n        menu.style.left = `${pagex}px`;\n        menu.style.top = `${pagey}px`;\n        menu.style.display = \"block\";\n        document.getElementById(\"rightMenuList\").innerHTML = \"\";\n\n        if (this.$refs.network.isCluster(params.nodes[0])) {\n          console.error(\"cluster occured in sub graph...\");\n        } else {\n          [\"Inspect\", \"Show more in OLS\"].forEach((s) => {\n            var listelemNode = document.createElement(\"li\");\n            listelemNode.classList.add(\"menu-option\");\n            var btn = document.createElement(\"button\");\n            btn.classList.add(\"btn\");\n            btn.classList.add(\"waves-effect\");\n            btn.classList.add(\"blue-grey\", \"lighten-1\");\n            btn.style.height = \"auto\";\n            btn.style.width = \"auto\";\n            btn.style.margin = \"2px\";\n            var textNode = document.createTextNode(s);\n            if (s == \"Inspect\") {\n              btn.onclick = function () {\n                var getParams = {};\n                if (params.nodes[0].startsWith(\"attr_\")) {\n                  getParams[\"type\"] = \"attribute\";\n                  getParams[\"node\"] = params.nodes[0].replace(\"attr_\", \"\");\n                } else if (params.nodes[0].startsWith(\"sources_\")) {\n                  getParams[\"type\"] = \"source\";\n                  getParams[\"node\"] = params.nodes[0].replace(\"sources_\", \"\");\n                } else {\n                  getParams[\"type\"] = \"core\";\n                  getParams[\"node\"] = params.nodes[0];\n                }\n                const attributeInformation = axios.get(\n                  process.env.VUE_APP_CLINICALURL + \"/get/attribute\",\n                  { params: getParams }\n                );\n\n                attributeInformation.then((data) => {\n                  var elem = document.getElementById(\"modal1\");\n                  var instance = M.Modal.getInstance(elem);\n                  var modalHeader = document.getElementById(\"headerModal\");\n\n                  modalHeader.textContent =\n                    \"Variable Name: \" + getParams[\"node\"];\n                  var modalText = document.getElementById(\"textModal\");\n                  modalText.innerHTML = \"\";\n\n                  if (data[\"data\"][\"information\"] == \"none\") {\n                    modalText.appendChild(\n                      document.createTextNode(\n                        \"No information available in Clinical Backend...\"\n                      )\n                    );\n                    menu.style.display = \"none\";\n                    instance.open();\n                  } else {\n                    var data_as_json = JSON.parse(\n                      data[\"data\"][\"information\"]\n                    )[0][\"fields\"];\n\n                    var keys = Object.keys(data_as_json);\n\n                    var tbl = document.createElement(\"table\");\n                    tbl.style.width = \"100%\";\n                    tbl.setAttribute(\"border\", \"1\");\n                    var tbdy = document.createElement(\"tbody\");\n                    keys.forEach(function (value) {\n                      var row = document.createElement(\"tr\");\n                      var cell1 = document.createElement(\"td\");\n                      var cell2 = document.createElement(\"td\");\n                      cell1.appendChild(document.createTextNode(value));\n\n                      cell2.appendChild(\n                        document.createTextNode(data_as_json[value])\n                      );\n                      row.appendChild(cell1);\n                      row.appendChild(cell2);\n                      tbdy.appendChild(row);\n                    });\n\n                    tbl.appendChild(tbdy);\n\n                    modalText.appendChild(tbl);\n                    menu.style.display = \"none\";\n                    instance.open();\n                  }\n                });\n                //console.log(attributeInformation);\n              };\n            }\n            if (s == \"Show more in OLS\") {\n              btn.onclick = function () {\n                window.open(\n                  process.env.VUE_APP_OLSURL +\n                    \"search?q=\" +\n                    params.nodes[0].replace(\"attr_\", \"\"),\n                  \"popUpWindow\",\n                  \"height=800,width=1200,left=10,top=10,,scrollbars=yes,menubar=no\"\n                );\n                return false;\n              };\n            }\n\n            btn.appendChild(textNode);\n            listelemNode.appendChild(btn);\n            menu.firstChild.appendChild(listelemNode);\n          });\n        }\n      } else {\n        if (params.edges.length == 1) {\n          var btn = document.createElement(\"button\");\n          var edge = params.edges[0];\n          const e = params.event;\n          e.preventDefault();\n\n          const menu = document.getElementById(\"rightClickMenu\");\n          pagex = e.pageX;\n          pagey = e.pageY;\n          menu.style.left = `${pagex}px`;\n          menu.style.top = `${pagey}px`;\n          menu.style.display = \"block\";\n          document.getElementById(\"rightMenuList\").innerHTML = \"\";\n          const netw = this.$refs.network;\n          var listelemNode = document.createElement(\"li\");\n          listelemNode.classList.add(\"menu-option\");\n          btn = document.createElement(\"button\");\n          btn.classList.add(\"btn\");\n          btn.classList.add(\"waves-effect\");\n          btn.classList.add(\"blue-grey\", \"lighten-1\");\n          btn.style.height = \"auto\";\n          btn.style.width = \"auto\";\n          btn.style.margin = \"2px\";\n          var s = \"Inspect\";\n          var textNode = document.createTextNode(s + \" Edge\");\n          if (s == \"Inspect\") {\n            btn.onclick = async function () {\n              var getParams = {};\n              var connectedNodes = netw.getConnectedNodes(edge);\n              if (\n                connectedNodes[0].toLowerCase().includes(\"cluster\") ||\n                connectedNodes[1].toLowerCase().includes(\"cluster\")\n              ) {\n                M.toast({\n                  html: \"Please Open the cluster before inspecting edges!\",\n                });\n                return;\n              }\n              if (\n                connectedNodes[0].toLowerCase().includes(\"source\") ||\n                connectedNodes[1].toLowerCase().includes(\"source\")\n              ) {\n                M.toast({\n                  html:\n                    \"Mappings of type 'part_of' do not contain more information!\",\n                });\n                return;\n              }\n              getParams[\"attr_1\"] = connectedNodes[0].replace(\"attr_\", \"\");\n              getParams[\"attr_2\"] = connectedNodes[1].replace(\"attr_\", \"\");\n\n              //console.log(connectedNodes);\n\n              const attributeMappingInformation = await axios.get(\n                process.env.VUE_APP_CLINICALURL + \"/get/attribute-mapping\",\n                { params: getParams }\n              );\n              //console.log(attributeMappingInformation);\n              var data = attributeMappingInformation[\"data\"];\n              //console.log(data);\n\n              var elem = document.getElementById(\"modal1\");\n              var instance = M.Modal.getInstance(elem);\n              var modalHeader = document.getElementById(\"headerModal\");\n\n              modalHeader.textContent =\n                \"Variable Mapping: \" +\n                getParams[\"attr_1\"] +\n                \", \" +\n                getParams[\"attr_2\"];\n              var modalText = document.getElementById(\"textModal\");\n              modalText.innerHTML = \"\";\n              if (data[\"information\"] == \"none\") {\n                modalText.appendChild(\n                  document.createTextNode(\n                    \"No information available in Clinical Backend...\"\n                  )\n                );\n                menu.style.display = \"none\";\n                instance.open();\n              } else {\n                var data_as_json = JSON.parse(data[\"information\"])[0][\"fields\"];\n\n                var keys = Object.keys(data_as_json);\n\n                var tbl = document.createElement(\"table\");\n                tbl.style.width = \"100%\";\n                tbl.setAttribute(\"border\", \"1\");\n                var tbdy = document.createElement(\"tbody\");\n                keys.forEach(function (value) {\n                  var row = document.createElement(\"tr\");\n                  var cell1 = document.createElement(\"td\");\n                  var cell2 = document.createElement(\"td\");\n                  cell1.appendChild(document.createTextNode(value));\n\n                  cell2.appendChild(\n                    document.createTextNode(data_as_json[value])\n                  );\n                  row.appendChild(cell1);\n                  row.appendChild(cell2);\n                  tbdy.appendChild(row);\n                });\n\n                tbl.appendChild(tbdy);\n\n                modalText.appendChild(tbl);\n                menu.style.display = \"none\";\n                instance.open();\n              }\n            };\n            btn.appendChild(textNode);\n            listelemNode.appendChild(btn);\n            menu.firstChild.appendChild(listelemNode);\n          }\n        } else {\n          return;\n        }\n      }\n    },\n    onContextClick: function (params) {\n      document.getElementById(\"rightMenuList\").innerHTML = \"\";\n      var pagey;\n      var pagex;\n\n      if (params.nodes.length == 1) {\n        const e = params.event;\n        e.preventDefault();\n\n        const menu = document.getElementById(\"rightClickMenu\");\n        pagex = e.pageX;\n        pagey = e.pageY;\n        menu.style.left = `${pagex}px`;\n        menu.style.top = `${pagey}px`;\n        menu.style.display = \"block\";\n        document.getElementById(\"rightMenuList\").innerHTML = \"\";\n        const netw = this.$refs.network;\n\n        if (this.$refs.network.isCluster(params.nodes[0])) {\n          var listelem = document.createElement(\"li\");\n          listelem.classList.add(\"menu-option\");\n          var text = document.createTextNode(\"Open this Cluster\");\n          var btn = document.createElement(\"button\");\n          btn.classList.add(\"btn\");\n          btn.classList.add(\"waves-effect\");\n          btn.classList.add(\"blue-grey\", \"lighten-1\");\n          btn.style.height = \"auto\";\n          btn.style.width = \"auto\";\n          btn.style.margin = \"2px\";\n          btn.onclick = function () {\n            netw.openCluster(params.nodes[0]);\n            document.getElementById(\"rightClickMenu\").style.display = \"none\";\n          };\n          btn.appendChild(text);\n          listelem.appendChild(btn);\n\n          menu.firstChild.appendChild(listelem);\n        } else {\n          [\"Inspect\", \"Open sub graph\", \"Show more in OLS\"].forEach((s) => {\n            var listelemNode = document.createElement(\"li\");\n            listelemNode.classList.add(\"menu-option\");\n            var btn = document.createElement(\"button\");\n            btn.classList.add(\"btn\");\n            btn.classList.add(\"waves-effect\");\n            btn.classList.add(\"blue-grey\", \"lighten-1\");\n            btn.style.height = \"auto\";\n            btn.style.width = \"auto\";\n            btn.style.margin = \"2px\";\n            var textNode = document.createTextNode(s);\n            if (s == \"Inspect\") {\n              btn.onclick = function () {\n                var getParams = {};\n                if (params.nodes[0].startsWith(\"attr_\")) {\n                  getParams[\"type\"] = \"attribute\";\n                  getParams[\"node\"] = params.nodes[0].replace(\"attr_\", \"\");\n                } else if (params.nodes[0].startsWith(\"sources_\")) {\n                  getParams[\"type\"] = \"source\";\n                  getParams[\"node\"] = params.nodes[0].replace(\"sources_\", \"\");\n                } else {\n                  getParams[\"type\"] = \"core\";\n                  getParams[\"node\"] = params.nodes[0];\n                }\n                const attributeInformation = axios.get(\n                  process.env.VUE_APP_CLINICALURL + \"/get/attribute\",\n                  { params: getParams }\n                );\n\n                attributeInformation.then((data) => {\n                  var elem = document.getElementById(\"modal1\");\n                  var instance = M.Modal.getInstance(elem);\n                  var modalHeader = document.getElementById(\"headerModal\");\n\n                  modalHeader.textContent =\n                    \"Variable Name: \" + getParams[\"node\"];\n                  var modalText = document.getElementById(\"textModal\");\n                  modalText.innerHTML = \"\";\n\n                  if (data[\"data\"][\"information\"] == \"none\") {\n                    modalText.appendChild(\n                      document.createTextNode(\n                        \"No information available in Clinical Backend...\"\n                      )\n                    );\n                    menu.style.display = \"none\";\n                    instance.open();\n                  } else {\n                    var data_as_json = JSON.parse(\n                      data[\"data\"][\"information\"]\n                    )[0][\"fields\"];\n\n                    var keys = Object.keys(data_as_json);\n\n                    var tbl = document.createElement(\"table\");\n                    tbl.style.width = \"100%\";\n                    tbl.setAttribute(\"border\", \"1\");\n                    var tbdy = document.createElement(\"tbody\");\n                    keys.forEach(function (value) {\n                      var row = document.createElement(\"tr\");\n                      var cell1 = document.createElement(\"td\");\n                      var cell2 = document.createElement(\"td\");\n                      cell1.appendChild(document.createTextNode(value));\n\n                      cell2.appendChild(\n                        document.createTextNode(data_as_json[value])\n                      );\n                      row.appendChild(cell1);\n                      row.appendChild(cell2);\n                      tbdy.appendChild(row);\n                    });\n\n                    tbl.appendChild(tbdy);\n\n                    modalText.appendChild(tbl);\n                    menu.style.display = \"none\";\n                    instance.open();\n                  }\n                });\n                //console.log(attributeInformation);\n              };\n            }\n            if (s == \"Show more in OLS\") {\n              btn.onclick = function () {\n                window.open(\n                  process.env.VUE_APP_OLSURL +\n                    \"search?q=\" +\n                    params.nodes[0].replace(\"attr_\", \"\"),\n                  \"popUpWindow\",\n                  \"height=800,width=1200,left=10,top=10,,scrollbars=yes,menubar=no\"\n                );\n                return false;\n              };\n            }\n            if (s == \"Open sub graph\") {\n              //const subnetw = this.$refs.sub_network;\n              this.sub_nodes = [];\n              this.sub_edges = [];\n              var sub_n = this.sub_nodes;\n              var sub_e = this.sub_edges;\n              btn.onclick = function () {\n                var node = params.nodes[0];\n                var connectedNodes = netw.getConnectedNodes(node);\n                connectedNodes.push(node);\n                var connectedEdges = netw.getConnectedEdges(node);\n\n                var instance2 = M.Modal.getInstance(\n                  document.getElementById(\"modal2\")\n                );\n                instance2.open();\n\n                connectedNodes.forEach((node) => {\n                  var n = netw.getNode(node);\n                  if (n != null) {\n                    sub_n.push(n);\n                  }\n                });\n                connectedEdges.forEach((edge) => {\n                  var ed = netw.getEdge(edge);\n                  if (ed != null) {\n                    sub_e.push(ed);\n                  }\n                });\n\n                menu.style.display = \"none\";\n              };\n            }\n\n            btn.appendChild(textNode);\n            listelemNode.appendChild(btn);\n            menu.firstChild.appendChild(listelemNode);\n          });\n        }\n      } else {\n        if (params.edges.length == 1) {\n          var edge = params.edges[0];\n          const e = params.event;\n          e.preventDefault();\n\n          const menu = document.getElementById(\"rightClickMenu\");\n          pagex = e.pageX;\n          pagey = e.pageY;\n          menu.style.left = `${pagex}px`;\n          menu.style.top = `${pagey}px`;\n          menu.style.display = \"block\";\n          document.getElementById(\"rightMenuList\").innerHTML = \"\";\n          const netw = this.$refs.network;\n          var listelemNode = document.createElement(\"li\");\n          listelemNode.classList.add(\"menu-option\");\n          btn = document.createElement(\"button\");\n          btn.classList.add(\"btn\");\n          btn.classList.add(\"waves-effect\");\n          btn.classList.add(\"blue-grey\", \"lighten-1\");\n          btn.style.height = \"auto\";\n          btn.style.width = \"auto\";\n          btn.style.margin = \"2px\";\n          var s = \"Inspect\";\n          var textNode = document.createTextNode(s + \" Edge\");\n          if (s == \"Inspect\") {\n            btn.onclick = async function () {\n              var getParams = {};\n              var connectedNodes = netw.getConnectedNodes(edge);\n              if (\n                connectedNodes[0].toLowerCase().includes(\"cluster\") ||\n                connectedNodes[1].toLowerCase().includes(\"cluster\")\n              ) {\n                M.toast({\n                  html: \"Please Open the cluster before inspecting edges!\",\n                });\n                return;\n              }\n              if (\n                connectedNodes[0].toLowerCase().includes(\"source\") ||\n                connectedNodes[1].toLowerCase().includes(\"source\")\n              ) {\n                M.toast({\n                  html:\n                    \"Mappings of type 'part_of' do not contain more information!\",\n                });\n                return;\n              }\n              getParams[\"attr_1\"] = connectedNodes[0].replace(\"attr_\", \"\");\n              getParams[\"attr_2\"] = connectedNodes[1].replace(\"attr_\", \"\");\n\n              //console.log(connectedNodes);\n\n              const attributeMappingInformation = await axios.get(\n                process.env.VUE_APP_CLINICALURL + \"/get/attribute-mapping\",\n                { params: getParams }\n              );\n              //console.log(attributeMappingInformation);\n              var data = attributeMappingInformation[\"data\"];\n              //console.log(data);\n\n              var elem = document.getElementById(\"modal1\");\n              var instance = M.Modal.getInstance(elem);\n              var modalHeader = document.getElementById(\"headerModal\");\n\n              modalHeader.textContent =\n                \"Variable Mapping: \" +\n                getParams[\"attr_1\"] +\n                \", \" +\n                getParams[\"attr_2\"];\n              var modalText = document.getElementById(\"textModal\");\n              modalText.innerHTML = \"\";\n              if (data[\"information\"] == \"none\") {\n                modalText.appendChild(\n                  document.createTextNode(\n                    \"No information available in Clinical Backend...\"\n                  )\n                );\n                menu.style.display = \"none\";\n                instance.open();\n              } else {\n                var data_as_json = JSON.parse(data[\"information\"])[0][\"fields\"];\n\n                var keys = Object.keys(data_as_json);\n\n                var tbl = document.createElement(\"table\");\n                tbl.style.width = \"100%\";\n                tbl.setAttribute(\"border\", \"1\");\n                var tbdy = document.createElement(\"tbody\");\n                keys.forEach(function (value) {\n                  var row = document.createElement(\"tr\");\n                  var cell1 = document.createElement(\"td\");\n                  var cell2 = document.createElement(\"td\");\n                  cell1.appendChild(document.createTextNode(value));\n\n                  cell2.appendChild(\n                    document.createTextNode(data_as_json[value])\n                  );\n                  row.appendChild(cell1);\n                  row.appendChild(cell2);\n                  tbdy.appendChild(row);\n                });\n\n                tbl.appendChild(tbdy);\n\n                modalText.appendChild(tbl);\n                menu.style.display = \"none\";\n                instance.open();\n              }\n            };\n            btn.appendChild(textNode);\n            listelemNode.appendChild(btn);\n            menu.firstChild.appendChild(listelemNode);\n          }\n        } else {\n          return;\n        }\n      }\n    },\n    clusterOpenAll: function () {\n      for (var node in this.nodes) {\n        if (this.$refs.network.isCluster(node) == true) {\n          this.$refs.network.openCluster(node);\n        }\n      }\n    },\n    onNodeClick: function (params) {\n      console.log(\"Clicked double\");\n      //console.log(\"HALLOHALLO\");\n      if (params.nodes.length == 1) {\n        if (this.$refs.network.isCluster(params.nodes[0]) == true) {\n          this.$refs.network.openCluster(params.nodes[0]);\n        }\n      }\n    },\n    disablePhysics: function () {\n      var opts = this.$refs.network[\"options\"];\n      opts[\"physics\"][\"enabled\"] = false;\n      this.$refs.network.setOptions(opts);\n    },\n    enablePhysics: function () {\n      var opts = this.$refs.network[\"options\"];\n      opts[\"physics\"][\"enabled\"] = true;\n      this.$refs.network.setOptions(opts);\n    },\n    btnClick: function () {\n      var options_topic = {\n        joinCondition: function (nodeOptions) {\n          //console.log(\"HALLOHALLO\");\n          return nodeOptions.cid == this.topics_all[1];\n        },\n        clusterNodeProperties: {\n          id: \"cidCluster_\" + this.topics_all[1],\n          borderWidth: 3,\n          shape: \"circle\",\n          label: this.topics_all[1],\n        },\n      };\n      console.log(\"clustering...\");\n      this.$refs.network.cluster(options_topic);\n    },\n    fulltextSearch: function () {\n      document.getElementById(\"fulltext_result\").innerHTML = \"\";\n      var network = this.$refs.network;\n      var nodes = this.nodes;\n      function selectThisNode(nodeId) {\n        var findNodesReturn = network.findNode(nodeId);\n        if (network.isCluster(findNodesReturn[0])) {\n          network.openCluster(findNodesReturn[0]);\n          return selectThisNode(nodeId);\n        }\n        //console.log(nodeId);\n        network.focus(nodeId);\n        network.selectNodes([nodeId], [true]);\n        // console.log(nodes);\n        var sel = nodes.find((obj) => {\n          return obj[\"id\"] == nodeId;\n        });\n       \n        sel[\"color\"] = {\n          background: \"red\",\n        };\n        \n        network.editNode();\n        return;\n      }\n\n      var fulltext_modal = M.Modal.getInstance(\n        document.getElementById(\"modal_fulltext\")\n      );\n      fulltext_modal.open();\n      document.getElementById(\"fulltext_input\").value = \"\";\n      document.getElementById(\"fulltext_input\").focus();\n      document.getElementById(\"fulltext_form\").onsubmit = async function (e) {\n        e.preventDefault();\n\n        const fulltextResult = await axios({\n          url:\n            process.env.VUE_APP_CLINICALURL +\n            \"/get/fulltext\" +\n            \"?text=\" +\n            document.getElementById(\"fulltext_input\").value,\n        });\n        if (\n          fulltextResult.status == 200 &&\n          fulltextResult[\"data\"][\"result\"].length > 0\n        ) {\n          document.getElementById(\"fulltext_result\").innerHTML = \"\";\n          document\n            .getElementById(\"fulltext_result\")\n            .appendChild(document.createTextNode(\"Search Results: \"));\n          fulltextResult[\"data\"][\"result\"].forEach((result) => {\n            var btn = document.createElement(\"button\");\n            btn.onclick = function () {\n              fulltext_modal.close();\n              //console.log(result);\n              selectThisNode(\"attr_\" + result);\n            };\n            btn.classList.add(\"btn\", \"waves-effect\", \"blue-grey\", \"lighten-1\");\n            btn.innerHTML = result;\n            var row = document.createElement(\"div\");\n            row.classList.add(\"row\");\n            row.appendChild(btn);\n            document.getElementById(\"fulltext_result\").appendChild(row);\n          });\n        } else {\n          document.getElementById(\"fulltext_result\").innerHTML = \"\";\n          document\n            .getElementById(\"fulltext_result\")\n            .appendChild(document.createTextNode(\"No Attribute/s Found...\"));\n        }\n      };\n    },\n  },\n\n  mounted(){\n     document.getElementsByClassName(\"footer-fixed\")[0].style.position = \"relative\";\n  },\n  async created() {\n   \n\n    var elems_tooltip = document.querySelectorAll('.tooltipped');\n    M.Tooltip.init(elems_tooltip);\n    //document.getElementById('loader_text').innerHTML=\"Fetching Attributes...\";\n    const attributes = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attributes/all\"\n    );\n    //document.getElementById('loader_text').innerHTML=\"Fetching Sources...\";\n    const sources_all = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/sources/all\"\n    );\n    //document.getElementById('loader_text').innerHTML=\"Fetching Mappings...\";\n    const attr_mappings = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attribute-mappings/all\"\n    );\n\n    var elemsModal = document.querySelectorAll(\".modal\");\n    M.Modal.init(elemsModal);\n\n\n    for(const t in this.topics_dict){\n      if (!this.nodes.filter(e => e.id == this.topics_dict[t]).length > 0) {\n  \n        console.log(\"ADDED:\" + t);\n      \n      this.nodes.push(\n      {\n          id: this.topics_dict[t],\n          label: this.topics_dict[t],\n          color: {\n             background: \"#c55e2d\",\n             border: \"#c55e2d\"\n          },\n          fixed: true,\n\n          font: { color: \"white\" },\n        }\n    );\n    this.edges.push({ from: this.topics_dict[t], to: \"root\", color: \"black\" });\n      }\n  }\n\n\n    var topics = new Set();\n    //console.log(response);\n    var attr = attributes[\"data\"][\"attributes\"];\n    //document.getElementById('loader_text').innerHTML=\"Building graph...\";\n    for (var k = 0; k < attr.length; k++) {\n      //console.log(attr[k][\"topic\"]);\n      topics.add(attr[k][\"topic\"]);\n\n      this.nodes.push({\n        id: \"attr_\" + attr[k][\"name\"],\n        label: attr[k][\"tooltip\"],\n        cid: attr[k][\"topic\"],\n        color: {\n          background: \"#1d6e88\",\n          border: \"#1d6e88\"\n        },\n        font: {\n          color: \"white\"\n        }\n      });\n      for(const t in this.topics_dict){\n        if(t == attr[k][\"topic\"]){\n          this.edges.push({\n            from: \"attr_\" + attr[k][\"name\"],\n            to: this.topics_dict[t],\n\n            color: \"black\",\n          });\n        }\n      }\n      // switch (attr[k][\"topic\"]) {\n      //   case \"Disturbances\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"qualifneurotest\",\n\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"master\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"singular\",\n      //       label: \"part of\",\n\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"NPT\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"neurotest\",\n\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"Blood\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"blood\",\n\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"CSF\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"spinefluid\",\n\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"Ataxia\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"ataxia\",\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"SARA scores\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"sara_scores\",\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"SARA subscores\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"sara_subscores\",\n      //       color: \"blue\",\n      //     });\n      //     break;\n      //   case \"SARA\":\n      //     this.edges.push({\n      //       from: \"attr_\" + attr[k][\"name\"],\n      //       to: \"sara\",\n      //       color: \"blue\",\n      //     });\n      //     break;\n\n      //   default:\n      //     console.log(\"No topic found...\");\n      //}\n    }\n\n    var sources = sources_all[\"data\"][\"sources\"];\n    //console.log(response);\n    for (var s = 0; s < sources.length; s++) {\n      this.nodes.push({\n        id: \"sources_\" + sources[s],\n        label: sources[s],\n        cid: sources[s],\n        fixed: true,\n        color: {\n          background: \"#c2ad4b\",\n          border: \"#c2ad4b\"\n        },\n        highlight: \"red\",\n        font: { color: \"black\" },\n      });\n      //TODO add edges\n    }\n    this.sources_all = Array.from(sources);\n    this.topics_all = Array.from(topics);\n\n    var attribute_mappings = attr_mappings[\"data\"][\"mappings\"];\n    for (var d = 0; d < attribute_mappings.length; d++) {\n      if (\n        !this.nodes.some(\n          (node) => node.id == \"attr_\" + attribute_mappings[d][\"name\"]\n        )\n      ) {\n        this.nodes.push({\n          id: \"attr_\" + attribute_mappings[d][\"name\"],\n          cid: attribute_mappings[d][\"Source\"],\n          label: attribute_mappings[d][\"name\"],\n          color: {\n            background: \"#00bcbd\",\n            border: \"#00bcbd\",\n            highlight: {\n              background: \"red\",\n            },\n          },\n\n          font: { color: \"black\" },\n        });\n      }\n      if (\n        // check if edge is already set and if not self-map is set\n        !this.edges.some(\n          (edge) =>\n            edge.from == \"attr_\" + attribute_mappings[d][\"name\"] &&\n            edge.to == \"attr_\" + attribute_mappings[d][\"Target\"]\n        ) &&\n        \"attr_\" + attribute_mappings[d][\"name\"] !=\n          \"attr_\" + attribute_mappings[d][\"Target\"]\n      ) {\n        this.edges.push({\n          from: \"attr_\" + attribute_mappings[d][\"name\"],\n          to: \"attr_\" + attribute_mappings[d][\"Target\"],\n\n          color: \"blue\",\n        });\n      }\n      this.edges.push({\n        to: \"sources_\" + attribute_mappings[d][\"Source\"],\n        from: \"attr_\" + attribute_mappings[d][\"name\"],\n        color: \"grey\",\n        dashes: true\n      });\n    }\n    document.getElementById(\"fulltext_form\").onsubmit = function (e) {\n      e.preventDefault();\n      alert(\"Not implemented yet...\");\n    };\n    // align fixed nodes on unit circle:\n    var _topics = this.nodes.filter((elem) => {\n      return elem.fixed && elem.id != \"root\" && !elem.id.startsWith(\"sources_\");\n    });\n    var _sources = this.nodes.filter((elem) => {\n      return elem.fixed && elem.id.startsWith(\"sources_\");\n    });\n    console.log(_sources);\n\n\n\n\n    var _z = _sources.length;\n    _sources.forEach((s, l) => {\n      s.x = Math.round(Math.cos((2 * Math.PI * l) / _z) * 500);\n      s.y = Math.round(Math.sin((2 * Math.PI * l) / _z) * 500);\n    });\n    //console.log(_topics);\n    var _k = _topics.length;\n    _topics.forEach((t, l) => {\n      t.x = Math.round(Math.cos((2 * Math.PI * l) / _k) * 300);\n      t.y = Math.round(Math.sin((2 * Math.PI * l) / _k) * 300);\n    });\n  },\n  data() {\n    return {\n      helpText: \"The Datamodel Explorer gives insight about the variables contained in the CCDM (Common Clinical Datamodel) \"+\n      \"You can inspect single nodes by right click or search through the graph via the node search or more advanced the fulltext search. Each edge represents the ralationship between two nodes.\"\n      + \" Physics can be enabled and disabled at anytime.\",\n      update: true,\n      topics_dict: {\"Demography\": \"Master\", \n               \"Organizational\": \"Master\", \n               \"Demetia_biomarker\": \"Master\", \n               \"Demographics\": \"Master\",\n               \"Diagnosis\": \"Master\", \n               \"Family\": \"Master\", \n               \"BNT\": \"NPT\", \n               \"FAQ\": \"NPT\", \n               \"TMT\": \"NPT\", \n               \"CDR\": \"NPT\", \n               \"MOCA\": \"NPT\", \n               \"GDS\": \"NPT\", \n               \"NPI\": \"NPT\", \n               \"NPIQ\": \"NPT\", \n               \"Memory deficit\": \"Deficits\", \n               \"Language deficits\": \"Deficits\", \n               \"Executive deficits\": \"Deficits\", \n               \"Attention deficits\": \"Deficits\", \n               \"Other deficits\": \"Deficits\", \n               \"Blood\": \"Lab\", \n               \"CSF\": \"Lab\", \n               \"Ataxia\": \"Ataxia\",\n               \"SARA scores\": \"SARA\",\n               \"Dementia\": \"Dementia\"   \n                                      },\n      nodes: [\n        {\n          id: \"root\",\n          label: \"The Data Model Root\",\n          color: {\n            background: \"#c55e2d\",\n            border: \"#c55e2d\"\n          },\n          fixed: true,\n          x: 0,\n          y: 0,\n          font: { color: \"white\" },\n        },\n        // {\n        //   id: \"site\",\n        //   label: \"SITE\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"pid\",\n        //   label: \"PID\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"ts\",\n        //   label: \"TIMESTAMP\",\n        //   fixed: true,\n\n        //   color: \"DarkViolet\",\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"singular\",\n        //   label: \"Singular Patient information\",\n        //   //cid: \"master\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"blood\",\n        //   label: \"Laboratory measurements in blood\",\n        //   //cid: \"Blood\",\n        //   fixed: true,\n\n        //   color: \"DarkViolet\",\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"spinefluid\",\n        //   label: \"Laboratory measurements in cerebral spine fluid\",\n        //   //cid: \"CSF\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"neurotest\",\n        //   label: \"Neuropsychological test scores\",\n        //   color: \"DarkViolet\",\n        //   //cid: \"NPT\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"qualifneurotest\",\n        //   label: \"Qualifiable neuropsychological disturbances\",\n        //   color: \"DarkViolet\",\n        //   //cid: \"Disturbances\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"ataxia\",\n        //   label: \"Ataxia\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"sara\",\n        //   label: \"SARA\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"sara_subscores\",\n        //   label: \"SARA Subscores\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // {\n        //   id: \"sara_scores\",\n        //   label: \"SARA Scores\",\n        //   color: \"DarkViolet\",\n        //   fixed: true,\n\n        //   font: { color: \"white\" },\n        // },\n        // // ,{\n        // //   id:\"sca_characterization\",\n        // //   label: \"SCA CHARACTERIZATION\",\n        // //   fixed: true,\n        // //   x: -210,\n        // //   y: -110,\n        // //   font: { color: \"white\" },\n        // // }\n      ],\n      edges: [\n        // { from: \"site\", to: \"root\", color: \"blue\" },\n        // { from: \"spinefluid\", to: \"root\", color: \"blue\" },\n        // { from: \"pid\", to: \"root\", color: \"blue\" },\n        // { from: \"ts\", to: \"root\", color: \"blue\" },\n        // { from: \"blood\", to: \"root\", color: \"blue\" },\n        // { from: \"neurotest\", to: \"root\", color: \"blue\" },\n        // { from: \"singular\", to: \"root\", color: \"blue\" },\n        // { from: \"qualifneurotest\", to: \"root\", color: \"blue\" },\n      ],\n      menuView: \"\",\n      options: {\n        nodes: {\n          borderWidth: 4,\n          color: {\n            highlight: {\n              background: \"red\",\n            },\n          },\n        },\n        edges: {\n          color: \"lightgray\",\n\n          arrows: {\n            to: { enabled: true, scaleFactor: 1, type: \"arrow\" },\n          },\n        },\n        height: (window.innerHeight * 0.9).toString(),\n        width: (window.innerWidth * 0.99).toString(),\n\n        physics: {\n          enabled: true,\n          solver: \"barnesHut\",\n        },\n        manipulation: true,\n      },\n      sub_nodes: [],\n      sub_edges: [],\n      sub_options: {\n        nodes: {\n          borderWidth: 4,\n        },\n        edges: {\n          color: \"black\",\n\n          arrows: {\n            to: { enabled: true, scaleFactor: 1, type: \"arrow\" },\n          },\n        },\n        height: (window.innerHeight * 0.5).toString(),\n        physics: {\n          enabled: true,\n          solver: \"barnesHut\",\n        },\n      },\n    };\n  },\n  updated() {\n    const this_nodes = this.nodes;\n    const network = this.$refs.network;\n    function selectThisNode(nodeId) {\n      var findNodesReturn = network.findNode(nodeId);\n      if (network.isCluster(findNodesReturn[0])) {\n        network.openCluster(findNodesReturn[0]);\n        return selectThisNode();\n      }\n      network.focus(nodeId);\n      network.selectNodes([nodeId], [true]);\n      return;\n    }\n    if (this.update) {\n      document.getElementById(\"loader_text\").innerHTML = \"Clustering Nodes...\";\n      console.log(\"UPDATING..\");\n\n      // NETWORK PROPERTIES\n      //console.log(this.topics_all);\n\n      // CORE CLUSTERING\n      // var options_core = {\n      //   joinCondition: function (nodeOptions) {\n      //     return nodeOptions.cid === \"core\";\n      //   },\n      //   clusterNodeProperties: {\n      //     id: \"cidCluster\",\n      //     borderWidth: 3,\n      //     shape: \"circle\",\n      //     label: \"Core Model\",\n      //   },\n      // };\n\n      // this.$refs.network.cluster(options_core);\n\n      // CLUSTERING via TOPICS\n\n      var options_topics = [];\n      this.topics_all.forEach(function (topic) {\n        var options_topic = {\n          joinCondition: function (nodeOptions) {\n            //console.log(\"HALLOHALLO\");\n            return nodeOptions.cid == topic;\n          },\n          clusterNodeProperties: {\n            id: \"cidCluster_\" + topic,\n            borderWidth: 3,\n            shape: \"square\",\n            color: {\n              background: \"#1d6e88\",\n              border: \"#1d6e88\"\n            },\n            label: topic,\n          },\n        };\n        options_topics.push(options_topic);\n        // console.log(topic + \" clustering...\");\n        // this.$refs.network.cluster(options_topic);\n      });\n      for (var i = 0; i < options_topics.length; i++) {\n        this.$refs.network.cluster(options_topics[i]);\n      }\n\n      // CLUSTERING via SOURCES\n\n      var options_sources = [];\n      this.sources_all.forEach(function (source) {\n        var options_source = {\n          joinCondition: function (nodeOptions) {\n            //console.log(\"HALLOHALLO\");\n            return nodeOptions.cid == source;\n          },\n          clusterNodeProperties: {\n            id: \"cidCluster_\" + source,\n            borderWidth: 3,\n            shape: \"square\",\n            label: source,\n            color: {\n              background: \"#c2ad4b\",\n              border: \"#c2ad4b\"\n            },\n          },\n        };\n        options_sources.push(options_source);\n        // console.log(topic + \" clustering...\");\n        // this.$refs.network.cluster(options_topic);\n      });\n      for (var p = 0; p < options_sources.length; p++) {\n        this.$refs.network.cluster(options_sources[p]);\n      }\n\n      let autoCompleteData = {};\n      this.nodes.forEach((node) => {\n        autoCompleteData[node.label] = null;\n      });\n\n      var autoCompleteOptions = {\n        data: autoCompleteData,\n        onAutocomplete: function (params) {\n          var node = this_nodes.find((node) => {\n            return node.label == params;\n          });\n\n          selectThisNode(node.id);\n        },\n      };\n\n      var elems = document.querySelectorAll(\".autocomplete\");\n      M.Autocomplete.init(elems, autoCompleteOptions);\n\n      document.getElementById(\"loader\").style = \"display: none\";\n\n      document.getElementById(\"network_div\").style = \"visibility: visible\";\n\n      //this.edges = [...new Set(this.edges)];\n\n      //console.log(this.$refs.network);\n      // CLUSTERING\n      this.update = false;\n    } else {\n      console.log(\"prevented updating...\");\n    }\n  },\n};\n</script>\n<style scoped>\n.btn.waves-effect {\n  height: auto !important;\n\n  min-height: 20px;\n  line-height: 20px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.waves-effect.btn {\n  height: auto !important;\n\n  min-height: 20px;\n  line-height: 20px;\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n\n.btn {\n  height: auto !important;\n}\n\n.menu {\n  background-color: white;\n  z-index: 999999;\n  width: 120px;\n  box-shadow: 0 4px 5px 3px rgba(0, 0, 0, 0.2);\n  position: absolute;\n  display: none;\n}\n.menu .menu-options {\n  list-style: none;\n  padding: 10px 0;\n}\n.menu .menu-options .menu-option {\n  font-weight: 500;\n  font-size: 14px;\n  padding: 10px 40px 10px 20px;\n  cursor: pointer;\n}\n.menu .menu-options .menu-option:hover {\n  background: rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n}\nli .menu-option:hover {\n  cursor: pointer;\n}\n\n.mynetwork{\n  border: 2px solid black;\n  margin-left:5px; \n  margin-right: 5px;\n  margin-bottom: 10px\n\n}\n\n</style>"],"sourceRoot":"src/components"}]}