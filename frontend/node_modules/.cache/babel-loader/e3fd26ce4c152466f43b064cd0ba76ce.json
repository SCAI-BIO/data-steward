{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/thread-loader/dist/cjs.js!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/babel-loader/lib/index.js!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/src/components/Metrics.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/src/components/Metrics.vue","mtime":1635322962954},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635508076994},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/thread-loader/dist/cjs.js","mtime":1635508076954},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/babel-loader/lib/index.js","mtime":1635508077568},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1635508076994},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/github/data-steward/frontend/node_modules/vue-loader/lib/index.js","mtime":1635508077737}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9waGlsaXBwd2VnbmVyL0Rlc2t0b3AvRnJhdW5ob2Zlci9TRU0tR3JvdXAvZ2l0L2dpdGh1Yi9kYXRhLXN0ZXdhcmQvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IFBsb3RseSB9IGZyb20gInZ1ZS1wbG90bHkiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgUGxvdGx5OiBQbG90bHkKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhOiBbewogICAgICAgIHg6IFtdLAogICAgICAgIHk6IFtdLAogICAgICAgIHR5cGU6ICJiYXIiLAogICAgICAgIHRleHQ6ICIiLAogICAgICAgIHRleHRwb3NpdGlvbjogJ2F1dG8nLAogICAgICAgIGhvdmVyaW5mbzogJ25vbmUnCiAgICAgIH1dLAogICAgICBsYXlvdXQ6IHsKICAgICAgICB0aXRsZTogIkRhdGEgbW9kZWwgU3RhdGlzdGljcyIsCiAgICAgICAgeWF4aXM6IHsKICAgICAgICAgIHRpdGxlOiAiVmFyaWFibGVzIG1hcHBlZCIKICAgICAgICB9LAogICAgICAgIHhheGlzOiB7CiAgICAgICAgICB0aXRsZTogIlNvdXJjZXMiCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlLCBkYXRhOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldChwcm9jZXNzLmVudi5WVUVfQVBQX0NMSU5JQ0FMVVJMICsgIi9nZXQvYXR0ci1ieS1zb3VyY2UiKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgZGF0YSA9IHJlc3BvbnNlLmRhdGFbImF0dHJfYnlfc3JjIl07CiAgICAgICAgICAgICAgT2JqZWN0LmtleXMoZGF0YSkuZm9yRWFjaChmdW5jdGlvbiAoc3JjKSB7CiAgICAgICAgICAgICAgICBfdGhpcy5kYXRhWzBdLngucHVzaChzcmMpOwoKICAgICAgICAgICAgICAgIF90aGlzLmRhdGFbMF0ueS5wdXNoKGRhdGFbc3JjXSk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgX3RoaXMuZGF0YVswXS50ZXh0ID0gX3RoaXMuZGF0YVswXS55Lm1hcChTdHJpbmcpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"sources":["Metrics.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAkBA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,MAAA,QAAA,YAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,MAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,CAAA;AACA,QAAA,CAAA,EAAA,EADA;AAEA,QAAA,CAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA,KAHA;AAIA,QAAA,IAAA,EAAA,EAJA;AAKA,QAAA,YAAA,EAAA,MALA;AAMA,QAAA,SAAA,EAAA;AANA,OAAA,CADA;AASA,MAAA,MAAA,EAAA;AAAA,QAAA,KAAA,EAAA,uBAAA;AACA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA,SADA;AAIA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA;AAJA;AATA,KAAA;AAkBA,GAvBA;AAwBA,EAAA,OAxBA,qBAwBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,GAAA,CACA,OAAA,CAAA,GAAA,CAAA,mBAAA,GAAA,qBADA,CADA;;AAAA;AACA,cAAA,QADA;AAIA,cAAA,IAJA,GAIA,QAAA,CAAA,IAAA,CAAA,aAAA,CAJA;AAKA,cAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,gBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AACA,gBAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;AACA,eAHA;AAIA,cAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,IAAA,GAAA,KAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,MAAA,CAAA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAlCA,CAAA","sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <h5 class=\"center-align\">Model Statistics</h5>\n    </div>\n    <div class=\"row\">\n      <div>\n        <Plotly\n          :data=\"data\"\n          :layout=\"layout\"\n          :display-mode-bar=\"false\"\n        ></Plotly>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { Plotly } from \"vue-plotly\";\nexport default {\n  components: {\n    Plotly,\n  },\n  data() {\n    return {\n      data: [{\n        x: [],\n        y: [],\n        type: \"bar\",\n        text:\"\",\n         textposition: 'auto',\n        hoverinfo: 'none',\n      }],\n      layout: { title: \"Data model Statistics\",\n      yaxis:{\n        title: \"Variables mapped\"\n      },\n      xaxis:{\n        title: \"Sources\"\n        }\n   },\n    };\n  },\n  async created() {\n    const response = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attr-by-source\"\n    );\n    var data = response.data[\"attr_by_src\"];\n    Object.keys(data).forEach((src) => {\n      this.data[0].x.push(src);\n      this.data[0].y.push(data[src]);\n    });\n    this.data[0].text =  this.data[0].y.map(String);\n  },\n};\n</script>\n\n<style>\n</style>\n"],"sourceRoot":"src/components"}]}