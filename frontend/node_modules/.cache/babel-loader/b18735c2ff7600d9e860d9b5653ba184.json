{"remainingRequest":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/babel-loader/lib/index.js!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/DataUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/src/components/DataUpload.vue","mtime":1633082295296},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/philippwegner/Desktop/Fraunhofer/SEM-Group/git/data-steward-tool/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DataUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h1>Data Upload</h1>\n    <div class=\"container center-align\">\n      <div class=\"row\">\n        \n        <div class=\"input-field col s6\">\n        <p>Please select a source for your data!</p>\n      <select class=\"browser-default\" id=\"sourceSelect\">\n        <option v-for=\"src in sourceList\" :key=\"src\" :value=\"src\">{{src}}</option>\n      </select>\n      </div>\n      </div>\n      <vue-dropzone\n        ref=\"myVueDropzone\"\n        id=\"dropzone\"\n        :options=\"dropzoneOptions\"\n        @vdropzone-success=\"vsuccess\"\n        @vdropzone-error=\"verror\"\n        @vdropzone-file-added=\"addedFile\"\n        @vdropzone-sending=\"sendingEvent\"\n      ></vue-dropzone>\n      <vue-ellipse-progress\n        id=\"loader\"\n        class=\"hide\"\n        :progress=\"progress\"\n        v-bind=\"options\"\n      >\n        <!--\n        <span slot=\"legend-value\" style=\"color : black\" id=\"totalCount\"></span>-->\n        <p slot=\"legend-caption\" id=\"feedback\"></p>\n      </vue-ellipse-progress>\n\n      <p id=\"totalCount\"></p>\n      \n      <p id=\"post_process_feedback\"></p>\n      <p id=\"totalOLS\"></p>\n      <div\n        id=\"not_found\"\n        v-if=\"notFound.length > 0\"\n        class=\"container\"\n        style=\"margin-bottom: 80px\"\n      >\n        <h5>Variables not automatically mapped (total: {{ this.notFound.length }}):</h5>\n       \n            <ul v-for=\"attr in notFound\" :key=\"attr\">\n              <li>{{ attr }}</li>\n\n             \n            </ul>\n\n        <a href=\"/data-steward/mapper\">Go to mapping assistant</a>\n     \n        <!--\n        <div class=\"row mt-3\">\n          <div class=\"col s1\">\n        <button class=\"btn blue-grey lighten-1\" @click=\"refreshAttributes()\">refresh targets</button>\n          </div>\n          <div class=\"col s11\"></div>\n        </div>-->\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport vue2Dropzone from \"vue2-dropzone\";\nimport \"vue2-dropzone/dist/vue2Dropzone.min.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport M from \"materialize-css\";\nimport $ from \"jquery\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    vueDropzone: vue2Dropzone,\n  },\n  data: function () {\n    return {\n      dropzoneOptions: {\n        url: process.env.VUE_APP_CLINICALURL + \"/post/basic-upload\",\n        thumbnailWidth: 150,\n        addRemoveLinks: true,\n        maxFiles: 1,\n      },\n      notFound: [],\n      allAttributes: {},\n      allSources: {},\n      sourceList: [],\n      id: uuidv4(),\n      updateUrl: process.env.VUE_APP_CLINICALURL + \"/get/cache\",\n      interval: 2000,\n      progress: 0,\n      options: {\n        color: \"#579fdc\",\n        \"empty-color\": \"#324c7e\",\n        size: 300,\n        thickness: 5,\n        \"empty-thickness\": 3,\n        \"line-mode\": \"out 5\",\n        animation: \"rs 700 1000\",\n        \"font-size\": \"1.5rem\",\n        \"font-color\": \"white\",\n      },\n    };\n  },\n  async created() {\n    const attributes = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attributes/all\"\n    );\n    const sources_all = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/sources/all\"\n    );\n    var sourceObj = {};\n    var sourceList = [];\n    sources_all[\"data\"][\"sources\"].forEach((elem) => {\n      sourceObj[elem] = null;\n      \n    });\n    sources_all['data'][\"abbreviations\"].forEach(elem =>{\n      sourceList.push(elem);\n    });\n    this.allSources = sourceObj;\n    this.sourceList = sourceList;\n    var attrObj = {};\n    attributes[\"data\"][\"attributes\"].forEach((attr) => {\n      attrObj[attr.name] = null;\n    });\n    this.allAttributes = attrObj;\n  },\n\n  mounted(){\n    var elems = document.querySelectorAll('select');\n    M.FormSelect.init(elems);\n  },\n  updated() {\n    var elems = document.querySelectorAll(\".autocomplete\");\n\n    M.Autocomplete.init(elems, { data: this.allAttributes });\n    var elems_source = document.querySelectorAll(\".autocomplete_source\");\n\n    M.Autocomplete.init(elems_source, {\n      data: this.allSources,\n      onAutocomplete: function (val) {\n        var emptyFields = [];\n        document.querySelectorAll(\".autocomplete_source\").forEach((elem) => {\n          if (elem.value == null || elem.value == \"\") {\n            emptyFields.push(elem);\n          }\n        });\n\n        emptyFields.forEach((elem) => {\n          elem.value = val;\n        });\n        M.updateTextFields();\n      },\n    });\n  },\n\n  methods: {\n\n\n    refreshAttributes: async function(){\n          const attributes = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/attributes/all\"\n    );\n    const sources_all = await axios.get(\n      process.env.VUE_APP_CLINICALURL + \"/get/sources/all\"\n    );\n    var sourceObj = {};\n    sources_all[\"data\"][\"sources\"].forEach((elem) => {\n      sourceObj[elem] = null;\n    });\n    this.allSources = sourceObj;\n\n    var attrObj = {};\n    attributes[\"data\"][\"attributes\"].forEach((attr) => {\n      attrObj[attr.name] = null;\n    });\n    this.allAttributes = attrObj;\n    M.toast({html: \"Refreshed variable autocomplete...\"});\n\n    },\n    addMapping: async function (attr) {\n      var target = document.getElementById(attr + \"_mapping_field\").value;\n      if (target == null || target == \"\") {\n        M.toast({ html: \"Please check your input!\" });\n        return;\n      }\n\n      var source = document.getElementById(attr + \"_source_field\").value;\n\n      const mappingResponse = await axios({\n        method: \"post\",\n        url: process.env.VUE_APP_CLINICALURL + \"/post/basic-mapping\",\n        data: {\n          source: source,\n          source_attribute: attr,\n          target: target,\n        },\n        withCredentials: true,\n      });\n      if (mappingResponse.data[\"message\"] == \"ok\") {\n        this.notFound = this.notFound.filter((item) => item != attr);\n        M.toast({ html: \"You successfully mapped: \" + attr });\n      } else {\n        document.getElementById(attr + \"_feedback\").innerText =\n          mappingResponse.data[\"message\"];\n      }\n      return;\n    },\n    addedFile: function () {\n      document.getElementById(\"feedback\").innerText =\n        \"Your data is getting processed\";\n    },\n    setProgress: function (prog) {\n      this.progress = prog;\n      return;\n    },\n\n    check_status: function () {\n      var self = this;\n      $.ajax({\n        type: \"GET\",\n        url: self.updateUrl,\n        data: { _id: self.id },\n        success: function (e) {\n          console.log(e);\n          if (e.message != null && e[\"message\"][\"status\"] == \"done\") {\n            console.log(\"Done\");\n          }\n        },\n        complete: function (e) {\n          if(e.responseJSON['message'] == null){\n            setTimeout(self.check_status, self.interval);\n          }\n          var notFoundList = e.responseJSON[\"message\"][\"not_found\"];\n\n          if (e.responseJSON[\"message\"][\"status\"] == \"done\") {\n            self.progress = 100;\n            //$(\"#loader\").addClass(\"hide\");\n            $(\"#totalCount\").hide();\n\n            self.notFound = notFoundList;\n            document.getElementById(\"feedback\").innerText =\n              e.responseJSON[\"message\"][\"message\"];\n\n            document.getElementById(\"post_process_feedback\").innerText =\n              e.responseJSON[\"message\"][\"message\"];\n            //document.getElementById('totalOLS').innerText = \"Imported from OLS: \"  + e.responseJSON['message']['ols_count'];\n            $(\"#loader\").hide();\n            return;\n\n            /**\n             *\n             * Add not found feed back\n             */\n          } else {\n            self.notFound = notFoundList;\n            document.getElementById(\"totalCount\").innerText =\n              \"Processing \" +\n              e.responseJSON[\"message\"][\"total\"] +\n              \" lines of data...\";\n            self.progress = e.responseJSON[\"message\"][\"done\"];\n            setTimeout(self.check_status, self.interval);\n          }\n        },\n      });\n    },\n    vsuccess: function (file, response) {\n      var text = \"Successfully uploaded file \" + file.name;\n      M.toast({ html: text });\n\n      document.getElementById(\"feedback\").innerText = response[\"message\"];\n      document.getElementById(\"dropzone\").classList.add(\"hide\");\n      document.getElementById(\"loader\").classList.remove(\"hide\");\n\n      //var self = this;\n\n      this.check_status();\n    },\n    verror: function (file) {\n      var text = \"Error while uploading \" + file.name;\n      M.toast({ html: text });\n      document.getElementById(\"loader\").classList.add(\"hide\");\n      document.getElementById(\"feedback\").innerText =\n        \"Something went wrong... Please try again later\";\n    },\n\n    sendingEvent(file, xhr, formData) {\n      formData.append(\"_id\", this.id);\n      formData.append(\"_source\", document.getElementById('sourceSelect').value);\n    },\n  },\n};\n</script>\n\n<style>\n.float_bottom_right {\n  position: absolute;\n  bottom: 30px;\n  right: 30px;\n}\n\n.tap-target {\n  color: #fff;\n}\n.tap-target a {\n  color: #fff;\n  text-decoration: underline;\n}\n</style>"],"sourceRoot":"src/components"}]}